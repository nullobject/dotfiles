// Generated by psc-bundle 0.8.5.0
var PS = {};
(function(exports) {// module Atom.Atom

  exports.getAtom = function() {
    return atom;
  }
})(PS["Atom.Atom"] = PS["Atom.Atom"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff

  exports.returnE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.runPure = function (f) {
    return f();
  };

  exports.whileE = function (f) {
    return function (a) {
      return function () {
        while (f()) {
          a();
        }
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Prelude

  //- Functor --------------------------------------------------------------------

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);
      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }
      return result;
    };
  };

  //- Bind -----------------------------------------------------------------------

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }
      return result;
    };
  };

  //- Monoid ---------------------------------------------------------------------

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      return xs.concat(ys);
    };
  };

  //- Eq -------------------------------------------------------------------------

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs.length !== ys.length) return false;
        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }
        return true;
      };
    };
  };                                          

  //- BooleanAlgebra -------------------------------------------------------------

  exports.boolOr = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolAnd = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };

  //- Show -----------------------------------------------------------------------

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showStringImpl = function (s) {
    var l = s.length;
    return "\"" + s.replace(
      /[\0-\x1F\x7F"\\]/g,
      function (c, i) { // jshint ignore:line
        switch (c) {
          case "\"":
          case "\\":
            return "\\" + c;
          case "\x07": return "\\a";
          case "\b": return "\\b";
          case "\f": return "\\f";
          case "\n": return "\\n";
          case "\r": return "\\r";
          case "\t": return "\\t";
          case "\v": return "\\v";
        }
        var k = i + 1;
        var empty = k < l && s[k] >= "0" && s[k] <= "9" ? "\\&" : "";
        return "\\" + c.charCodeAt(0).toString(10) + empty;
      }
    ) + "\"";
  };
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Prelude"];
  var Semigroupoid = function (compose) {
      this.compose = compose;
  };
  var Category = function (__superclass_Prelude$dotSemigroupoid_0, id) {
      this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
      this.id = id;
  };
  var Functor = function (map) {
      this.map = map;
  };
  var Apply = function (__superclass_Prelude$dotFunctor_0, apply) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.apply = apply;
  };
  var Applicative = function (__superclass_Prelude$dotApply_0, pure) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.pure = pure;
  };
  var Bind = function (__superclass_Prelude$dotApply_0, bind) {
      this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
      this.bind = bind;
  };
  var Monad = function (__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
      this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
      this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
  };
  var Semigroup = function (append) {
      this.append = append;
  };
  var Eq = function (eq) {
      this.eq = eq;
  };
  var Bounded = function (bottom, top) {
      this.bottom = bottom;
      this.top = top;
  };
  var BooleanAlgebra = function (__superclass_Prelude$dotBounded_0, conj, disj, not) {
      this["__superclass_Prelude.Bounded_0"] = __superclass_Prelude$dotBounded_0;
      this.conj = conj;
      this.disj = disj;
      this.not = not;
  };
  var Show = function (show) {
      this.show = show;
  };
  var $hash = function (x) {
      return function (f) {
          return f(x);
      };
  };                                                                           
  var unit = {};
  var top = function (dict) {
      return dict.top;
  }; 
  var showString = new Show($foreign.showStringImpl);
  var showInt = new Show($foreign.showIntImpl);
  var show = function (dict) {
      return dict.show;
  };                                                                     
  var semigroupoidFn = new Semigroupoid(function (f) {
      return function (g) {
          return function (x) {
              return f(g(x));
          };
      };
  });
  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);
  var pure = function (dict) {
      return dict.pure;
  };
  var $$return = function (dictApplicative) {
      return pure(dictApplicative);
  };
  var otherwise = true;
  var not = function (dict) {
      return dict.not;
  };
  var map = function (dict) {
      return dict.map;
  };
  var $less$dollar$greater = function (dictFunctor) {
      return map(dictFunctor);
  };
  var id = function (dict) {
      return dict.id;
  };
  var functorArray = new Functor($foreign.arrayMap);
  var flip = function (f) {
      return function (b) {
          return function (a) {
              return f(a)(b);
          };
      };
  }; 
  var eqString = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);
  var eq = function (dict) {
      return dict.eq;
  };
  var $eq$eq = function (dictEq) {
      return eq(dictEq);
  };
  var eqArray = function (dictEq) {
      return new Eq($foreign.eqArrayImpl($eq$eq(dictEq)));
  };
  var disj = function (dict) {
      return dict.disj;
  };
  var $bar$bar = function (dictBooleanAlgebra) {
      return disj(dictBooleanAlgebra);
  };
  var $$const = function (a) {
      return function (v) {
          return a;
      };
  };
  var $$void = function (dictFunctor) {
      return function (fa) {
          return $less$dollar$greater(dictFunctor)($$const(unit))(fa);
      };
  };
  var conj = function (dict) {
      return dict.conj;
  };
  var compose = function (dict) {
      return dict.compose;
  };
  var categoryFn = new Category(function () {
      return semigroupoidFn;
  }, function (x) {
      return x;
  });
  var boundedBoolean = new Bounded(false, true);
  var bottom = function (dict) {
      return dict.bottom;
  };
  var booleanAlgebraBoolean = new BooleanAlgebra(function () {
      return boundedBoolean;
  }, $foreign.boolAnd, $foreign.boolOr, $foreign.boolNot);
  var $div$eq = function (dictEq) {
      return function (x) {
          return function (y) {
              return not(booleanAlgebraBoolean)($eq$eq(dictEq)(x)(y));
          };
      };
  };
  var bind = function (dict) {
      return dict.bind;
  };
  var liftM1 = function (dictMonad) {
      return function (f) {
          return function (a) {
              return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v) {
                  return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(f(v));
              });
          };
      };
  };
  var $greater$greater$eq = function (dictBind) {
      return bind(dictBind);
  }; 
  var apply = function (dict) {
      return dict.apply;
  };
  var $less$times$greater = function (dictApply) {
      return apply(dictApply);
  };
  var liftA1 = function (dictApplicative) {
      return function (f) {
          return function (a) {
              return $less$times$greater(dictApplicative["__superclass_Prelude.Apply_0"]())(pure(dictApplicative)(f))(a);
          };
      };
  }; 
  var append = function (dict) {
      return dict.append;
  };
  var $plus$plus = function (dictSemigroup) {
      return append(dictSemigroup);
  };
  var $less$greater = function (dictSemigroup) {
      return append(dictSemigroup);
  };
  var ap = function (dictMonad) {
      return function (f) {
          return function (a) {
              return bind(dictMonad["__superclass_Prelude.Bind_1"]())(f)(function (v) {
                  return bind(dictMonad["__superclass_Prelude.Bind_1"]())(a)(function (v1) {
                      return $$return(dictMonad["__superclass_Prelude.Applicative_0"]())(v(v1));
                  });
              });
          };
      };
  };
  var monadArray = new Monad(function () {
      return applicativeArray;
  }, function () {
      return bindArray;
  });
  var bindArray = new Bind(function () {
      return applyArray;
  }, $foreign.arrayBind);
  var applyArray = new Apply(function () {
      return functorArray;
  }, ap(monadArray));
  var applicativeArray = new Applicative(function () {
      return applyArray;
  }, function (x) {
      return [ x ];
  });
  exports["Show"] = Show;
  exports["BooleanAlgebra"] = BooleanAlgebra;
  exports["Bounded"] = Bounded;
  exports["Eq"] = Eq;
  exports["Semigroup"] = Semigroup;
  exports["Monad"] = Monad;
  exports["Bind"] = Bind;
  exports["Applicative"] = Applicative;
  exports["Apply"] = Apply;
  exports["Functor"] = Functor;
  exports["Category"] = Category;
  exports["Semigroupoid"] = Semigroupoid;
  exports["show"] = show;
  exports["||"] = $bar$bar;
  exports["not"] = not;
  exports["disj"] = disj;
  exports["conj"] = conj;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["/="] = $div$eq;
  exports["=="] = $eq$eq;
  exports["eq"] = eq;
  exports["++"] = $plus$plus;
  exports["<>"] = $less$greater;
  exports["append"] = append;
  exports["ap"] = ap;
  exports["liftM1"] = liftM1;
  exports["return"] = $$return;
  exports[">>="] = $greater$greater$eq;
  exports["bind"] = bind;
  exports["liftA1"] = liftA1;
  exports["pure"] = pure;
  exports["<*>"] = $less$times$greater;
  exports["apply"] = apply;
  exports["void"] = $$void;
  exports["<$>"] = $less$dollar$greater;
  exports["map"] = map;
  exports["id"] = id;
  exports["compose"] = compose;
  exports["otherwise"] = otherwise;
  exports["const"] = $$const;
  exports["flip"] = flip;
  exports["#"] = $hash;
  exports["unit"] = unit;
  exports["semigroupoidFn"] = semigroupoidFn;
  exports["categoryFn"] = categoryFn;
  exports["functorArray"] = functorArray;
  exports["applyArray"] = applyArray;
  exports["applicativeArray"] = applicativeArray;
  exports["bindArray"] = bindArray;
  exports["monadArray"] = monadArray;
  exports["semigroupString"] = semigroupString;
  exports["semigroupArray"] = semigroupArray;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqString"] = eqString;
  exports["eqArray"] = eqArray;
  exports["boundedBoolean"] = boundedBoolean;
  exports["booleanAlgebraBoolean"] = booleanAlgebraBoolean;
  exports["showInt"] = showInt;
  exports["showString"] = showString;
})(PS["Prelude"] = PS["Prelude"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];        
  var monadEff = new Prelude.Monad(function () {
      return applicativeEff;
  }, function () {
      return bindEff;
  });
  var bindEff = new Prelude.Bind(function () {
      return applyEff;
  }, $foreign.bindE);
  var applyEff = new Prelude.Apply(function () {
      return functorEff;
  }, Prelude.ap(monadEff));
  var applicativeEff = new Prelude.Applicative(function () {
      return applyEff;
  }, $foreign.returnE);
  var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
  exports["functorEff"] = functorEff;
  exports["applyEff"] = applyEff;
  exports["applicativeEff"] = applicativeEff;
  exports["bindEff"] = bindEff;
  exports["monadEff"] = monadEff;
  exports["whileE"] = $foreign.whileE;
  exports["runPure"] = $foreign.runPure;
})(PS["Control.Monad.Eff"] = PS["Control.Monad.Eff"] || {});
(function(exports) {// module Atom.CommandRegistry

  exports.addImpl = function (cr) { return cr.add.bind(cr); }
})(PS["Atom.CommandRegistry"] = PS["Atom.CommandRegistry"] || {});
(function(exports) {// module Data.Function.Eff

  exports.mkEffFn1 = function mkEffFn1(fn) {
    return function(x) {
      return fn(x)();
    };
  };

  exports.runEffFn1 = function runEffFn1(fn) {
    return function(a) {
      return function() {
        return fn(a);
      };
    };
  };

  exports.runEffFn2 = function runEffFn2(fn) {
    return function(a) {
      return function(b) {
        return function() {
          return fn(a, b);
        };
      };
    };
  };

  exports.runEffFn3 = function runEffFn3(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function() {
            return fn(a, b, c);
          };
        };
      };
    };
  };

  exports.runEffFn4 = function runEffFn4(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return function() {
              return fn(a, b, c, d);
            };
          };
        };
      };
    };
  };

  exports.runEffFn6 = function runEffFn6(fn) {
    return function(a) {
      return function(b) {
        return function(c) {
          return function(d) {
            return function(e) {
              return function(f) {
                return function() {
                  return fn(a, b, c, d, e, f);
                };
              };
            };
          };
        };
      };
    };
  };
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Function.Eff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["runEffFn6"] = $foreign.runEffFn6;
  exports["runEffFn4"] = $foreign.runEffFn4;
  exports["runEffFn3"] = $foreign.runEffFn3;
  exports["runEffFn2"] = $foreign.runEffFn2;
  exports["runEffFn1"] = $foreign.runEffFn1;
  exports["mkEffFn1"] = $foreign.mkEffFn1;
})(PS["Data.Function.Eff"] = PS["Data.Function.Eff"] || {});
(function(exports) {
    "use strict";

  // module Unsafe.Coerce

  exports.unsafeCoerce = function(x) { return x; }
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var textToNode = Unsafe_Coerce.unsafeCoerce;                 
  var elementToParentNode = Unsafe_Coerce.unsafeCoerce;              
  var elementToNode = Unsafe_Coerce.unsafeCoerce;
  var elementToEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["textToNode"] = textToNode;
  exports["elementToEventTarget"] = elementToEventTarget;
  exports["elementToNode"] = elementToNode;
  exports["elementToParentNode"] = elementToParentNode;
})(PS["DOM.Node.Types"] = PS["DOM.Node.Types"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.CommandRegistry"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var DOM_Node_Types = PS["DOM.Node.Types"];        
  var addCommand$prime = function (cr) {
      return function (elt) {
          return function (commandName) {
              return function (callback) {
                  return Data_Function_Eff.runEffFn3($foreign.addImpl(cr))(elt)(commandName)(Data_Function_Eff.mkEffFn1(callback));
              };
          };
      };
  };
  var addCommand = function (cr) {
      return function (selector) {
          return function (commandName) {
              return function (callback) {
                  return Data_Function_Eff.runEffFn3($foreign.addImpl(cr))(selector)(commandName)(Data_Function_Eff.mkEffFn1(callback));
              };
          };
      };
  };
  exports["addCommand'"] = addCommand$prime;
  exports["addCommand"] = addCommand;
})(PS["Atom.CommandRegistry"] = PS["Atom.CommandRegistry"] || {});
(function(exports) {// module Atom.Config

  exports.getConfigImpl = function(config) { return config.get.bind(config); };
})(PS["Atom.Config"] = PS["Atom.Config"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // jshint maxparams: 1
  exports.toForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var Alt = function (__superclass_Prelude$dotFunctor_0, alt) {
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.alt = alt;
  };                                         
  var alt = function (dict) {
      return dict.alt;
  };
  var $less$bar$greater = function (dictAlt) {
      return alt(dictAlt);
  };
  exports["Alt"] = Alt;
  exports["<|>"] = $less$bar$greater;
  exports["alt"] = alt;
})(PS["Control.Alt"] = PS["Control.Alt"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Foldable

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }
        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;
        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }
        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var Monoid = function (__superclass_Prelude$dotSemigroup_0, mempty) {
      this["__superclass_Prelude.Semigroup_0"] = __superclass_Prelude$dotSemigroup_0;
      this.mempty = mempty;
  };               
  var monoidString = new Monoid(function () {
      return Prelude.semigroupString;
  }, "");  
  var mempty = function (dict) {
      return dict.mempty;
  };
  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidString"] = monoidString;
})(PS["Data.Monoid"] = PS["Data.Monoid"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Extend = PS["Control.Extend"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Nothing = (function () {
      function Nothing() {

      };
      Nothing.value = new Nothing();
      return Nothing;
  })();
  var Just = (function () {
      function Just(value0) {
          this.value0 = value0;
      };
      Just.create = function (value0) {
          return new Just(value0);
      };
      return Just;
  })();
  var maybe = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Nothing) {
                  return v;
              };
              if (v2 instanceof Just) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Maybe line 27, column 1 - line 28, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  };                                                   
  var isJust = maybe(false)(Prelude["const"](true));
  var functorMaybe = new Prelude.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Just) {
              return new Just(v(v1.value0));
          };
          return Nothing.value;
      };
  });
  var fromMaybe = function (a) {
      return maybe(a)(Prelude.id(Prelude.categoryFn));
  }; 
  var eqMaybe = function (dictEq) {
      return new Prelude.Eq(function (v) {
          return function (v1) {
              if (v instanceof Nothing && v1 instanceof Nothing) {
                  return true;
              };
              if (v instanceof Just && v1 instanceof Just) {
                  return Prelude["=="](dictEq)(v.value0)(v1.value0);
              };
              return false;
          };
      });
  };
  var applyMaybe = new Prelude.Apply(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return Prelude["<$>"](functorMaybe)(v.value0)(v1);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 122, column 3 - line 123, column 3: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindMaybe = new Prelude.Bind(function () {
      return applyMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Just) {
              return v1(v.value0);
          };
          if (v instanceof Nothing) {
              return Nothing.value;
          };
          throw new Error("Failed pattern match at Data.Maybe line 181, column 3 - line 182, column 3: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var applicativeMaybe = new Prelude.Applicative(function () {
      return applyMaybe;
  }, Just.create);
  var altMaybe = new Control_Alt.Alt(function () {
      return functorMaybe;
  }, function (v) {
      return function (v1) {
          if (v instanceof Nothing) {
              return v1;
          };
          return v;
      };
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["isJust"] = isJust;
  exports["fromMaybe"] = fromMaybe;
  exports["maybe"] = maybe;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["eqMaybe"] = eqMaybe;
})(PS["Data.Maybe"] = PS["Data.Maybe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Monoid = PS["Data.Monoid"];        
  var Disj = function (x) {
      return x;
  };
  var semigroupDisj = function (dictBooleanAlgebra) {
      return new Prelude.Semigroup(function (v) {
          return function (v1) {
              return Prelude.disj(dictBooleanAlgebra)(v)(v1);
          };
      });
  };
  var runDisj = function (v) {
      return v;
  };
  var monoidDisj = function (dictBooleanAlgebra) {
      return new Data_Monoid.Monoid(function () {
          return semigroupDisj(dictBooleanAlgebra);
      }, Prelude.bottom(dictBooleanAlgebra["__superclass_Prelude.Bounded_0"]()));
  };
  exports["Disj"] = Disj;
  exports["runDisj"] = runDisj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS["Data.Monoid.Disj"] = PS["Data.Monoid.Disj"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Foldable"];
  var Prelude = PS["Prelude"];
  var Control_Apply = PS["Control.Apply"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Endo = PS["Data.Monoid.Endo"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];        
  var Foldable = function (foldMap, foldl, foldr) {
      this.foldMap = foldMap;
      this.foldl = foldl;
      this.foldr = foldr;
  };
  var foldr = function (dict) {
      return dict.foldr;
  };
  var foldl = function (dict) {
      return dict.foldl;
  };
  var intercalate = function (dictFoldable) {
      return function (dictMonoid) {
          return function (sep) {
              return function (xs) {
                  var go = function (v) {
                      return function (x) {
                          if (v.init) {
                              return {
                                  init: false, 
                                  acc: x
                              };
                          };
                          return {
                              init: false, 
                              acc: Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(v.acc)(Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(sep)(x))
                          };
                      };
                  };
                  return (foldl(dictFoldable)(go)({
                      init: true, 
                      acc: Data_Monoid.mempty(dictMonoid)
                  })(xs)).acc;
              };
          };
      };
  }; 
  var foldMapDefaultR = function (dictFoldable) {
      return function (dictMonoid) {
          return function (f) {
              return function (xs) {
                  return foldr(dictFoldable)(function (x) {
                      return function (acc) {
                          return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(f(x))(acc);
                      };
                  })(Data_Monoid.mempty(dictMonoid))(xs);
              };
          };
      };
  };
  var foldableArray = new Foldable(function (dictMonoid) {
      return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);
  var foldMap = function (dict) {
      return dict.foldMap;
  };
  var find = function (dictFoldable) {
      return function (p) {
          return foldl(dictFoldable)(function (r) {
              return function (x) {
                  var $160 = p(x);
                  if ($160) {
                      return new Data_Maybe.Just(x);
                  };
                  if (!$160) {
                      return r;
                  };
                  throw new Error("Failed pattern match at Data.Foldable line 234, column 25 - line 234, column 50: " + [ $160.constructor.name ]);
              };
          })(Data_Maybe.Nothing.value);
      };
  };
  var any = function (dictFoldable) {
      return function (dictBooleanAlgebra) {
          return function (p) {
              return function ($164) {
                  return Data_Monoid_Disj.runDisj(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictBooleanAlgebra))(function ($165) {
                      return Data_Monoid_Disj.Disj(p($165));
                  })($164));
              };
          };
      };
  };
  var elem = function (dictFoldable) {
      return function (dictEq) {
          return function ($166) {
              return any(dictFoldable)(Prelude.booleanAlgebraBoolean)(Prelude["=="](dictEq)($166));
          };
      };
  };
  exports["Foldable"] = Foldable;
  exports["find"] = find;
  exports["elem"] = elem;
  exports["any"] = any;
  exports["intercalate"] = intercalate;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["foldMap"] = foldMap;
  exports["foldl"] = foldl;
  exports["foldr"] = foldr;
  exports["foldableArray"] = foldableArray;
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Traversable

  // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function Cont (fn) {
      this.fn = fn;
    }

    var emptyList = {};

    var ConsCell = function (head, tail) {
      this.head = head;
      this.tail = tail;
    };

    function consList (x) {
      return function (xs) {
        return new ConsCell(x, xs);
      };
    }

    function listToArray (list) {
      var arr = [];
      while (list !== emptyList) {
        arr.push(list.head);
        list = list.tail;
      }
      return arr;
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            var buildFrom = function (x, ys) {
              return apply(map(consList)(f(x)))(ys);
            };

            var go = function (acc, currentLen, xs) {
              if (currentLen === 0) {
                return acc;
              } else {
                var last = xs[currentLen - 1];
                return new Cont(function () {
                  return go(buildFrom(last, acc), currentLen - 1, xs);
                });
              }
            };

            return function (array) {
              var result = go(pure(emptyList), array.length, array);
              while (result instanceof Cont) {
                result = result.fn();
              }

              return map(listToArray)(result);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Traversable"];
  var Prelude = PS["Prelude"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Maybe_Last = PS["Data.Maybe.Last"];
  var Data_Monoid_Additive = PS["Data.Monoid.Additive"];
  var Data_Monoid_Conj = PS["Data.Monoid.Conj"];
  var Data_Monoid_Disj = PS["Data.Monoid.Disj"];
  var Data_Monoid_Dual = PS["Data.Monoid.Dual"];
  var Data_Monoid_Multiplicative = PS["Data.Monoid.Multiplicative"];
  var Traversable = function (__superclass_Data$dotFoldable$dotFoldable_1, __superclass_Prelude$dotFunctor_0, sequence, traverse) {
      this["__superclass_Data.Foldable.Foldable_1"] = __superclass_Data$dotFoldable$dotFoldable_1;
      this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
      this.sequence = sequence;
      this.traverse = traverse;
  };
  var traverse = function (dict) {
      return dict.traverse;
  };
  var sequenceDefault = function (dictTraversable) {
      return function (dictApplicative) {
          return function (tma) {
              return traverse(dictTraversable)(dictApplicative)(Prelude.id(Prelude.categoryFn))(tma);
          };
      };
  };
  var traversableArray = new Traversable(function () {
      return Data_Foldable.foldableArray;
  }, function () {
      return Prelude.functorArray;
  }, function (dictApplicative) {
      return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
      return $foreign.traverseArrayImpl(Prelude.apply(dictApplicative["__superclass_Prelude.Apply_0"]()))(Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]()))(Prelude.pure(dictApplicative));
  });
  var sequence = function (dict) {
      return dict.sequence;
  };
  exports["Traversable"] = Traversable;
  exports["sequenceDefault"] = sequenceDefault;
  exports["sequence"] = sequence;
  exports["traverse"] = traverse;
  exports["traversableArray"] = traversableArray;
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Extend = PS["Control.Extend"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Left = (function () {
      function Left(value0) {
          this.value0 = value0;
      };
      Left.create = function (value0) {
          return new Left(value0);
      };
      return Left;
  })();
  var Right = (function () {
      function Right(value0) {
          this.value0 = value0;
      };
      Right.create = function (value0) {
          return new Right(value0);
      };
      return Right;
  })();
  var functorEither = new Prelude.Functor(function (v) {
      return function (v1) {
          if (v1 instanceof Left) {
              return new Left(v1.value0);
          };
          if (v1 instanceof Right) {
              return new Right(v(v1.value0));
          };
          throw new Error("Failed pattern match at Data.Either line 53, column 3 - line 54, column 3: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var eqEither = function (dictEq) {
      return function (dictEq1) {
          return new Prelude.Eq(function (v) {
              return function (v1) {
                  if (v instanceof Left && v1 instanceof Left) {
                      return Prelude["=="](dictEq)(v.value0)(v1.value0);
                  };
                  if (v instanceof Right && v1 instanceof Right) {
                      return Prelude["=="](dictEq1)(v.value0)(v1.value0);
                  };
                  return false;
              };
          });
      };
  };
  var either = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2 instanceof Left) {
                  return v(v2.value0);
              };
              if (v2 instanceof Right) {
                  return v1(v2.value0);
              };
              throw new Error("Failed pattern match at Data.Either line 29, column 1 - line 30, column 1: " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
          };
      };
  }; 
  var applyEither = new Prelude.Apply(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return new Left(v.value0);
          };
          if (v instanceof Right) {
              return Prelude["<$>"](functorEither)(v.value0)(v1);
          };
          throw new Error("Failed pattern match at Data.Either line 93, column 3 - line 94, column 3: " + [ v.constructor.name, v1.constructor.name ]);
      };
  });
  var bindEither = new Prelude.Bind(function () {
      return applyEither;
  }, either(function (e) {
      return function (v) {
          return new Left(e);
      };
  })(function (a) {
      return function (f) {
          return f(a);
      };
  }));
  var applicativeEither = new Prelude.Applicative(function () {
      return applyEither;
  }, Right.create);
  var altEither = new Control_Alt.Alt(function () {
      return functorEither;
  }, function (v) {
      return function (v1) {
          if (v instanceof Left) {
              return v1;
          };
          return v;
      };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["applyEither"] = applyEither;
  exports["applicativeEither"] = applicativeEither;
  exports["altEither"] = altEither;
  exports["bindEither"] = bindEither;
  exports["eqEither"] = eqEither;
})(PS["Data.Either"] = PS["Data.Either"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.runFn2 = function (fn) {
    return function (a) {
      return function (b) {
        return fn(a, b);
      };
    };
  };

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Function"];
  var Prelude = PS["Prelude"];        
  var on = function (f) {
      return function (g) {
          return function (x) {
              return function (y) {
                  return f(g(x))(g(y));
              };
          };
      };
  };
  exports["on"] = on;
  exports["runFn4"] = $foreign.runFn4;
  exports["runFn2"] = $foreign.runFn2;
})(PS["Data.Function"] = PS["Data.Function"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Int

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Maybe.Unsafe

  exports.unsafeThrow = function (msg) {
    throw new Error(msg);
  };
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Maybe.Unsafe"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];        
  var fromJust = function (v) {
      if (v instanceof Data_Maybe.Just) {
          return v.value0;
      };
      if (v instanceof Data_Maybe.Nothing) {
          return $foreign.unsafeThrow("Data.Maybe.Unsafe.fromJust called on Nothing");
      };
      throw new Error("Failed pattern match at Data.Maybe.Unsafe line 11, column 1 - line 12, column 1: " + [ v.constructor.name ]);
  };
  exports["fromJust"] = fromJust;
})(PS["Data.Maybe.Unsafe"] = PS["Data.Maybe.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Int"];
  var Prelude = PS["Prelude"];
  var Data_Int_Bits = PS["Data.Int.Bits"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var $$Math = PS["Math"];                                                                   
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["fromNumber"] = fromNumber;
  exports["toNumber"] = $foreign.toNumber;
})(PS["Data.Int"] = PS["Data.Int"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.length = function (s) {
    return s.length;
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.trim = function (s) {
    return s.trim();
  };
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.String"];
  var Prelude = PS["Prelude"];
  var Data_Char = PS["Data.Char"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_String_Unsafe = PS["Data.String.Unsafe"];
  var $$null = function (s) {
      return $foreign.length(s) === 0;
  };                                                                                          
  var indexOf = $foreign._indexOf(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var contains = function (x) {
      return function (s) {
          return Data_Maybe.isJust(indexOf(x)(s));
      };
  };
  exports["null"] = $$null;
  exports["indexOf"] = indexOf;
  exports["contains"] = contains;
  exports["trim"] = $foreign.trim;
  exports["split"] = $foreign.split;
  exports["take"] = $foreign.take;
  exports["length"] = $foreign.length;
})(PS["Data.String"] = PS["Data.String"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Foreign"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_Int_1 = PS["Data.Int"];
  var Data_Int_1 = PS["Data.Int"];
  var Data_String = PS["Data.String"];        
  var TypeMismatch = (function () {
      function TypeMismatch(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      TypeMismatch.create = function (value0) {
          return function (value1) {
              return new TypeMismatch(value0, value1);
          };
      };
      return TypeMismatch;
  })();
  var ErrorAtIndex = (function () {
      function ErrorAtIndex(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtIndex.create = function (value0) {
          return function (value1) {
              return new ErrorAtIndex(value0, value1);
          };
      };
      return ErrorAtIndex;
  })();
  var ErrorAtProperty = (function () {
      function ErrorAtProperty(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      ErrorAtProperty.create = function (value0) {
          return function (value1) {
              return new ErrorAtProperty(value0, value1);
          };
      };
      return ErrorAtProperty;
  })();
  var JSONError = (function () {
      function JSONError(value0) {
          this.value0 = value0;
      };
      JSONError.create = function (value0) {
          return new JSONError(value0);
      };
      return JSONError;
  })();
  var unsafeReadTagged = function (tag) {
      return function (value) {
          if ($foreign.tagOf(value) === tag) {
              return Prelude.pure(Data_Either.applicativeEither)($foreign.unsafeFromForeign(value));
          };
          return new Data_Either.Left(new TypeMismatch(tag, $foreign.tagOf(value)));
      };
  }; 
  var readString = unsafeReadTagged("String");
  var readNumber = unsafeReadTagged("Number");
  var readInt = function (value) {
      var error = Data_Either.Left.create(new TypeMismatch("Int", $foreign.tagOf(value)));
      var fromNumber = function ($30) {
          return Data_Maybe.maybe(error)(Prelude.pure(Data_Either.applicativeEither))(Data_Int_1.fromNumber($30));
      };
      return Data_Either.either(Prelude["const"](error))(fromNumber)(readNumber(value));
  };
  var readBoolean = unsafeReadTagged("Boolean");
  var eqForeignError = new Prelude.Eq(function (v) {
      return function (v1) {
          if (v instanceof TypeMismatch && v1 instanceof TypeMismatch) {
              return v.value0 === v1.value0 && v.value1 === v1.value1;
          };
          if (v instanceof ErrorAtIndex && v1 instanceof ErrorAtIndex) {
              return v.value0 === v1.value0 && Prelude["=="](eqForeignError)(v.value1)(v1.value1);
          };
          if (v instanceof ErrorAtProperty && v1 instanceof ErrorAtProperty) {
              return v.value0 === v1.value0 && Prelude["=="](eqForeignError)(v.value1)(v1.value1);
          };
          if (v instanceof JSONError && v1 instanceof JSONError) {
              return v.value0 === v1.value0;
          };
          return false;
      };
  });
  exports["TypeMismatch"] = TypeMismatch;
  exports["ErrorAtIndex"] = ErrorAtIndex;
  exports["ErrorAtProperty"] = ErrorAtProperty;
  exports["JSONError"] = JSONError;
  exports["readInt"] = readInt;
  exports["readNumber"] = readNumber;
  exports["readBoolean"] = readBoolean;
  exports["readString"] = readString;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["eqForeignError"] = eqForeignError;
  exports["toForeign"] = $foreign.toForeign;
})(PS["Data.Foreign"] = PS["Data.Foreign"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Config"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Foreign = PS["Data.Foreign"];
  var getConfig = function ($1) {
      return Data_Function_Eff.runEffFn1($foreign.getConfigImpl($1));
  };
  exports["getConfig"] = getConfig;
})(PS["Atom.Config"] = PS["Atom.Config"] || {});
(function(exports) {// module Atom.NotificationManager

  exports.addSuccess = function addSuccess(nm) {
    return function(message) {
      return function() {
        nm.addSuccess(message);
      };
    };
  };

  exports.addInfo = function addInfo(nm) {
    return function(message) {
      return function() {
        nm.addInfo(message);
      };
    };
  };

  exports.addWarning = function addWarning(nm) {
    return function(message) {
      return function() {
        nm.addWarning(message);
      };
    };
  };

  exports.addError = function addError(nm) {
    return function(message) {
      return function() {
        nm.addError(message);
      };
    };
  };
})(PS["Atom.NotificationManager"] = PS["Atom.NotificationManager"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.NotificationManager"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["addError"] = $foreign.addError;
  exports["addWarning"] = $foreign.addWarning;
  exports["addInfo"] = $foreign.addInfo;
  exports["addSuccess"] = $foreign.addSuccess;
})(PS["Atom.NotificationManager"] = PS["Atom.NotificationManager"] || {});
(function(exports) {// module Atom.Project

  exports.getPaths = function(project) {
    return function() {
      return project.getPaths();
    };
  };
})(PS["Atom.Project"] = PS["Atom.Project"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Project"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["getPaths"] = $foreign.getPaths;
})(PS["Atom.Project"] = PS["Atom.Project"] || {});
(function(exports) {// module Atom.Workspace

  exports.observeTextEditorsImpl = function (w) { return w.observeTextEditors.bind(w); };

  exports.onDidChangeActivePaneItemImpl = function (w) { return w.onDidChangeActivePaneItem.bind(w); };

  exports.getActiveTextEditorImpl = function (w) {
    return function() {
      return w.getActiveTextEditor();
    };
  };

  exports.addModalPanelImpl = function (w) {
    return w.addModalPanel.bind(w);
  };

  exports.destroyPanel = function (p) {
    return function() {
      p.destroy();
    };
  };

  exports.openImpl = function (w) {
    return function (name, opt, cb, err) {
      return w.open(name,opt).then(cb, err);
    };
  };

  exports.addOpenerImpl = function (w) {
    return w.addOpener.bind(w);
  };

  exports.paneForItemImpl = function (w) {
    return w.paneForItem.bind(w);
  };
})(PS["Atom.Workspace"] = PS["Atom.Workspace"] || {});
(function(exports) {                                                                       
  exports.getPathImpl = function (e) { return function () { return e.getPath(); }; };

  exports.getText = function (e) { return function () { return e.getText(); }; };
  exports.getTextInRangeImpl = function(e) {
    return e.getTextInBufferRange.bind(e);
  };
  exports.getSelectedText = function (e) { return function () { return e.getSelectedText(); }; };

  exports.setTextInBufferRangeImpl = function(e) { return e.setTextInBufferRange.bind(e); }
  exports.setTextImpl = function(e) { return e.setText.bind(e); }      


  exports.onDidSaveImpl = function(e) { return e.onDidSave.bind(e); };

  exports.getCursorBufferPosition = function (e) { return function () { return e.getCursorBufferPosition(); }; };
  exports.moveDownImpl = function (e) { return e.moveDown.bind(e); };

  exports.moveToBeginningOfLine = function(e) { return function () { return e.moveToBeginningOfLine(); }; };

  exports.isTextEditor = function (item) {
    var TextEditor = require('atom').TextEditor;
    return item instanceof TextEditor;
  };

  exports.getBuffer = function (editor) {
    return function() {
      return editor.getBuffer();
    };
  };
})(PS["Atom.Editor"] = PS["Atom.Editor"] || {});
(function(exports) {// module Atom.Point

  exports.getRow = function(p) { return p.row; };
  exports.getColumn = function(p) { return p.column; };
  exports.mkPoint = function (x) {
    return function (y) {
      var Point = require('atom').Point;
      return new Point(x,y);
    };
  };
})(PS["Atom.Point"] = PS["Atom.Point"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Point"];
  exports["mkPoint"] = $foreign.mkPoint;
  exports["getColumn"] = $foreign.getColumn;
  exports["getRow"] = $foreign.getRow;
})(PS["Atom.Point"] = PS["Atom.Point"] || {});
(function(exports) {// module Atom.Range

  exports.getStart = function(r) {
    return r.start;
  };
  exports.getEnd = function(r) {
    return r.end;
  };
  exports.mkRangeImpl = function(p1, p2) {
    var Range = require('atom').Range;
    return new Range(p1,p2);
  };
  exports.containsPoint = function (r) {
    return function(p) {
      return r.containsPoint(p);
    };
  };
})(PS["Atom.Range"] = PS["Atom.Range"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Range"];
  var Data_Function = PS["Data.Function"];
  var Atom_Point = PS["Atom.Point"];        
  var mkRange = Data_Function.runFn2($foreign.mkRangeImpl);
  exports["mkRange"] = mkRange;
  exports["containsPoint"] = $foreign.containsPoint;
  exports["getEnd"] = $foreign.getEnd;
  exports["getStart"] = $foreign.getStart;
})(PS["Atom.Range"] = PS["Atom.Range"] || {});
(function(exports) {// module Atom.TextBuffer

  exports.setTextViaDiffImpl = function(e) { return e.setTextViaDiff.bind(e); }
})(PS["Atom.TextBuffer"] = PS["Atom.TextBuffer"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.TextBuffer"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Atom_Types = PS["Atom.Types"];
  var Atom_Range = PS["Atom.Range"];
  var Data_Function_Eff = PS["Data.Function.Eff"];        
  var setTextViaDiff = function ($0) {
      return Data_Function_Eff.runEffFn1($foreign.setTextViaDiffImpl($0));
  };
  exports["setTextViaDiff"] = setTextViaDiff;
})(PS["Atom.TextBuffer"] = PS["Atom.TextBuffer"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Editor"];
  var Prelude = PS["Prelude"];
  var Atom_Grammar = PS["Atom.Grammar"];
  var Atom_Point = PS["Atom.Point"];
  var Atom_Range = PS["Atom.Range"];
  var Atom_TextBuffer = PS["Atom.TextBuffer"];
  var Atom_Types = PS["Atom.Types"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var toEditor = function (item) {
      var $2 = $foreign.isTextEditor(item);
      if ($2) {
          return new Data_Maybe.Just(Unsafe_Coerce.unsafeCoerce(item));
      };
      if (!$2) {
          return Data_Maybe.Nothing.value;
      };
      throw new Error("Failed pattern match at Atom.Editor line 98, column 3 - line 103, column 1: " + [ $2.constructor.name ]);
  };
  var setTextInBufferRange$prime = function (editor) {
      return function (range) {
          return function (text) {
              return function (v) {
                  var undo = (function () {
                      if (v.skipUndo) {
                          return "skip";
                      };
                      if (!v.skipUndo) {
                          return "";
                      };
                      throw new Error("Failed pattern match at Atom.Editor line 53, column 14 - line 54, column 3: " + [ v.skipUndo.constructor.name ]);
                  })();
                  return Data_Function_Eff.runEffFn3($foreign.setTextInBufferRangeImpl(editor))(range)(text)({
                      normalizeLineEndings: v.normalizeLineEndings, 
                      undo: undo
                  });
              };
          };
      };
  };
  var setTextInBufferRange = function (editor) {
      return function (range) {
          return function (text) {
              return setTextInBufferRange$prime(editor)(range)(text)({
                  normalizeLineEndings: true, 
                  skipUndo: false
              });
          };
      };
  };
  var setText = function ($11) {
      return Data_Function_Eff.runEffFn1($foreign.setTextImpl($11));
  };
  var onDidSave = function (e) {
      return function (f) {
          return Data_Function_Eff.runEffFn1($foreign.onDidSaveImpl(e))(Data_Function_Eff.mkEffFn1(f));
      };
  };
  var moveDown = function ($13) {
      return Data_Function_Eff.runEffFn1($foreign.moveDownImpl($13));
  };
  var getTextInRange = function ($15) {
      return Data_Function_Eff.runEffFn1($foreign.getTextInRangeImpl($15));
  };
  var getPath = function (editor) {
      return function __do() {
          var v = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readString)($foreign.getPathImpl(editor))();
          return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(v);
      };
  };
  exports["moveDown"] = moveDown;
  exports["onDidSave"] = onDidSave;
  exports["toEditor"] = toEditor;
  exports["setText"] = setText;
  exports["setTextInBufferRange"] = setTextInBufferRange;
  exports["getTextInRange"] = getTextInRange;
  exports["getPath"] = getPath;
  exports["moveToBeginningOfLine"] = $foreign.moveToBeginningOfLine;
  exports["getCursorBufferPosition"] = $foreign.getCursorBufferPosition;
  exports["getBuffer"] = $foreign.getBuffer;
  exports["getSelectedText"] = $foreign.getSelectedText;
  exports["getText"] = $foreign.getText;
})(PS["Atom.Editor"] = PS["Atom.Editor"] || {});
(function(exports) {// module Atom.Pane

  exports.destroyItemImpl = function (p) {
    return p.destroyItem.bind(p);
  };
})(PS["Atom.Pane"] = PS["Atom.Pane"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Pane"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function_Eff = PS["Data.Function.Eff"];        
  var destroyItem = function ($0) {
      return Data_Function_Eff.runEffFn1($foreign.destroyItemImpl($0));
  };
  exports["destroyItem"] = destroyItem;
})(PS["Atom.Pane"] = PS["Atom.Pane"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.Nullable

  exports["null"] = null;

  exports.nullable = function(a, r, f) {
      return a == null ? r : f(a);
  };

  exports.notNull = function(x) {
      return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];        
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);
  var toMaybe = function (n) {
      return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };
  exports["toNullable"] = toNullable;
  exports["toMaybe"] = toMaybe;
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Workspace"];
  var Prelude = PS["Prelude"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_Pane = PS["Atom.Pane"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var paneForItem = function (w) {
      return function (a) {
          return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(Data_Function_Eff.runEffFn1($foreign.paneForItemImpl(w))(a));
      };
  };
  var open = function (w) {
      return function (s) {
          return function (o) {
              return function (cb) {
                  return function (err) {
                      return Data_Function_Eff.runEffFn4($foreign.openImpl(w))(s)(o)(Data_Function_Eff.mkEffFn1(cb))(err);
                  };
              };
          };
      };
  };
  var onDidChangeActivePaneItem = function (w) {
      return function (f) {
          return Data_Function_Eff.runEffFn1($foreign.onDidChangeActivePaneItemImpl(w))(Data_Function_Eff.mkEffFn1(f));
      };
  };
  var observeTextEditors = function (w) {
      return function (f) {
          return Data_Function_Eff.runEffFn1($foreign.observeTextEditorsImpl(w))(Data_Function_Eff.mkEffFn1(f));
      };
  };
  var getActiveTextEditor = function (w) {
      return Prelude["<$>"](Control_Monad_Eff.functorEff)(Atom_Editor.toEditor)($foreign.getActiveTextEditorImpl(w));
  };
  var defaultOpenOptions = {
      initialLine: 0, 
      initialColumn: 0, 
      split: "left", 
      activatePane: true, 
      activateItem: true, 
      pending: false, 
      searchAllPanes: false
  };
  var addOpener = function (w) {
      return function (f) {
          return Data_Function_Eff.runEffFn1($foreign.addOpenerImpl(w))(Data_Function_Eff.mkEffFn1(f));
      };
  };
  var addModalPanel = function (w) {
      return function (item) {
          return function (visible) {
              return function (priority) {
                  return Data_Function_Eff.runEffFn1($foreign.addModalPanelImpl(w))({
                      item: item, 
                      visible: visible, 
                      priority: priority
                  });
              };
          };
      };
  };
  exports["paneForItem"] = paneForItem;
  exports["addOpener"] = addOpener;
  exports["defaultOpenOptions"] = defaultOpenOptions;
  exports["open"] = open;
  exports["addModalPanel"] = addModalPanel;
  exports["getActiveTextEditor"] = getActiveTextEditor;
  exports["onDidChangeActivePaneItem"] = onDidChangeActivePaneItem;
  exports["observeTextEditors"] = observeTextEditors;
  exports["destroyPanel"] = $foreign.destroyPanel;
})(PS["Atom.Workspace"] = PS["Atom.Workspace"] || {});
(function(exports) {

  exports.grammarForScopeName = function(gr) {
    return function (s) {
      return function() {
        return gr.grammarForScopeName(s);
      };
    };
  };
})(PS["Atom.GrammarRegistry"] = PS["Atom.GrammarRegistry"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.GrammarRegistry"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Atom_Grammar = PS["Atom.Grammar"];
  exports["grammarForScopeName"] = $foreign.grammarForScopeName;
})(PS["Atom.GrammarRegistry"] = PS["Atom.GrammarRegistry"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Atom.Atom"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Atom_Clipboard = PS["Atom.Clipboard"];
  var Atom_CommandRegistry = PS["Atom.CommandRegistry"];
  var Atom_Config = PS["Atom.Config"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_Project = PS["Atom.Project"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Atom_GrammarRegistry = PS["Atom.GrammarRegistry"];
  exports["getAtom"] = $foreign.getAtom;
})(PS["Atom.Atom"] = PS["Atom.Atom"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var $greater$eq$greater = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return Prelude[">>="](dictBind)(f(a))(g);
              };
          };
      };
  };
  var $eq$less$less = function (dictBind) {
      return function (f) {
          return function (m) {
              return Prelude[">>="](dictBind)(m)(f);
          };
      };
  };
  var $less$eq$less = function (dictBind) {
      return function (f) {
          return function (g) {
              return function (a) {
                  return $eq$less$less(dictBind)(f)(g(a));
              };
          };
      };
  };
  var join = function (dictBind) {
      return function (m) {
          return Prelude[">>="](dictBind)(m)(Prelude.id(Prelude.categoryFn));
      };
  };
  exports["join"] = join;
  exports["<=<"] = $less$eq$less;
  exports[">=>"] = $greater$eq$greater;
})(PS["Control.Bind"] = PS["Control.Bind"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var when = function (dictMonad) {
      return function (v) {
          return function (v1) {
              if (v) {
                  return v1;
              };
              if (!v) {
                  return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Prelude.unit);
              };
              throw new Error("Failed pattern match at Control.Monad line 9, column 1 - line 10, column 1: " + [ v.constructor.name, v1.constructor.name ]);
          };
      };
  };
  exports["when"] = when;
})(PS["Control.Monad"] = PS["Control.Monad"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Aff

  exports._cancelWith = function (nonCanceler, aff, canceler1) {
    return function(success, error) {
      var canceler2 = aff(success, error);

      return function(e) {
        return function(success, error) {
          var cancellations = 0;
          var result        = false;
          var errored       = false;

          var s = function(bool) {
            cancellations = cancellations + 1;
            result        = result || bool;

            if (cancellations === 2 && !errored) {
              try {
                success(result);
              } catch (err) {
                error(err);
              }
            }
          };

          var f = function(err) {
            if (!errored) {
              errored = true;

              error(err);
            }
          };

          canceler2(e)(s, f);
          canceler1(e)(s, f);

          return nonCanceler;
        };
      };
    };
  }

  exports._setTimeout = function (nonCanceler, millis, aff) {
    var set = setTimeout, clear = clearTimeout;
    if (millis <= 0 && typeof setImmediate === "function") {
      set = setImmediate;
      clear = clearImmediate;
    }
    return function(success, error) {
      var canceler;

      var timeout = set(function() {
        canceler = aff(success, error);
      }, millis);

      return function(e) {
        return function(s, f) {
          if (canceler !== undefined) {
            return canceler(e)(s, f);
          } else {
            clear(timeout);

            try {
              s(true);
            } catch (err) {
              f(err);
            }

            return nonCanceler;
          }
        };
      };
    };
  }

  exports._unsafeInterleaveAff = function (aff) {
    return aff;
  }

  exports._forkAff = function (nonCanceler, aff) {
    var voidF = function(){};

    return function(success, error) {
      var canceler = aff(voidF, voidF);

      try {
        success(canceler);
      } catch (err) {
        error(err);
      }

      return nonCanceler;
    };
  }

  exports._makeAff = function (cb) {
    return function(success, error) {
      return cb(function(e) {
        return function() {
          error(e);
        };
      })(function(v) {
        return function() {
          try {
            success(v);
          } catch (err) {
            error(err);
          }
        };
      })();
    }
  }

  exports._pure = function (nonCanceler, v) {
    return function(success, error) {
      try {
        success(v);
      } catch (err) {
        error(err);
      }

      return nonCanceler;
    };
  }

  exports._throwError = function (nonCanceler, e) {
    return function(success, error) {
      error(e);

      return nonCanceler;
    };
  }

  exports._fmap = function (f, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(f(v));
        } catch (err) {
          error(err);
        }
      }, error);
    };
  }

  exports._bind = function (alwaysCanceler, aff, f) {
    return function(success, error) {
      var canceler1, canceler2;

      var isCanceled    = false;
      var requestCancel = false;

      var onCanceler = function(){};

      canceler1 = aff(function(v) {
        if (requestCancel) {
          isCanceled = true;

          return alwaysCanceler;
        } else {
          canceler2 = f(v)(success, error);

          onCanceler(canceler2);

          return canceler2;
        }
      }, error);

      return function(e) {
        return function(s, f) {
          requestCancel = true;

          if (canceler2 !== undefined) {
            return canceler2(e)(s, f);
          } else {
            return canceler1(e)(function(bool) {
              if (bool || isCanceled) {
                try {
                  s(true);
                } catch (err) {
                  f(err);
                }
              } else {
                onCanceler = function(canceler) {
                  canceler(e)(s, f);
                };
              }
            }, f);
          }
        };
      };
    };
  }

  exports._attempt = function (Left, Right, aff) {
    return function(success, error) {
      return aff(function(v) {
        try {
          success(Right(v));
        } catch (err) {
          error(err);
        }
      }, function(e) {
        try {
          success(Left(e));
        } catch (err) {
          error(err);
        }
      });
    };
  }

  exports._runAff = function (errorT, successT, aff) {
    return function() {
      return aff(function(v) {
        try {
          successT(v)();
        } catch (err) {
          errorT(err)();
        }
      }, function(e) {
        errorT(e)();
      });
    };
  }

  exports._liftEff = function (nonCanceler, e) {
    return function(success, error) {
      try {
        success(e());
      } catch (err) {
        error(err);
      }

      return nonCanceler;
    };
  }
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var MonadEff = function (__superclass_Prelude$dotMonad_0, liftEff) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.liftEff = liftEff;
  };
  var monadEffEff = new MonadEff(function () {
      return Control_Monad_Eff.monadEff;
  }, Prelude.id(Prelude.categoryFn));
  var liftEff = function (dict) {
      return dict.liftEff;
  };
  exports["MonadEff"] = MonadEff;
  exports["liftEff"] = liftEff;
  exports["monadEffEff"] = monadEffEff;
})(PS["Control.Monad.Eff.Class"] = PS["Control.Monad.Eff.Class"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Exception

  exports.showErrorImpl = function (err) {
    return err.stack || err.toString();
  };

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };

  exports.catchException = function (c) {
    return function (t) {
      return function () {
        try {
          return t();
        } catch (e) {
          if (e instanceof Error || Object.prototype.toString.call(e) === "[object Error]") {
            return c(e)();
          } else {
            return c(new Error(e.toString()))();
          }
        }
      };
    };
  };
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Exception"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var $$throw = function ($0) {
      return $foreign.throwException($foreign.error($0));
  };                                                                               
  var showError = new Prelude.Show($foreign.showErrorImpl);
  exports["throw"] = $$throw;
  exports["showError"] = showError;
  exports["catchException"] = $foreign.catchException;
  exports["throwException"] = $foreign.throwException;
  exports["error"] = $foreign.error;
})(PS["Control.Monad.Eff.Exception"] = PS["Control.Monad.Eff.Exception"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];        
  var MonadError = function (__superclass_Prelude$dotMonad_0, catchError, throwError) {
      this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
      this.catchError = catchError;
      this.throwError = throwError;
  };
  var throwError = function (dict) {
      return dict.throwError;
  };                          
  var catchError = function (dict) {
      return dict.catchError;
  };
  exports["MonadError"] = MonadError;
  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
})(PS["Control.Monad.Error.Class"] = PS["Control.Monad.Error.Class"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Aff"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Monoid = PS["Data.Monoid"];
  var runAff = function (ex) {
      return function (f) {
          return function (aff) {
              return $foreign._runAff(ex, f, aff);
          };
      };
  };
  var makeAff$prime = function (h) {
      return $foreign._makeAff(h);
  };
  var launchAff = function ($20) {
      return runAff(Control_Monad_Eff_Exception.throwException)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))($foreign._unsafeInterleaveAff($20));
  };
  var functorAff = new Prelude.Functor(function (f) {
      return function (fa) {
          return $foreign._fmap(f, fa);
      };
  });
  var attempt = function (aff) {
      return $foreign._attempt(Data_Either.Left.create, Data_Either.Right.create, aff);
  };
  var applyAff = new Prelude.Apply(function () {
      return functorAff;
  }, function (ff) {
      return function (fa) {
          return $foreign._bind(alwaysCanceler, ff, function (f) {
              return Prelude["<$>"](functorAff)(f)(fa);
          });
      };
  });
  var applicativeAff = new Prelude.Applicative(function () {
      return applyAff;
  }, function (v) {
      return $foreign._pure(nonCanceler, v);
  });
  var nonCanceler = Prelude["const"](Prelude.pure(applicativeAff)(false));
  var alwaysCanceler = Prelude["const"](Prelude.pure(applicativeAff)(true));
  var cancelWith = function (aff) {
      return function (c) {
          return $foreign._cancelWith(nonCanceler, aff, c);
      };
  };
  var forkAff = function (aff) {
      return $foreign._forkAff(nonCanceler, aff);
  };
  var later$prime = function (n) {
      return function (aff) {
          return $foreign._setTimeout(nonCanceler, n, aff);
      };
  };
  var makeAff = function (h) {
      return makeAff$prime(function (e) {
          return function (a) {
              return Prelude["<$>"](Control_Monad_Eff.functorEff)(Prelude["const"](nonCanceler))(h(e)(a));
          };
      });
  };
  var semigroupCanceler = new Prelude.Semigroup(function (v) {
      return function (v1) {
          return function (e) {
              return Prelude["<*>"](applyAff)(Prelude["<$>"](functorAff)(Prelude["||"](Prelude.booleanAlgebraBoolean))(v(e)))(v1(e));
          };
      };
  });                                                      
  var bindAff = new Prelude.Bind(function () {
      return applyAff;
  }, function (fa) {
      return function (f) {
          return $foreign._bind(alwaysCanceler, fa, f);
      };
  });
  var monadAff = new Prelude.Monad(function () {
      return applicativeAff;
  }, function () {
      return bindAff;
  });
  var monadEffAff = new Control_Monad_Eff_Class.MonadEff(function () {
      return monadAff;
  }, function (eff) {
      return $foreign._liftEff(nonCanceler, eff);
  });
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
      return monadAff;
  }, function (aff) {
      return function (ex) {
          return Prelude[">>="](bindAff)(attempt(aff))(Data_Either.either(ex)(Prelude.pure(applicativeAff)));
      };
  }, function (e) {
      return $foreign._throwError(nonCanceler, e);
  });
  exports["runAff"] = runAff;
  exports["nonCanceler"] = nonCanceler;
  exports["makeAff"] = makeAff;
  exports["launchAff"] = launchAff;
  exports["later'"] = later$prime;
  exports["forkAff"] = forkAff;
  exports["cancelWith"] = cancelWith;
  exports["attempt"] = attempt;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadEffAff"] = monadEffAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["semigroupCanceler"] = semigroupCanceler;
})(PS["Control.Monad.Aff"] = PS["Control.Monad.Aff"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Aff.AVar

  exports._makeVar = function (nonCanceler) {
    return function(success, error) {
      try {
        success({
          consumers: [],
          producers: [],
          error: undefined
        });
      } catch (err) {
        error(err);
      }

      return nonCanceler;
    }
  }

  exports._takeVar = function (nonCanceler, avar) {
    return function(success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.producers.length > 0) {
        var producer = avar.producers.shift();

        producer(success, error);
      } else {
        avar.consumers.push({success: success, error: error});
      }

      return nonCanceler;
    }
  }

  exports._putVar = function (nonCanceler, avar, a) {
    return function(success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else if (avar.consumers.length === 0) {
        avar.producers.push(function(success, error) {
          try {
            success(a);
          } catch (err) {
            error(err);
          }
        });

        success({});
      } else {
        var consumer = avar.consumers.shift();

        try {
          consumer.success(a);
        } catch (err) {
          error(err);

          return;
        }

        success({});
      }

      return nonCanceler;
    }
  }

  exports._killVar = function (nonCanceler, avar, e) {
    return function(success, error) {
      if (avar.error !== undefined) {
        error(avar.error);
      } else {
        var errors = [];

        avar.error = e;

        while (avar.consumers.length > 0) {
          var consumer = avar.consumers.shift();

          try {
            consumer.error(e);
          } catch (err) {
            errors.push(err);
          }
        }

        if (errors.length > 0) error(errors[0]);
        else success({});
      }

      return nonCanceler;
    }
  }
})(PS["Control.Monad.Aff.AVar"] = PS["Control.Monad.Aff.AVar"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Aff.AVar"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Function = PS["Data.Function"];        
  var takeVar = function (q) {
      return $foreign._takeVar(Control_Monad_Aff.nonCanceler, q);
  };
  var putVar = function (q) {
      return function (a) {
          return $foreign._putVar(Control_Monad_Aff.nonCanceler, q, a);
      };
  };
  var makeVar = $foreign._makeVar(Control_Monad_Aff.nonCanceler);
  var makeVar$prime = function (a) {
      return Prelude.bind(Control_Monad_Aff.bindAff)(makeVar)(function (v) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(putVar(v)(a))(function () {
              return Prelude["return"](Control_Monad_Aff.applicativeAff)(v);
          });
      });
  };
  var killVar = function (q) {
      return function (e) {
          return $foreign._killVar(Control_Monad_Aff.nonCanceler, q, e);
      };
  };
  exports["takeVar"] = takeVar;
  exports["putVar"] = putVar;
  exports["makeVar'"] = makeVar$prime;
  exports["makeVar"] = makeVar;
  exports["killVar"] = killVar;
})(PS["Control.Monad.Aff.AVar"] = PS["Control.Monad.Aff.AVar"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Either = PS["Data.Either"];
  var Data_Monoid = PS["Data.Monoid"];
  var runPar = function (v) {
      return v;
  };
  var functorPar = new Prelude.Functor(function (f) {
      return function (v) {
          return Prelude["<$>"](Control_Monad_Aff.functorAff)(f)(v);
      };
  });
  var altPar = new Control_Alt.Alt(function () {
      return functorPar;
  }, function (v) {
      return function (v1) {
          var maybeKill = function (va) {
              return function (ve) {
                  return function (err) {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.takeVar(ve))(function (v2) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)((function () {
                              var $29 = v2 === 1;
                              if ($29) {
                                  return Control_Monad_Aff_AVar.killVar(va)(err);
                              };
                              if (!$29) {
                                  return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.unit);
                              };
                              throw new Error("Failed pattern match at Control.Monad.Aff.Par line 51, column 10 - line 52, column 10: " + [ $29.constructor.name ]);
                          })())(function () {
                              return Control_Monad_Aff_AVar.putVar(ve)(v2 + 1 | 0);
                          });
                      });
                  };
              };
          };
          return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar.makeVar)(function (v2) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff_AVar["makeVar'"](0))(function (v3) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Prelude[">>="](Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(v))(Data_Either.either(maybeKill(v2)(v3))(Control_Monad_Aff_AVar.putVar(v2)))))(function (v4) {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.forkAff(Prelude[">>="](Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(v1))(Data_Either.either(maybeKill(v2)(v3))(Control_Monad_Aff_AVar.putVar(v2)))))(function (v5) {
                          return Control_Monad_Aff.cancelWith(Control_Monad_Aff_AVar.takeVar(v2))(Prelude["<>"](Control_Monad_Aff.semigroupCanceler)(v4)(v5));
                      });
                  });
              });
          });
      };
  });
  exports["runPar"] = runPar;
  exports["functorPar"] = functorPar;
  exports["altPar"] = altPar;
})(PS["Control.Monad.Aff.Par"] = PS["Control.Monad.Aff.Par"] || {});
(function(exports) {
  /* global exports, console */
  "use strict";

  // module Control.Monad.Eff.Console

  exports.log = function (s) {
    return function () {
      console.log(s);
      return {};
    };
  };

  exports.error = function (s) {
    return function () {
      console.error(s);
      return {};
    };
  };
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Console"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  exports["error"] = $foreign.error;
  exports["log"] = $foreign.log;
})(PS["Control.Monad.Eff.Console"] = PS["Control.Monad.Eff.Console"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Unsafe

  exports.unsafeInterleaveEff = function (f) {
    return f;
  };
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Unsafe"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var unsafePerformEff = function ($0) {
      return Control_Monad_Eff.runPure($foreign.unsafeInterleaveEff($0));
  };
  exports["unsafePerformEff"] = unsafePerformEff;
  exports["unsafeInterleaveEff"] = $foreign.unsafeInterleaveEff;
})(PS["Control.Monad.Eff.Unsafe"] = PS["Control.Monad.Eff.Unsafe"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];        
  var unsafeThrowException = function ($0) {
      return Control_Monad_Eff_Unsafe.unsafePerformEff(Control_Monad_Eff_Exception.throwException($0));
  };
  var unsafeThrow = function ($1) {
      return unsafeThrowException(Control_Monad_Eff_Exception.error($1));
  };
  exports["unsafeThrow"] = unsafeThrow;
  exports["unsafeThrowException"] = unsafeThrowException;
})(PS["Control.Monad.Eff.Exception.Unsafe"] = PS["Control.Monad.Eff.Exception.Unsafe"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Control.Monad.Eff.Ref

  exports.newRef = function (val) {
    return function () {
      return { value: val };
    };
  };

  exports.readRef = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modifyRef'"] = function (ref) {
    return function (f) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.writeRef = function (ref) {
    return function (val) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Monad.Eff.Ref"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var modifyRef = function (ref) {
      return function (f) {
          return $foreign["modifyRef'"](ref)(function (s) {
              return {
                  state: f(s), 
                  value: Prelude.unit
              };
          });
      };
  };
  exports["modifyRef"] = modifyRef;
  exports["writeRef"] = $foreign.writeRef;
  exports["readRef"] = $foreign.readRef;
  exports["newRef"] = $foreign.newRef;
})(PS["Control.Monad.Eff.Ref"] = PS["Control.Monad.Eff.Ref"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Biapplicative = PS["Control.Biapplicative"];
  var Control_Biapply = PS["Control.Biapply"];
  var Control_Comonad = PS["Control.Comonad"];
  var Control_Extend = PS["Control.Extend"];
  var Control_Lazy = PS["Control.Lazy"];
  var Data_Bifoldable = PS["Data.Bifoldable"];
  var Data_Bifunctor = PS["Data.Bifunctor"];
  var Data_Bitraversable = PS["Data.Bitraversable"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_First = PS["Data.Maybe.First"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];        
  var Tuple = (function () {
      function Tuple(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Tuple.create = function (value0) {
          return function (value1) {
              return new Tuple(value0, value1);
          };
      };
      return Tuple;
  })();
  var uncurry = function (f) {
      return function (v) {
          return f(v.value0)(v.value1);
      };
  };
  var functorTuple = new Prelude.Functor(function (f) {
      return function (v) {
          return new Tuple(v.value0, f(v.value1));
      };
  });
  var foldableTuple = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return function (v) {
              return f(v.value1);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return f(z)(v.value1);
          };
      };
  }, function (f) {
      return function (z) {
          return function (v) {
              return f(v.value1)(z);
          };
      };
  });
  var traversableTuple = new Data_Traversable.Traversable(function () {
      return foldableTuple;
  }, function () {
      return functorTuple;
  }, function (dictApplicative) {
      return function (v) {
          return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(v.value1);
      };
  }, function (dictApplicative) {
      return function (f) {
          return function (v) {
              return Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Tuple.create(v.value0))(f(v.value1));
          };
      };
  });
  exports["Tuple"] = Tuple;
  exports["uncurry"] = uncurry;
  exports["functorTuple"] = functorTuple;
  exports["foldableTuple"] = foldableTuple;
  exports["traversableTuple"] = traversableTuple;
})(PS["Data.Tuple"] = PS["Data.Tuple"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var MonadTrans = function (lift) {
      this.lift = lift;
  };
  var lift = function (dict) {
      return dict.lift;
  };
  exports["MonadTrans"] = MonadTrans;
  exports["lift"] = lift;
})(PS["Control.Monad.Trans"] = PS["Control.Monad.Trans"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Monoid = PS["Data.Monoid"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Monad_Cont_Class = PS["Control.Monad.Cont.Class"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Monad_Reader_Class = PS["Control.Monad.Reader.Class"];
  var Control_Monad_Rec_Class = PS["Control.Monad.Rec.Class"];
  var Control_Monad_RWS_Class = PS["Control.Monad.RWS.Class"];
  var Control_Monad_State_Class = PS["Control.Monad.State.Class"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Control_Monad_Writer_Class = PS["Control.Monad.Writer.Class"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];        
  var MaybeT = function (x) {
      return x;
  };
  var runMaybeT = function (v) {
      return v;
  };
  var monadTransMaybeT = new Control_Monad_Trans.MonadTrans(function (dictMonad) {
      return function ($46) {
          return MaybeT(Prelude.liftM1(dictMonad)(Data_Maybe.Just.create)($46));
      };
  });
  var monadMaybeT = function (dictMonad) {
      return new Prelude.Monad(function () {
          return applicativeMaybeT(dictMonad);
      }, function () {
          return bindMaybeT(dictMonad);
      });
  };
  var functorMaybeT = function (dictMonad) {
      return new Prelude.Functor(Prelude.liftA1(applicativeMaybeT(dictMonad)));
  };
  var bindMaybeT = function (dictMonad) {
      return new Prelude.Bind(function () {
          return applyMaybeT(dictMonad);
      }, function (x) {
          return function (f) {
              return MaybeT(Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(runMaybeT(x))(function (v) {
                  if (v instanceof Data_Maybe.Nothing) {
                      return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Nothing.value);
                  };
                  if (v instanceof Data_Maybe.Just) {
                      return runMaybeT(f(v.value0));
                  };
                  throw new Error("Failed pattern match at Control.Monad.Maybe.Trans line 55, column 5 - line 59, column 1: " + [ v.constructor.name ]);
              }));
          };
      });
  };
  var applyMaybeT = function (dictMonad) {
      return new Prelude.Apply(function () {
          return functorMaybeT(dictMonad);
      }, Prelude.ap(monadMaybeT(dictMonad)));
  };
  var applicativeMaybeT = function (dictMonad) {
      return new Prelude.Applicative(function () {
          return applyMaybeT(dictMonad);
      }, function ($48) {
          return MaybeT(Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(Data_Maybe.Just.create($48)));
      });
  };
  var monadEffMaybe = function (dictMonadEff) {
      return new Control_Monad_Eff_Class.MonadEff(function () {
          return monadMaybeT(dictMonadEff["__superclass_Prelude.Monad_0"]());
      }, function ($49) {
          return Control_Monad_Trans.lift(monadTransMaybeT)(dictMonadEff["__superclass_Prelude.Monad_0"]())(Control_Monad_Eff_Class.liftEff(dictMonadEff)($49));
      });
  };
  exports["MaybeT"] = MaybeT;
  exports["runMaybeT"] = runMaybeT;
  exports["functorMaybeT"] = functorMaybeT;
  exports["applyMaybeT"] = applyMaybeT;
  exports["applicativeMaybeT"] = applicativeMaybeT;
  exports["bindMaybeT"] = bindMaybeT;
  exports["monadMaybeT"] = monadMaybeT;
  exports["monadTransMaybeT"] = monadTransMaybeT;
  exports["monadEffMaybe"] = monadEffMaybe;
})(PS["Control.Monad.Maybe.Trans"] = PS["Control.Monad.Maybe.Trans"] || {});
(function(exports) {// module Control.Promise

  exports.promise = function (f) {
    return function () {
      return new Promise(function (success, error) {
        var succF = function (s) { return function() { return success(s); } };
        var failF = function (s) { return function() { return error(s); } };

        // This indicates the aff was wrong?
        try { f(succF)(failF)(); }
        catch (e) {
          error(e);
        }
      });
    };
  };
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Control.Promise"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];        
  var fromAff = function (aff) {
      return $foreign.promise(function (succ) {
          return function (err) {
              return Control_Monad_Aff.runAff(err)(succ)(aff);
          };
      });
  };
  exports["fromAff"] = fromAff;
})(PS["Control.Promise"] = PS["Control.Promise"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.Event.EventTarget

  exports.eventListener = function (fn) {
    return function (event) {
      return fn(event)();
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            target.addEventListener(type, listener, useCapture);
            return {};
          };
        };
      };
    };
  };
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.Event.EventTarget"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var DOM = PS["DOM"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  exports["addEventListener"] = $foreign.addEventListener;
  exports["eventListener"] = $foreign.eventListener;
})(PS["DOM.Event.EventTarget"] = PS["DOM.Event.EventTarget"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var blur = "blur";
  exports["blur"] = blur;
})(PS["DOM.Event.EventTypes"] = PS["DOM.Event.EventTypes"] || {});
(function(exports) {
  /* global exports, window */
  "use strict";

  // module DOM.HTML

  exports.window = function () {
    return window;
  };
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.HTML.Types"];
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Foreign_Class = PS["Data.Foreign.Class"];
  var DOM_Event_Types = PS["DOM.Event.Types"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];                   
  var htmlDocumentToDocument = Unsafe_Coerce.unsafeCoerce;
  exports["htmlDocumentToDocument"] = htmlDocumentToDocument;
})(PS["DOM.HTML.Types"] = PS["DOM.HTML.Types"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.HTML"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["window"] = $foreign.window;
})(PS["DOM.HTML"] = PS["DOM.HTML"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.HTML.Window

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.HTML.Window"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  exports["document"] = $foreign.document;
})(PS["DOM.HTML.Window"] = PS["DOM.HTML.Window"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.createElement = function (localName) {
    return function (doc) {
      return function () {
        return doc.createElement(localName);
      };
    };
  };

  exports.createTextNode = function (data) {
    return function (doc) {
      return function () {
        return doc.createTextNode(data);
      };
    };
  };
})(PS["DOM.Node.Document"] = PS["DOM.Node.Document"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.Node.Document"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["createTextNode"] = $foreign.createTextNode;
  exports["createElement"] = $foreign.createElement;
})(PS["DOM.Node.Document"] = PS["DOM.Node.Document"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports.className = function (node) {
    return function () {
      return node.className;
    };
  };

  exports.setClassName = function (className) {
    return function (node) {
      return function () {
        node.className = className;
        return {};
      };
    };
  };

  exports.setAttribute = function (name) {
    return function (value) {
      return function (element) {
        return function () {
          element.setAttribute(name, value);
          return {};
        };
      };
    };
  };
})(PS["DOM.Node.Element"] = PS["DOM.Node.Element"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.Node.Element"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["setAttribute"] = $foreign.setAttribute;
  exports["setClassName"] = $foreign.setClassName;
})(PS["DOM.Node.Element"] = PS["DOM.Node.Element"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module DOM.Node.Node

  var getEffProp = function (name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };                                                  

  exports.hasChildNodes = function (node) {
    return function () {
      return node.hasChildNodes();
    };
  };                                            

  exports.firstChild = getEffProp("firstChild");

  exports.textContent = getEffProp("textContent");

  exports.setTextContent = function (value) {
    return function (node) {
      return function () {
        node.textContent = value;
        return {};
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.Node.Node"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Enum = PS["Data.Enum"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var DOM = PS["DOM"];
  var DOM_Node_NodeType = PS["DOM.Node.NodeType"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["removeChild"] = $foreign.removeChild;
  exports["appendChild"] = $foreign.appendChild;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["firstChild"] = $foreign.firstChild;
  exports["hasChildNodes"] = $foreign.hasChildNodes;
})(PS["DOM.Node.Node"] = PS["DOM.Node.Node"] || {});
(function(exports) {
  /* global exports */
  "use strict";                                               

  exports.querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.Node.ParentNode"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["querySelector"] = $foreign.querySelector;
})(PS["DOM.Node.ParentNode"] = PS["DOM.Node.ParentNode"] || {});
(function(exports) {

  exports.setScrollTop = function(e) {
    return function(value) {
      return function() {
        e.scrollTop = value;
      };
    };
  };

  exports.getScrollHeight = function (e) {
    return function() {
      return e.scrollHeight;
    };
  };
})(PS["DOM.Util"] = PS["DOM.Util"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["DOM.Util"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  exports["getScrollHeight"] = $foreign.getScrollHeight;
  exports["setScrollTop"] = $foreign.setScrollTop;
})(PS["DOM.Util"] = PS["DOM.Util"] || {});
(function(exports) {// module Data.Argonaut.Core

  function id(x) {
      return x;
  } 

  exports.fromBoolean = id;
  exports.fromNumber = id;
  exports.fromString = id;
  exports.fromArray = id;
  exports.fromObject = id;

  exports.jsonNull = null;

  exports._stringify = function(j) {
      return JSON.stringify(j);
  };

  exports._foldJson = function(isNull, isBool, isNum, isStr, isArr, isObj, j) {
      if (j == null) return isNull(null);
      else if (typeof j === 'boolean') return isBool(j);
      else if (typeof j === 'number') return isNum(j);
      else if (typeof j === 'string') return isStr(j);
      else if (Object.prototype.toString.call(j) === '[object Array]')
          return isArr(j);
      else return isObj(j);
  };

  function _compare(EQ, GT, LT, a, b) {
      function isArray(a) {
          return Object.prototype.toString.call(a) === '[object Array]';
      }
      function keys(o) {
          var a = [];
          for (var k in o) {
              a.push(k);
          }
          return a;
      }

      if (a == null) {
          if (b == null) return EQ;
          else return LT;
      } else if (typeof a === 'boolean') {
          if (typeof b === 'boolean') {
              // boolean / boolean
              if (a === b) return EQ;
              else if (a == false) return LT;
              else return GT;
          } else if (b == null) return GT;
          else return LT;
      } else if (typeof a === 'number') {
          if (typeof b === 'number') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else return LT;
      } else if (typeof a === 'string') {
          if (typeof b === 'string') {
              if (a === b) return EQ;
              else if (a < b) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else return LT;
      } else if (isArray(a)) {
          if (isArray(b)) {
              for (var i = 0; i < Math.min(a.length, b.length); i++) {
                  var c = _compare(EQ, GT, LT, a[i], b[i]);
                
                  if (c !== EQ) return c;
              }
              if (a.length === b.length) return EQ;
              else if (a.length < b.length) return LT;
              else return GT;
          } else if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else return LT;
      }
      else {
          if (b == null) return GT;
          else if (typeof b === 'boolean') return GT;
          else if (typeof b === 'number') return GT;
          else if (typeof b === 'string') return GT;
          else if (isArray(b)) return GT;
          else {
              var akeys = keys(a);
              var bkeys = keys(b);
            
              var keys = akeys.concat(bkeys).sort();
            
              for (var i = 0; i < keys.length; i++) {
                  var k = keys[i];
                
                  if (a[k] === undefined) return LT;
                  else if (b[k] === undefined) return GT;
                
                  var c = _compare(EQ, GT, LT, a[k], b[k]);
                
                  if (c !== EQ) return c;
              }
            
              if (akeys.length === bkeys.length) return EQ;
              else if (akeys.length < bkeys.length) return LT;
              else return GT;
          }
      }
  };
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports._copyEff = function (m) {
    return function () {
      var r = {};
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r[k] = m[k];
        }
      }
      return r;
    };
  };

  exports.empty = {};

  exports.runST = function (f) {
    return f;
  };

  // jshint maxparams: 2
  exports._fmapStrMap = function (m0, f) {
    var m = {};
    for (var k in m0) {
      if (m0.hasOwnProperty(k)) {
        m[k] = f(m0[k]);
      }
    }
    return m;
  };

  // jshint maxparams: 1
  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          function g (k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }
          for (var k in m) {
            if (m.hasOwnProperty(k)) {
              mz = bind(mz)(g(k));
            }
          }
          return mz;
        };
      };
    };
  };

  // jshint maxparams: 4
  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function _collect (f) {
    return function (m) {
      var r = [];
      for (var k in m) {
        if (m.hasOwnProperty(k)) {
          r.push(f(k)(m[k]));
        }
      }
      return r;
    };
  }

  exports._collect = _collect;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];        
  var Nil = (function () {
      function Nil() {

      };
      Nil.value = new Nil();
      return Nil;
  })();
  var Cons = (function () {
      function Cons(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Cons.create = function (value0) {
          return function (value1) {
              return new Cons(value0, value1);
          };
      };
      return Cons;
  })();
  var reverse = (function () {
      var go = function (__copy_acc) {
          return function (__copy_v) {
              var acc = __copy_acc;
              var v = __copy_v;
              tco: while (true) {
                  if (v instanceof Nil) {
                      return acc;
                  };
                  if (v instanceof Cons) {
                      var __tco_acc = new Cons(v.value0, acc);
                      var __tco_v = v.value1;
                      acc = __tco_acc;
                      v = __tco_v;
                      continue tco;
                  };
                  throw new Error("Failed pattern match at Data.List line 371, column 1 - line 376, column 1: " + [ acc.constructor.name, v.constructor.name ]);
              };
          };
      };
      return go(Nil.value);
  })();
  var functorList = new Prelude.Functor(function (f) {
      return function (lst) {
          var go = function (__copy_v) {
              return function (__copy_acc) {
                  var v = __copy_v;
                  var acc = __copy_acc;
                  tco: while (true) {
                      if (v instanceof Nil) {
                          return acc;
                      };
                      if (v instanceof Cons) {
                          var __tco_v = v.value1;
                          var __tco_acc = new Cons(f(v.value0), acc);
                          v = __tco_v;
                          acc = __tco_acc;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 758, column 3 - line 764, column 1: " + [ v.constructor.name, acc.constructor.name ]);
                  };
              };
          };
          return reverse(go(lst)(Nil.value));
      };
  });
  var fromFoldable = function (dictFoldable) {
      return Data_Foldable.foldr(dictFoldable)(Cons.create)(Nil.value);
  };
  var toList = function (dictFoldable) {
      return fromFoldable(dictFoldable);
  };
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return Data_Foldable.foldl(foldableList)(function (acc) {
              return function ($374) {
                  return Prelude.append(dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f($374));
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  }, (function () {
      var go = function (__copy_v) {
          return function (__copy_b) {
              return function (__copy_v1) {
                  var v = __copy_v;
                  var b = __copy_b;
                  var v1 = __copy_v1;
                  tco: while (true) {
                      if (v1 instanceof Nil) {
                          return b;
                      };
                      if (v1 instanceof Cons) {
                          var __tco_v = v;
                          var __tco_b = v(b)(v1.value0);
                          var __tco_v1 = v1.value1;
                          v = __tco_v;
                          b = __tco_b;
                          v1 = __tco_v1;
                          continue tco;
                      };
                      throw new Error("Failed pattern match at Data.List line 767, column 3 - line 771, column 3: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
                  };
              };
          };
      };
      return go;
  })(), function (v) {
      return function (b) {
          return function (v1) {
              if (v1 instanceof Nil) {
                  return b;
              };
              if (v1 instanceof Cons) {
                  return v(v1.value0)(Data_Foldable.foldr(foldableList)(v)(b)(v1.value1));
              };
              throw new Error("Failed pattern match at Data.List line 765, column 3 - line 766, column 3: " + [ v.constructor.name, b.constructor.name, v1.constructor.name ]);
          };
      };
  });
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["toList"] = toList;
  exports["reverse"] = reverse;
  exports["fromFoldable"] = fromFoldable;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
})(PS["Data.List"] = PS["Data.List"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  // module Data.StrMap.ST

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (m) {
    return function (k) {
      return function (v) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.StrMap.ST"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_Maybe = PS["Data.Maybe"];
  exports["poke"] = $foreign.poke;
  exports["new"] = $foreign["new"];
})(PS["Data.StrMap.ST"] = PS["Data.StrMap.ST"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.StrMap"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_List = PS["Data.List"];
  var Control_Monad_ST = PS["Control.Monad.ST"];
  var Data_StrMap_ST = PS["Data.StrMap.ST"];        
  var values = function ($38) {
      return Data_List.toList(Data_Foldable.foldableArray)($foreign._collect(function (v) {
          return function (v1) {
              return v1;
          };
      })($38));
  };
  var toList = function ($39) {
      return Data_List.toList(Data_Foldable.foldableArray)($foreign._collect(Data_Tuple.Tuple.create)($39));
  };
  var thawST = $foreign._copyEff;
  var pureST = function (f) {
      return Control_Monad_Eff.runPure($foreign.runST(f));
  };
  var singleton = function (k) {
      return function (v) {
          return pureST(function __do() {
              var v1 = Data_StrMap_ST["new"]();
              Data_StrMap_ST.poke(v1)(k)(v)();
              return v1;
          });
      };
  };
  var mutate = function (f) {
      return function (m) {
          return pureST(function __do() {
              var v = thawST(m)();
              f(v)();
              return v;
          });
      };
  };                                                                                 
  var lookup = Data_Function.runFn4($foreign._lookup)(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var insert = function (k) {
      return function (v) {
          return mutate(function (s) {
              return Data_StrMap_ST.poke(s)(k)(v);
          });
      };
  };
  var functorStrMap = new Prelude.Functor(function (f) {
      return function (m) {
          return $foreign._fmapStrMap(m, f);
      };
  });
  var foldM = function (dictMonad) {
      return function (f) {
          return function (z) {
              return $foreign._foldM(Prelude[">>="](dictMonad["__superclass_Prelude.Bind_1"]()))(f)(Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())(z));
          };
      };
  };
  var union = function (m) {
      return mutate(function (s) {
          return foldM(Control_Monad_Eff.monadEff)(Data_StrMap_ST.poke)(s)(m);
      });
  };                                                                              
  var fold = $foreign._foldM(Prelude["#"]);
  var foldMap = function (dictMonoid) {
      return function (f) {
          return fold(function (acc) {
              return function (k) {
                  return function (v) {
                      return Prelude["<>"](dictMonoid["__superclass_Prelude.Semigroup_0"]())(acc)(f(k)(v));
                  };
              };
          })(Data_Monoid.mempty(dictMonoid));
      };
  };
  var foldableStrMap = new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
          return foldMap(dictMonoid)(Prelude["const"](f));
      };
  }, function (f) {
      return fold(function (z) {
          return function (v) {
              return f(z);
          };
      });
  }, function (f) {
      return function (z) {
          return function (m) {
              return Data_Foldable.foldr(Data_List.foldableList)(f)(z)(values(m));
          };
      };
  });
  var traversableStrMap = new Data_Traversable.Traversable(function () {
      return foldableStrMap;
  }, function () {
      return functorStrMap;
  }, function (dictApplicative) {
      return Data_Traversable.traverse(traversableStrMap)(dictApplicative)(Prelude.id(Prelude.categoryFn));
  }, function (dictApplicative) {
      return function (f) {
          return function (ms) {
              return Data_Foldable.foldr(Data_List.foldableList)(function (x) {
                  return function (acc) {
                      return Prelude["<*>"](dictApplicative["__superclass_Prelude.Apply_0"]())(Prelude["<$>"]((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(union)(x))(acc);
                  };
              })(Prelude.pure(dictApplicative)($foreign.empty))(Prelude["<$>"](Data_List.functorList)(Prelude.map((dictApplicative["__superclass_Prelude.Apply_0"]())["__superclass_Prelude.Functor_0"]())(Data_Tuple.uncurry(singleton)))(Prelude["<$>"](Data_List.functorList)(Data_Traversable.traverse(Data_Tuple.traversableTuple)(dictApplicative)(f))(toList(ms))));
          };
      };
  });
  exports["thawST"] = thawST;
  exports["foldM"] = foldM;
  exports["foldMap"] = foldMap;
  exports["fold"] = fold;
  exports["union"] = union;
  exports["values"] = values;
  exports["toList"] = toList;
  exports["lookup"] = lookup;
  exports["insert"] = insert;
  exports["singleton"] = singleton;
  exports["functorStrMap"] = functorStrMap;
  exports["foldableStrMap"] = foldableStrMap;
  exports["traversableStrMap"] = traversableStrMap;
  exports["empty"] = $foreign.empty;
})(PS["Data.StrMap"] = PS["Data.StrMap"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Argonaut.Core"];
  var Prelude = PS["Prelude"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Function = PS["Data.Function"];
  var Data_StrMap = PS["Data.StrMap"];        
  var verbJsonType = function (def) {
      return function (f) {
          return function (fold) {
              return fold(def)(f);
          };
      };
  };
  var toJsonType = verbJsonType(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);
  var showJson = new Prelude.Show($foreign._stringify);
  var jsonSingletonObject = function (key) {
      return function (val) {
          return $foreign.fromObject(Data_StrMap.singleton(key)(val));
      };
  };                                            
  var jsonEmptyObject = $foreign.fromObject(Data_StrMap.empty);
  var isJsonType = verbJsonType(false)(Prelude["const"](true));
  var foldJsonString = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var toString = toJsonType(foldJsonString);
  var foldJsonObject = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, j);
          };
      };
  };                                        
  var toObject = toJsonType(foldJsonObject);
  var foldJsonNumber = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };                                        
  var foldJsonNull = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(f, Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), j);
          };
      };
  };
  var isNull = isJsonType(foldJsonNull);      
  var foldJsonArray = function (d) {
      return function (f) {
          return function (j) {
              return $foreign._foldJson(Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), Prelude["const"](d), f, Prelude["const"](d), j);
          };
      };
  };                                      
  var toArray = toJsonType(foldJsonArray);
  exports["jsonSingletonObject"] = jsonSingletonObject;
  exports["jsonEmptyObject"] = jsonEmptyObject;
  exports["toObject"] = toObject;
  exports["toArray"] = toArray;
  exports["toString"] = toString;
  exports["isNull"] = isNull;
  exports["foldJsonObject"] = foldJsonObject;
  exports["foldJsonArray"] = foldJsonArray;
  exports["foldJsonString"] = foldJsonString;
  exports["foldJsonNumber"] = foldJsonNumber;
  exports["foldJsonNull"] = foldJsonNull;
  exports["showJson"] = showJson;
  exports["jsonNull"] = $foreign.jsonNull;
  exports["fromObject"] = $foreign.fromObject;
  exports["fromArray"] = $foreign.fromArray;
  exports["fromString"] = $foreign.fromString;
  exports["fromNumber"] = $foreign.fromNumber;
  exports["fromBoolean"] = $foreign.fromBoolean;
})(PS["Data.Argonaut.Core"] = PS["Data.Argonaut.Core"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.length = function (xs) {
    return xs.length;
  };

  //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  };

  //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------

  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  };

  exports.concat = function (xss) {
    var result = [];
    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];
      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }
    return result;
  };

  exports.filter = function (f) {
    return function (xs) {
      return xs.filter(f);
    };
  };

  //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Array"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Alternative = PS["Control.Alternative"];
  var Control_Lazy = PS["Control.Lazy"];
  var Control_MonadPlus = PS["Control.MonadPlus"];
  var Control_Plus = PS["Control.Plus"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Functor_Invariant = PS["Data.Functor.Invariant"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Monoid = PS["Data.Monoid"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];        
  var $colon = $foreign.cons;
  var uncons = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (xs) {
          return new Data_Maybe.Just({
              head: x, 
              tail: xs
          });
      };
  });
  var singleton = function (a) {
      return [ a ];
  };
  var $$null = function (xs) {
      return $foreign.length(xs) === 0;
  };
  var head = $foreign["uncons'"](Prelude["const"](Data_Maybe.Nothing.value))(function (x) {
      return function (v) {
          return new Data_Maybe.Just(x);
      };
  });
  var filterM = function (dictMonad) {
      return function (p) {
          return $foreign["uncons'"](function (v) {
              return Prelude.pure(dictMonad["__superclass_Prelude.Applicative_0"]())([  ]);
          })(function (x) {
              return function (xs) {
                  return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(p(x))(function (v) {
                      return Prelude.bind(dictMonad["__superclass_Prelude.Bind_1"]())(filterM(dictMonad)(p)(xs))(function (v1) {
                          return Prelude["return"](dictMonad["__superclass_Prelude.Applicative_0"]())((function () {
                              if (v) {
                                  return $colon(x)(v1);
                              };
                              if (!v) {
                                  return v1;
                              };
                              throw new Error("Failed pattern match at Data.Array line 390, column 5 - line 394, column 1: " + [ v.constructor.name ]);
                          })());
                      });
                  });
              };
          });
      };
  };
  var concatMap = Prelude.flip(Prelude.bind(Prelude.bindArray));
  var mapMaybe = function (f) {
      return concatMap(function ($69) {
          return Data_Maybe.maybe([  ])(singleton)(f($69));
      });
  };
  var catMaybes = mapMaybe(Prelude.id(Prelude.categoryFn));
  exports["catMaybes"] = catMaybes;
  exports["mapMaybe"] = mapMaybe;
  exports["filterM"] = filterM;
  exports["concatMap"] = concatMap;
  exports["uncons"] = uncons;
  exports["head"] = head;
  exports[":"] = $colon;
  exports["null"] = $$null;
  exports["singleton"] = singleton;
  exports["filter"] = $foreign.filter;
  exports["length"] = $foreign.length;
})(PS["Data.Array"] = PS["Data.Array"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Tuple = PS["Data.Tuple"];
  var Type_Proxy = PS["Type.Proxy"];        
  var DecodeJson = function (decodeJson) {
      this.decodeJson = decodeJson;
  };
  var decodeJsonString = new DecodeJson(Data_Argonaut_Core.foldJsonString(new Data_Either.Left("Not a String"))(Data_Either.Right.create));                     
  var decodeJsonJson = new DecodeJson(Data_Either.Right.create);
  var decodeJsonInt = new DecodeJson(function (num) {
      var go = function (num1) {
          return Data_Maybe.maybe(new Data_Either.Left("Not an Int"))(Data_Either.Right.create)(Data_Int.fromNumber(num1));
      };
      return Data_Argonaut_Core.foldJsonNumber(new Data_Either.Left("Not a Number"))(go)(num);
  });                                                                                                                                         
  var decodeJson = function (dict) {
      return dict.decodeJson;
  };
  var decodeJsonMaybe = function (dictDecodeJson) {
      return new DecodeJson(function (j) {
          if (Data_Argonaut_Core.isNull(j)) {
              return Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value);
          };
          if (Prelude.otherwise) {
              return Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Maybe.Just.create)(decodeJson(dictDecodeJson)(j)))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value));
          };
          throw new Error("Failed pattern match at Data.Argonaut.Decode line 69, column 3 - line 73, column 1: " + [ j.constructor.name ]);
      });
  };
  var decodeMaybe = function (dictDecodeJson) {
      return function (json) {
          return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Prelude.pure(Data_Maybe.applicativeMaybe))(decodeJson(dictDecodeJson)(json));
      };
  };
  var decodeStrMap = function (dictDecodeJson) {
      return new DecodeJson(function (json) {
          return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode StrMap"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toObject(json))(function (v) {
              return Data_Traversable.traverse(Data_StrMap.traversableStrMap)(Data_Maybe.applicativeMaybe)(decodeMaybe(dictDecodeJson))(v);
          }));
      });
  };
  var decodeArray = function (dictDecodeJson) {
      return new DecodeJson(function (json) {
          return Data_Maybe.maybe(new Data_Either.Left("Couldn't decode Array"))(Data_Either.Right.create)(Prelude.bind(Data_Maybe.bindMaybe)(Data_Argonaut_Core.toArray(json))(function (v) {
              return Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(decodeMaybe(dictDecodeJson))(v);
          }));
      });
  };
  exports["DecodeJson"] = DecodeJson;
  exports["decodeMaybe"] = decodeMaybe;
  exports["decodeJson"] = decodeJson;
  exports["decodeJsonMaybe"] = decodeJsonMaybe;
  exports["decodeJsonInt"] = decodeJsonInt;
  exports["decodeJsonString"] = decodeJsonString;
  exports["decodeJsonJson"] = decodeJsonJson;
  exports["decodeStrMap"] = decodeStrMap;
  exports["decodeArray"] = decodeArray;
})(PS["Data.Argonaut.Decode"] = PS["Data.Argonaut.Decode"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Generic = PS["Data.Generic"];
  var Data_Int = PS["Data.Int"];
  var Data_List = PS["Data.List"];
  var Data_Map = PS["Data.Map"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];
  var Data_Unfoldable = PS["Data.Unfoldable"];        
  var EncodeJson = function (encodeJson) {
      this.encodeJson = encodeJson;
  };                                                                                 
  var encodeJsonJson = new EncodeJson(Prelude.id(Prelude.categoryFn));
  var encodeJsonJString = new EncodeJson(Data_Argonaut_Core.fromString);
  var encodeJsonJBoolean = new EncodeJson(Data_Argonaut_Core.fromBoolean);
  var encodeJsonInt = new EncodeJson(function ($32) {
      return Data_Argonaut_Core.fromNumber(Data_Int.toNumber($32));
  });
  var encodeJson = function (dict) {
      return dict.encodeJson;
  };
  var encodeJsonArray = function (dictEncodeJson) {
      return new EncodeJson(function (json) {
          return Data_Argonaut_Core.fromArray(Prelude["<$>"](Prelude.functorArray)(encodeJson(dictEncodeJson))(json));
      });
  };
  var encodeJsonMaybe = function (dictEncodeJson) {
      return new EncodeJson(function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return Data_Argonaut_Core.jsonNull;
          };
          if (v instanceof Data_Maybe.Just) {
              return encodeJson(dictEncodeJson)(v.value0);
          };
          throw new Error("Failed pattern match at Data.Argonaut.Encode line 46, column 3 - line 47, column 3: " + [ v.constructor.name ]);
      });
  };
  exports["EncodeJson"] = EncodeJson;
  exports["encodeJson"] = encodeJson;
  exports["encodeJsonMaybe"] = encodeJsonMaybe;
  exports["encodeJsonJBoolean"] = encodeJsonJBoolean;
  exports["encodeJsonInt"] = encodeJsonInt;
  exports["encodeJsonJString"] = encodeJsonJString;
  exports["encodeJsonJson"] = encodeJsonJson;
  exports["encodeJsonArray"] = encodeJsonArray;
})(PS["Data.Argonaut.Encode"] = PS["Data.Argonaut.Encode"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Tuple = PS["Data.Tuple"];        
  var $tilde$greater = function (dictEncodeJson) {
      return function (v) {
          return function (a) {
              return Data_Argonaut_Core.foldJsonObject(Data_Argonaut_Core.jsonSingletonObject(v.value0)(v.value1))(function ($13) {
                  return Data_Argonaut_Core.fromObject(Data_StrMap.insert(v.value0)(v.value1)($13));
              })(Data_Argonaut_Encode.encodeJson(dictEncodeJson)(a));
          };
      };
  };
  var $colon$eq = function (dictEncodeJson) {
      return function (k) {
          return function (v) {
              return Data_Tuple.Tuple.create(k)(Data_Argonaut_Encode.encodeJson(dictEncodeJson)(v));
          };
      };
  };
  var $dot$qmark = function (dictDecodeJson) {
      return function (o) {
          return function (s) {
              return Data_Maybe.maybe(Data_Either.Left.create("Expected field " + Prelude.show(Prelude.showString)(s)))(Data_Argonaut_Decode.decodeJson(dictDecodeJson))(Data_StrMap.lookup(s)(o));
          };
      };
  };
  exports[".?"] = $dot$qmark;
  exports["~>"] = $tilde$greater;
  exports[":="] = $colon$eq;
})(PS["Data.Argonaut.Combinators"] = PS["Data.Argonaut.Combinators"] || {});
(function(exports) {// module Data.Argonaut.Parser

  exports._jsonParser = function(fail, succ, s) {
      try {
          return succ(JSON.parse(s));
      }
      catch(e) {
          return fail(e.message);
      }
  };
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.Argonaut.Parser"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Function = PS["Data.Function"];
  var Data_Either = PS["Data.Either"];        
  var jsonParser = function (j) {
      return $foreign._jsonParser(Data_Either.Left.create, Data_Either.Right.create, j);
  };
  exports["jsonParser"] = jsonParser;
})(PS["Data.Argonaut.Parser"] = PS["Data.Argonaut.Parser"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];        
  var $less$dollar = function (dictFunctor) {
      return function (x) {
          return function (f) {
              return Prelude["<$>"](dictFunctor)(Prelude["const"](x))(f);
          };
      };
  };
  exports["<$"] = $less$dollar;
})(PS["Data.Functor"] = PS["Data.Functor"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];        
  var SIGABRT = (function () {
      function SIGABRT() {

      };
      SIGABRT.value = new SIGABRT();
      return SIGABRT;
  })();
  var SIGALRM = (function () {
      function SIGALRM() {

      };
      SIGALRM.value = new SIGALRM();
      return SIGALRM;
  })();
  var SIGBUS = (function () {
      function SIGBUS() {

      };
      SIGBUS.value = new SIGBUS();
      return SIGBUS;
  })();
  var SIGCHLD = (function () {
      function SIGCHLD() {

      };
      SIGCHLD.value = new SIGCHLD();
      return SIGCHLD;
  })();
  var SIGCLD = (function () {
      function SIGCLD() {

      };
      SIGCLD.value = new SIGCLD();
      return SIGCLD;
  })();
  var SIGCONT = (function () {
      function SIGCONT() {

      };
      SIGCONT.value = new SIGCONT();
      return SIGCONT;
  })();
  var SIGEMT = (function () {
      function SIGEMT() {

      };
      SIGEMT.value = new SIGEMT();
      return SIGEMT;
  })();
  var SIGFPE = (function () {
      function SIGFPE() {

      };
      SIGFPE.value = new SIGFPE();
      return SIGFPE;
  })();
  var SIGHUP = (function () {
      function SIGHUP() {

      };
      SIGHUP.value = new SIGHUP();
      return SIGHUP;
  })();
  var SIGILL = (function () {
      function SIGILL() {

      };
      SIGILL.value = new SIGILL();
      return SIGILL;
  })();
  var SIGINFO = (function () {
      function SIGINFO() {

      };
      SIGINFO.value = new SIGINFO();
      return SIGINFO;
  })();
  var SIGINT = (function () {
      function SIGINT() {

      };
      SIGINT.value = new SIGINT();
      return SIGINT;
  })();
  var SIGIO = (function () {
      function SIGIO() {

      };
      SIGIO.value = new SIGIO();
      return SIGIO;
  })();
  var SIGIOT = (function () {
      function SIGIOT() {

      };
      SIGIOT.value = new SIGIOT();
      return SIGIOT;
  })();
  var SIGKILL = (function () {
      function SIGKILL() {

      };
      SIGKILL.value = new SIGKILL();
      return SIGKILL;
  })();
  var SIGLOST = (function () {
      function SIGLOST() {

      };
      SIGLOST.value = new SIGLOST();
      return SIGLOST;
  })();
  var SIGPIPE = (function () {
      function SIGPIPE() {

      };
      SIGPIPE.value = new SIGPIPE();
      return SIGPIPE;
  })();
  var SIGPOLL = (function () {
      function SIGPOLL() {

      };
      SIGPOLL.value = new SIGPOLL();
      return SIGPOLL;
  })();
  var SIGPROF = (function () {
      function SIGPROF() {

      };
      SIGPROF.value = new SIGPROF();
      return SIGPROF;
  })();
  var SIGPWR = (function () {
      function SIGPWR() {

      };
      SIGPWR.value = new SIGPWR();
      return SIGPWR;
  })();
  var SIGQUIT = (function () {
      function SIGQUIT() {

      };
      SIGQUIT.value = new SIGQUIT();
      return SIGQUIT;
  })();
  var SIGSEGV = (function () {
      function SIGSEGV() {

      };
      SIGSEGV.value = new SIGSEGV();
      return SIGSEGV;
  })();
  var SIGSTKFLT = (function () {
      function SIGSTKFLT() {

      };
      SIGSTKFLT.value = new SIGSTKFLT();
      return SIGSTKFLT;
  })();
  var SIGSTOP = (function () {
      function SIGSTOP() {

      };
      SIGSTOP.value = new SIGSTOP();
      return SIGSTOP;
  })();
  var SIGSYS = (function () {
      function SIGSYS() {

      };
      SIGSYS.value = new SIGSYS();
      return SIGSYS;
  })();
  var SIGTERM = (function () {
      function SIGTERM() {

      };
      SIGTERM.value = new SIGTERM();
      return SIGTERM;
  })();
  var SIGTRAP = (function () {
      function SIGTRAP() {

      };
      SIGTRAP.value = new SIGTRAP();
      return SIGTRAP;
  })();
  var SIGTSTP = (function () {
      function SIGTSTP() {

      };
      SIGTSTP.value = new SIGTSTP();
      return SIGTSTP;
  })();
  var SIGTTIN = (function () {
      function SIGTTIN() {

      };
      SIGTTIN.value = new SIGTTIN();
      return SIGTTIN;
  })();
  var SIGTTOU = (function () {
      function SIGTTOU() {

      };
      SIGTTOU.value = new SIGTTOU();
      return SIGTTOU;
  })();
  var SIGUNUSED = (function () {
      function SIGUNUSED() {

      };
      SIGUNUSED.value = new SIGUNUSED();
      return SIGUNUSED;
  })();
  var SIGURG = (function () {
      function SIGURG() {

      };
      SIGURG.value = new SIGURG();
      return SIGURG;
  })();
  var SIGUSR1 = (function () {
      function SIGUSR1() {

      };
      SIGUSR1.value = new SIGUSR1();
      return SIGUSR1;
  })();
  var SIGUSR2 = (function () {
      function SIGUSR2() {

      };
      SIGUSR2.value = new SIGUSR2();
      return SIGUSR2;
  })();
  var SIGVTALRM = (function () {
      function SIGVTALRM() {

      };
      SIGVTALRM.value = new SIGVTALRM();
      return SIGVTALRM;
  })();
  var SIGWINCH = (function () {
      function SIGWINCH() {

      };
      SIGWINCH.value = new SIGWINCH();
      return SIGWINCH;
  })();
  var SIGXCPU = (function () {
      function SIGXCPU() {

      };
      SIGXCPU.value = new SIGXCPU();
      return SIGXCPU;
  })();
  var SIGXFSZ = (function () {
      function SIGXFSZ() {

      };
      SIGXFSZ.value = new SIGXFSZ();
      return SIGXFSZ;
  })();                                       
  var fromString = function (s) {
      if (s === "SIGABRT") {
          return new Data_Maybe.Just(SIGABRT.value);
      };
      if (s === "SIGALRM") {
          return new Data_Maybe.Just(SIGALRM.value);
      };
      if (s === "SIGBUS") {
          return new Data_Maybe.Just(SIGBUS.value);
      };
      if (s === "SIGCHLD") {
          return new Data_Maybe.Just(SIGCHLD.value);
      };
      if (s === "SIGCLD") {
          return new Data_Maybe.Just(SIGCLD.value);
      };
      if (s === "SIGCONT") {
          return new Data_Maybe.Just(SIGCONT.value);
      };
      if (s === "SIGEMT") {
          return new Data_Maybe.Just(SIGEMT.value);
      };
      if (s === "SIGFPE") {
          return new Data_Maybe.Just(SIGFPE.value);
      };
      if (s === "SIGHUP") {
          return new Data_Maybe.Just(SIGHUP.value);
      };
      if (s === "SIGILL") {
          return new Data_Maybe.Just(SIGILL.value);
      };
      if (s === "SIGINFO") {
          return new Data_Maybe.Just(SIGINFO.value);
      };
      if (s === "SIGINT") {
          return new Data_Maybe.Just(SIGINT.value);
      };
      if (s === "SIGIO") {
          return new Data_Maybe.Just(SIGIO.value);
      };
      if (s === "SIGIOT") {
          return new Data_Maybe.Just(SIGIOT.value);
      };
      if (s === "SIGKILL") {
          return new Data_Maybe.Just(SIGKILL.value);
      };
      if (s === "SIGLOST") {
          return new Data_Maybe.Just(SIGLOST.value);
      };
      if (s === "SIGPIPE") {
          return new Data_Maybe.Just(SIGPIPE.value);
      };
      if (s === "SIGPOLL") {
          return new Data_Maybe.Just(SIGPOLL.value);
      };
      if (s === "SIGPROF") {
          return new Data_Maybe.Just(SIGPROF.value);
      };
      if (s === "SIGPWR") {
          return new Data_Maybe.Just(SIGPWR.value);
      };
      if (s === "SIGQUIT") {
          return new Data_Maybe.Just(SIGQUIT.value);
      };
      if (s === "SIGSEGV") {
          return new Data_Maybe.Just(SIGSEGV.value);
      };
      if (s === "SIGSTKFLT") {
          return new Data_Maybe.Just(SIGSTKFLT.value);
      };
      if (s === "SIGSTOP") {
          return new Data_Maybe.Just(SIGSTOP.value);
      };
      if (s === "SIGSYS") {
          return new Data_Maybe.Just(SIGSYS.value);
      };
      if (s === "SIGTERM") {
          return new Data_Maybe.Just(SIGTERM.value);
      };
      if (s === "SIGTRAP") {
          return new Data_Maybe.Just(SIGTRAP.value);
      };
      if (s === "SIGTSTP") {
          return new Data_Maybe.Just(SIGTSTP.value);
      };
      if (s === "SIGTTIN") {
          return new Data_Maybe.Just(SIGTTIN.value);
      };
      if (s === "SIGTTOU") {
          return new Data_Maybe.Just(SIGTTOU.value);
      };
      if (s === "SIGUNUSED") {
          return new Data_Maybe.Just(SIGUNUSED.value);
      };
      if (s === "SIGURG") {
          return new Data_Maybe.Just(SIGURG.value);
      };
      if (s === "SIGUSR1") {
          return new Data_Maybe.Just(SIGUSR1.value);
      };
      if (s === "SIGUSR2") {
          return new Data_Maybe.Just(SIGUSR2.value);
      };
      if (s === "SIGVTALRM") {
          return new Data_Maybe.Just(SIGVTALRM.value);
      };
      if (s === "SIGWINCH") {
          return new Data_Maybe.Just(SIGWINCH.value);
      };
      if (s === "SIGXCPU") {
          return new Data_Maybe.Just(SIGXCPU.value);
      };
      if (s === "SIGXFSZ") {
          return new Data_Maybe.Just(SIGXFSZ.value);
      };
      return Data_Maybe.Nothing.value;
  };
  exports["SIGABRT"] = SIGABRT;
  exports["SIGALRM"] = SIGALRM;
  exports["SIGBUS"] = SIGBUS;
  exports["SIGCHLD"] = SIGCHLD;
  exports["SIGCLD"] = SIGCLD;
  exports["SIGCONT"] = SIGCONT;
  exports["SIGEMT"] = SIGEMT;
  exports["SIGFPE"] = SIGFPE;
  exports["SIGHUP"] = SIGHUP;
  exports["SIGILL"] = SIGILL;
  exports["SIGINFO"] = SIGINFO;
  exports["SIGINT"] = SIGINT;
  exports["SIGIO"] = SIGIO;
  exports["SIGIOT"] = SIGIOT;
  exports["SIGKILL"] = SIGKILL;
  exports["SIGLOST"] = SIGLOST;
  exports["SIGPIPE"] = SIGPIPE;
  exports["SIGPOLL"] = SIGPOLL;
  exports["SIGPROF"] = SIGPROF;
  exports["SIGPWR"] = SIGPWR;
  exports["SIGQUIT"] = SIGQUIT;
  exports["SIGSEGV"] = SIGSEGV;
  exports["SIGSTKFLT"] = SIGSTKFLT;
  exports["SIGSTOP"] = SIGSTOP;
  exports["SIGSYS"] = SIGSYS;
  exports["SIGTERM"] = SIGTERM;
  exports["SIGTRAP"] = SIGTRAP;
  exports["SIGTSTP"] = SIGTSTP;
  exports["SIGTTIN"] = SIGTTIN;
  exports["SIGTTOU"] = SIGTTOU;
  exports["SIGUNUSED"] = SIGUNUSED;
  exports["SIGURG"] = SIGURG;
  exports["SIGUSR1"] = SIGUSR1;
  exports["SIGUSR2"] = SIGUSR2;
  exports["SIGVTALRM"] = SIGVTALRM;
  exports["SIGWINCH"] = SIGWINCH;
  exports["SIGXCPU"] = SIGXCPU;
  exports["SIGXFSZ"] = SIGXFSZ;
  exports["fromString"] = fromString;
})(PS["Data.Posix.Signal"] = PS["Data.Posix.Signal"] || {});
(function(exports) {
  /* global exports */
  "use strict";

  exports["regex'"] = function (s1) {
    return function (s2) {
      return new RegExp(s1, s2);
    };
  };

  exports.test = function (r) {
    return function (s) {
      return r.test(s);
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);
          if (m == null) {
            return nothing;
          } else {
            var list = [];
            for (var i = 0; i < m.length; i++) {
              list.push(m[i] == null ? nothing : just(m[i]));
            }
            return just(list);
          }
        };
      };
    };
  };

  exports.replace = function (r) {
    return function (s1) {
      return function (s2) {
        return s2.replace(r, s1);
      };
    };
  };

  exports.split = function (r) {
    return function (s) {
      return s.split(r);
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Data.String.Regex"];
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];                                            
  var renderFlags = function (f) {
      return (function () {
          if (f.global) {
              return "g";
          };
          if (!f.global) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 65, column 4 - line 65, column 32: " + [ f.global.constructor.name ]);
      })() + ((function () {
          if (f.ignoreCase) {
              return "i";
          };
          if (!f.ignoreCase) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 66, column 4 - line 66, column 36: " + [ f.ignoreCase.constructor.name ]);
      })() + ((function () {
          if (f.multiline) {
              return "m";
          };
          if (!f.multiline) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 67, column 4 - line 67, column 35: " + [ f.multiline.constructor.name ]);
      })() + ((function () {
          if (f.sticky) {
              return "y";
          };
          if (!f.sticky) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 68, column 4 - line 68, column 32: " + [ f.sticky.constructor.name ]);
      })() + (function () {
          if (f.unicode) {
              return "u";
          };
          if (!f.unicode) {
              return "";
          };
          throw new Error("Failed pattern match at Data.String.Regex line 69, column 4 - line 69, column 33: " + [ f.unicode.constructor.name ]);
      })())));
  };
  var regex = function (s) {
      return function (f) {
          return $foreign["regex'"](s)(renderFlags(f));
      };
  };
  var noFlags = {
      global: false, 
      ignoreCase: false, 
      multiline: false, 
      sticky: false, 
      unicode: false
  };
  var match = $foreign._match(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["noFlags"] = noFlags;
  exports["match"] = match;
  exports["renderFlags"] = renderFlags;
  exports["regex"] = regex;
  exports["split"] = $foreign.split;
  exports["replace"] = $foreign.replace;
  exports["test"] = $foreign.test;
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});
(function(exports) {
  var net =require("net"); 

  exports.send = function(cmd){
    return function(port){
      return function(cb){
        return function(err){
          return function(){
            var sock = net.createConnection({port: port})
              , result = ""
            sock.on('data', function (data) {
              result += data
            })
            .on('end', function () {
              cb(result)()
            })
            .on('connect', function () {
              sock.setEncoding('utf8');
              sock.write(cmd + "\n")
            })
            .on('error', function (e) {
              err(e)()
            })
          }
        }
      }
    }
  }
})(PS["PscIde"] = PS["PscIde"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Data_Argonaut_Combinators = PS["Data.Argonaut.Combinators"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Package = (function () {
      function Package() {

      };
      Package.value = new Package();
      return Package;
  })();
  var Ident = (function () {
      function Ident() {

      };
      Ident.value = new Ident();
      return Ident;
  })();
  var ModuleList = function (x) {
      return x;
  };
  var Message = function (x) {
      return x;
  };
  var Flex = (function () {
      function Flex(value0) {
          this.value0 = value0;
      };
      Flex.create = function (value0) {
          return new Flex(value0);
      };
      return Flex;
  })();
  var Distance = (function () {
      function Distance(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Distance.create = function (value0) {
          return function (value1) {
              return new Distance(value0, value1);
          };
      };
      return Distance;
  })();
  var LoadedModules = (function () {
      function LoadedModules() {

      };
      LoadedModules.value = new LoadedModules();
      return LoadedModules;
  })();
  var Imports = (function () {
      function Imports(value0) {
          this.value0 = value0;
      };
      Imports.create = function (value0) {
          return new Imports(value0);
      };
      return Imports;
  })();
  var AvailableModules = (function () {
      function AvailableModules() {

      };
      AvailableModules.value = new AvailableModules();
      return AvailableModules;
  })();
  var Implicit = (function () {
      function Implicit() {

      };
      Implicit.value = new Implicit();
      return Implicit;
  })();
  var Explicit = (function () {
      function Explicit(value0) {
          this.value0 = value0;
      };
      Explicit.create = function (value0) {
          return new Explicit(value0);
      };
      return Explicit;
  })();
  var Hiding = (function () {
      function Hiding(value0) {
          this.value0 = value0;
      };
      Hiding.create = function (value0) {
          return new Hiding(value0);
      };
      return Hiding;
  })();
  var AddImplicitImport = (function () {
      function AddImplicitImport(value0) {
          this.value0 = value0;
      };
      AddImplicitImport.create = function (value0) {
          return new AddImplicitImport(value0);
      };
      return AddImplicitImport;
  })();
  var AddImport = (function () {
      function AddImport(value0) {
          this.value0 = value0;
      };
      AddImport.create = function (value0) {
          return new AddImport(value0);
      };
      return AddImport;
  })();
  var ExactFilter = (function () {
      function ExactFilter(value0) {
          this.value0 = value0;
      };
      ExactFilter.create = function (value0) {
          return new ExactFilter(value0);
      };
      return ExactFilter;
  })();
  var PrefixFilter = (function () {
      function PrefixFilter(value0) {
          this.value0 = value0;
      };
      PrefixFilter.create = function (value0) {
          return new PrefixFilter(value0);
      };
      return PrefixFilter;
  })();
  var ModuleFilter = (function () {
      function ModuleFilter(value0) {
          this.value0 = value0;
      };
      ModuleFilter.create = function (value0) {
          return new ModuleFilter(value0);
      };
      return ModuleFilter;
  })();
  var DependencyFilter = (function () {
      function DependencyFilter(value0) {
          this.value0 = value0;
      };
      DependencyFilter.create = function (value0) {
          return new DependencyFilter(value0);
      };
      return DependencyFilter;
  })();
  var SuccessFile = (function () {
      function SuccessFile(value0) {
          this.value0 = value0;
      };
      SuccessFile.create = function (value0) {
          return new SuccessFile(value0);
      };
      return SuccessFile;
  })();
  var SuccessText = (function () {
      function SuccessText(value0) {
          this.value0 = value0;
      };
      SuccessText.create = function (value0) {
          return new SuccessText(value0);
      };
      return SuccessText;
  })();
  var MultipleResults = (function () {
      function MultipleResults(value0) {
          this.value0 = value0;
      };
      MultipleResults.create = function (value0) {
          return new MultipleResults(value0);
      };
      return MultipleResults;
  })();
  var Cwd = (function () {
      function Cwd() {

      };
      Cwd.value = new Cwd();
      return Cwd;
  })();
  var Ls = (function () {
      function Ls(value0) {
          this.value0 = value0;
      };
      Ls.create = function (value0) {
          return new Ls(value0);
      };
      return Ls;
  })();
  var Quit = (function () {
      function Quit() {

      };
      Quit.value = new Quit();
      return Quit;
  })();
  var Load = (function () {
      function Load(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Load.create = function (value0) {
          return function (value1) {
              return new Load(value0, value1);
          };
      };
      return Load;
  })();
  var Complete = (function () {
      function Complete(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Complete.create = function (value0) {
          return function (value1) {
              return new Complete(value0, value1);
          };
      };
      return Complete;
  })();
  var Pursuit = (function () {
      function Pursuit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Pursuit.create = function (value0) {
          return function (value1) {
              return new Pursuit(value0, value1);
          };
      };
      return Pursuit;
  })();
  var Type = (function () {
      function Type(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Type.create = function (value0) {
          return function (value1) {
              return new Type(value0, value1);
          };
      };
      return Type;
  })();
  var AddClause = (function () {
      function AddClause(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      AddClause.create = function (value0) {
          return function (value1) {
              return new AddClause(value0, value1);
          };
      };
      return AddClause;
  })();
  var CaseSplit = (function () {
      function CaseSplit(value0, value1, value2, value3, value4) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
          this.value4 = value4;
      };
      CaseSplit.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return function (value4) {
                          return new CaseSplit(value0, value1, value2, value3, value4);
                      };
                  };
              };
          };
      };
      return CaseSplit;
  })();
  var ImportCmd = (function () {
      function ImportCmd(value0, value1, value2, value3) {
          this.value0 = value0;
          this.value1 = value1;
          this.value2 = value2;
          this.value3 = value3;
      };
      ImportCmd.create = function (value0) {
          return function (value1) {
              return function (value2) {
                  return function (value3) {
                      return new ImportCmd(value0, value1, value2, value3);
                  };
              };
          };
      };
      return ImportCmd;
  })();
  var RebuildCmd = (function () {
      function RebuildCmd(value0) {
          this.value0 = value0;
      };
      RebuildCmd.create = function (value0) {
          return new RebuildCmd(value0);
      };
      return RebuildCmd;
  })();
  var unwrapResponse = function (dictDecodeJson) {
      return function (dictDecodeJson1) {
          return function (s) {
              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Parser.jsonParser(s))(function (v) {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(v))(function (v1) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v1)("resultType"))(function (v2) {
                          if (v2 === "success") {
                              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](dictDecodeJson1)(v1)("result"))(function (v3) {
                                  return Prelude.pure(Data_Either.applicativeEither)(new Data_Either.Right(v3));
                              });
                          };
                          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](dictDecodeJson)(v1)("result"))(function (v3) {
                              return Prelude.pure(Data_Either.applicativeEither)(new Data_Either.Left(v3));
                          });
                      });
                  });
              });
          };
      };
  };
  var showPursuitType = new Prelude.Show(function (v) {
      if (v instanceof Package) {
          return "package";
      };
      if (v instanceof Ident) {
          return "completion";
      };
      throw new Error("Failed pattern match at PscIde.Command line 17, column 3 - line 18, column 3: " + [ v.constructor.name ]);
  });
  var jsonSingletonObject$prime = function (dictEncodeJson) {
      return function (s) {
          return function (o) {
              return Data_Argonaut_Core.jsonSingletonObject(s)(Data_Argonaut_Encode.encodeJson(dictEncodeJson)(o));
          };
      };
  };
  var filterWrapper = function (dictEncodeJson) {
      return function (f) {
          return function (q) {
              return Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("filter")(f))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](dictEncodeJson)("params")(q))(Data_Argonaut_Core.jsonEmptyObject));
          };
      };
  };
  var encodePursuitType = new Data_Argonaut_Encode.EncodeJson(function ($102) {
      return Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(Prelude.show(showPursuitType)($102));
  });
  var encodeMatcher = new Data_Argonaut_Encode.EncodeJson(function (v) {
      if (v instanceof Flex) {
          return Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("matcher")("flex"))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("params")(jsonSingletonObject$prime(Data_Argonaut_Encode.encodeJsonJString)("search")(v.value0)))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof Distance) {
          return Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("matcher")("distance"))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("params")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("search")(v.value0))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonInt)("maximumDistance")(v.value1))(Data_Argonaut_Core.jsonEmptyObject))))(Data_Argonaut_Core.jsonEmptyObject));
      };
      throw new Error("Failed pattern match at PscIde.Command line 29, column 3 - line 33, column 3: " + [ v.constructor.name ]);
  });
  var encodeImportCommand = new Data_Argonaut_Encode.EncodeJson(function (v) {
      if (v instanceof AddImplicitImport) {
          return Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("importCommand")("addImplicitImport"))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("module")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value0)))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof AddImport) {
          return Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("importCommand")("addImport"))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("identifier")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value0)))(Data_Argonaut_Core.jsonEmptyObject));
      };
      throw new Error("Failed pattern match at PscIde.Command line 154, column 3 - line 158, column 3: " + [ v.constructor.name ]);
  });
  var encodeFilter = new Data_Argonaut_Encode.EncodeJson(function (v) {
      if (v instanceof ExactFilter) {
          return filterWrapper(Data_Argonaut_Encode.encodeJsonJson)("exact")(jsonSingletonObject$prime(Data_Argonaut_Encode.encodeJsonJString)("search")(v.value0));
      };
      if (v instanceof PrefixFilter) {
          return filterWrapper(Data_Argonaut_Encode.encodeJsonJson)("prefix")(jsonSingletonObject$prime(Data_Argonaut_Encode.encodeJsonJString)("search")(v.value0));
      };
      if (v instanceof ModuleFilter) {
          return filterWrapper(Data_Argonaut_Encode.encodeJsonJson)("modules")(jsonSingletonObject$prime(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString))("modules")(v.value0));
      };
      if (v instanceof DependencyFilter) {
          return filterWrapper(Data_Argonaut_Encode.encodeJsonJson)("dependencies")(jsonSingletonObject$prime(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString))("modules")(v.value0));
      };
      throw new Error("Failed pattern match at PscIde.Command line 58, column 3 - line 60, column 3: " + [ v.constructor.name ]);
  });
  var decodePursuitCompletion = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("ident"))(function (v1) {
              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("type"))(function (v2) {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("module"))(function (v3) {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("package"))(function (v4) {
                          return Prelude.pure(Data_Either.applicativeEither)({
                              identifier: v1, 
                              "type'": v2, 
                              "module'": v3, 
                              "package": v4
                          });
                      });
                  });
              });
          });
      });
  });
  var decodeModuleList = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude["<$>"](Data_Either.functorEither)(ModuleList)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString))(json));
  });
  var decodeMessage = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Data_Maybe.maybe(new Data_Either.Left("Message not string"))(function ($103) {
          return Data_Either.Right.create(Message($103));
      })(Data_Argonaut_Core.toString(json));
  });
  var decodeImport = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("module"))(function (v1) {
              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("importType"))(function (v2) {
                  if (v2 === "implicit") {
                      return Prelude.bind(Data_Either.bindEither)(Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(Data_Maybe.Just.create)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("qualifier")))(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value)))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)({
                              moduleName: v1, 
                              importType: Implicit.value, 
                              qualifier: v3
                          });
                      });
                  };
                  if (v2 === "explicit") {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString))(v)("identifiers"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)({
                              moduleName: v1, 
                              importType: new Explicit(v3), 
                              qualifier: Data_Maybe.Nothing.value
                          });
                      });
                  };
                  if (v2 === "hiding") {
                      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString))(v)("identifiers"))(function (v3) {
                          return Prelude.pure(Data_Either.applicativeEither)({
                              moduleName: v1, 
                              importType: new Hiding(v3), 
                              qualifier: Data_Maybe.Nothing.value
                          });
                      });
                  };
                  return new Data_Either.Left("unknown importType");
              });
          });
      });
  });
  var decodeImportList = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(decodeImport))(json))(function (v) {
          return Prelude.pure(Data_Either.applicativeEither)(v);
      });
  });
  var decodeCompletion = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("identifier"))(function (v1) {
              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("type"))(function (v2) {
                  return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("module"))(function (v3) {
                      return Prelude.pure(Data_Either.applicativeEither)({
                          identifier: v1, 
                          "type'": v2, 
                          "module'": v3
                      });
                  });
              });
          });
      });
  });
  var decodeImportResult = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Control_Alt["<|>"](Data_Either.altEither)(Control_Alt["<|>"](Data_Either.altEither)(Control_Alt["<|>"](Data_Either.altEither)(Prelude["<$>"](Data_Either.functorEither)(SuccessText.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString))(json)))(Prelude["<$>"](Data_Either.functorEither)(SuccessFile.create)(Data_Argonaut_Decode.decodeJson(decodeMessage)(json))))(Prelude["<$>"](Data_Either.functorEither)(MultipleResults.create)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(decodeCompletion))(json))))(new Data_Either.Left("Couldn't parse as ImportResult"));
  });
  var commandWrapper = function (dictEncodeJson) {
      return function (s) {
          return function (o) {
              return Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("command")(s))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](dictEncodeJson)("params")(o))(Data_Argonaut_Core.jsonEmptyObject));
          };
      };
  };
  var encodeCommand = new Data_Argonaut_Encode.EncodeJson(function (v) {
      if (v instanceof Cwd) {
          return jsonSingletonObject$prime(Data_Argonaut_Encode.encodeJsonJString)("command")("cwd");
      };
      if (v instanceof Ls && v.value0 instanceof LoadedModules) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("list")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("type")("loadedModules"))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof Ls && v.value0 instanceof AvailableModules) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("list")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("type")("availableModules"))(Data_Argonaut_Core.jsonEmptyObject));
      };
      if (v instanceof Ls && v.value0 instanceof Imports) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("list")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("type")("import"))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("file")(v.value0.value0))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof Quit) {
          return jsonSingletonObject$prime(Data_Argonaut_Encode.encodeJsonJString)("command")("quit");
      };
      if (v instanceof Load) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("load")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("modules")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString))(v.value0)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("dependencies")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(Data_Argonaut_Encode.encodeJsonJString))(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof Complete) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("complete")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("filters")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(encodeFilter))(v.value0)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("matcher")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(encodeMatcher))(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof Pursuit) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("pursuit")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("type")(Data_Argonaut_Encode.encodeJson(encodePursuitType)(v.value0)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJString)("query")(v.value1))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof Type) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("type")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("search")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value0)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("filters")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(encodeFilter))(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof AddClause) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("addClause")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("line")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value0)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("annotations")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(v.value1)))(Data_Argonaut_Core.jsonEmptyObject)));
      };
      if (v instanceof CaseSplit) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("caseSplit")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("line")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value0)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("begin")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonInt)(v.value1)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("end")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonInt)(v.value2)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("annotations")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJBoolean)(v.value3)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("type")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value4)))(Data_Argonaut_Core.jsonEmptyObject))))));
      };
      if (v instanceof ImportCmd) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("import")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("file")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value0)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("outfile")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonMaybe(Data_Argonaut_Encode.encodeJsonJString))(v.value1)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("filters")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonArray(encodeFilter))(v.value2)))(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("importCommand")(Data_Argonaut_Encode.encodeJson(encodeImportCommand)(v.value3)))(Data_Argonaut_Core.jsonEmptyObject)))));
      };
      if (v instanceof RebuildCmd) {
          return commandWrapper(Data_Argonaut_Encode.encodeJsonJson)("rebuild")(Data_Argonaut_Combinators["~>"](Data_Argonaut_Encode.encodeJsonJson)(Data_Argonaut_Combinators[":="](Data_Argonaut_Encode.encodeJsonJson)("file")(Data_Argonaut_Encode.encodeJson(Data_Argonaut_Encode.encodeJsonJString)(v.value0)))(Data_Argonaut_Core.jsonEmptyObject));
      };
      throw new Error("Failed pattern match at PscIde.Command line 92, column 3 - line 93, column 3: " + [ v.constructor.name ]);
  });
  exports["SuccessFile"] = SuccessFile;
  exports["SuccessText"] = SuccessText;
  exports["MultipleResults"] = MultipleResults;
  exports["Implicit"] = Implicit;
  exports["Explicit"] = Explicit;
  exports["Hiding"] = Hiding;
  exports["Message"] = Message;
  exports["ModuleList"] = ModuleList;
  exports["AddImplicitImport"] = AddImplicitImport;
  exports["AddImport"] = AddImport;
  exports["LoadedModules"] = LoadedModules;
  exports["Imports"] = Imports;
  exports["AvailableModules"] = AvailableModules;
  exports["Cwd"] = Cwd;
  exports["Ls"] = Ls;
  exports["Quit"] = Quit;
  exports["Load"] = Load;
  exports["Complete"] = Complete;
  exports["Pursuit"] = Pursuit;
  exports["Type"] = Type;
  exports["AddClause"] = AddClause;
  exports["CaseSplit"] = CaseSplit;
  exports["ImportCmd"] = ImportCmd;
  exports["RebuildCmd"] = RebuildCmd;
  exports["ExactFilter"] = ExactFilter;
  exports["PrefixFilter"] = PrefixFilter;
  exports["ModuleFilter"] = ModuleFilter;
  exports["DependencyFilter"] = DependencyFilter;
  exports["Flex"] = Flex;
  exports["Distance"] = Distance;
  exports["Package"] = Package;
  exports["Ident"] = Ident;
  exports["unwrapResponse"] = unwrapResponse;
  exports["commandWrapper"] = commandWrapper;
  exports["filterWrapper"] = filterWrapper;
  exports["showPursuitType"] = showPursuitType;
  exports["encodePursuitType"] = encodePursuitType;
  exports["encodeMatcher"] = encodeMatcher;
  exports["encodeFilter"] = encodeFilter;
  exports["encodeCommand"] = encodeCommand;
  exports["encodeImportCommand"] = encodeImportCommand;
  exports["decodeMessage"] = decodeMessage;
  exports["decodeModuleList"] = decodeModuleList;
  exports["decodeCompletion"] = decodeCompletion;
  exports["decodePursuitCompletion"] = decodePursuitCompletion;
  exports["decodeImportList"] = decodeImportList;
  exports["decodeImport"] = decodeImport;
  exports["decodeImportResult"] = decodeImportResult;
})(PS["PscIde.Command"] = PS["PscIde.Command"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Prelude = PS["Prelude"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Encode = PS["Data.Argonaut.Encode"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];        
  var sendCommandG = function (dictEncodeJson) {
      return function (dictDecodeJson) {
          return function (dictDecodeJson1) {
              return function (port) {
                  return function (command) {
                      return function (unwrapper) {
                          return Control_Monad_Aff.makeAff(function (err) {
                              return function (succ) {
                                  return $foreign.send(Prelude.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode.encodeJson(dictEncodeJson)(command)))(port)(function ($9) {
                                      return succ(unwrapper($9));
                                  })(err);
                              };
                          });
                      };
                  };
              };
          };
      };
  };
  var sendCommandR = function (dictEncodeJson) {
      return function (dictDecodeJson) {
          return function (dictDecodeJson1) {
              return function (port) {
                  return function (command) {
                      return sendCommandG(dictEncodeJson)(dictDecodeJson)(dictDecodeJson1)(port)(command)(PscIde_Command.unwrapResponse(dictDecodeJson)(dictDecodeJson1));
                  };
              };
          };
      };
  };
  var sendCommand = function (dictEncodeJson) {
      return function (dictDecodeJson) {
          return function (port) {
              return function (command) {
                  return Control_Monad_Aff.makeAff(function (err) {
                      return function (succ) {
                          return $foreign.send(Prelude.show(Data_Argonaut_Core.showJson)(Data_Argonaut_Encode.encodeJson(dictEncodeJson)(command)))(port)(function ($10) {
                              return succ(Control_Bind.join(Data_Either.bindEither)(PscIde_Command.unwrapResponse(Data_Argonaut_Decode.decodeJsonString)(dictDecodeJson)($10)));
                          })(err);
                      };
                  });
              };
          };
      };
  };
  var type$prime = function (port) {
      return function (s) {
          return function (fs) {
              return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode.decodeArray(PscIde_Command.decodeCompletion))(port)(new PscIde_Command.Type(s, fs));
          };
      };
  };
  var quit = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeMessage)(port)(PscIde_Command.Quit.value);
  };
  var pursuitCompletion = function (port) {
      return function (q) {
          return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode.decodeArray(PscIde_Command.decodePursuitCompletion))(port)(new PscIde_Command.Pursuit(PscIde_Command.Ident.value, q));
      };
  };
  var load = function (port) {
      return function (ms) {
          return function (ds) {
              return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeMessage)(port)(new PscIde_Command.Load(ms, ds));
          };
      };
  };
  var listLoadedModules = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeModuleList)(port)(new PscIde_Command.Ls(PscIde_Command.LoadedModules.value));
  };
  var listImports = function (port) {
      return function (fp) {
          return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeImportList)(port)(new PscIde_Command.Ls(new PscIde_Command.Imports(fp)));
      };
  };
  var listAvailableModules = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeModuleList)(port)(new PscIde_Command.Ls(PscIde_Command.AvailableModules.value));
  };
  var implicitImport = function (port) {
      return function (infile) {
          return function (outfile) {
              return function (filters) {
                  return function (mod) {
                      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeImportResult)(port)(new PscIde_Command.ImportCmd(infile, outfile, filters, new PscIde_Command.AddImplicitImport(mod)));
                  };
              };
          };
      };
  };
  var explicitImport = function (port) {
      return function (infile) {
          return function (outfile) {
              return function (filters) {
                  return function (ident) {
                      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeImportResult)(port)(new PscIde_Command.ImportCmd(infile, outfile, filters, new PscIde_Command.AddImport(ident)));
                  };
              };
          };
      };
  };
  var cwd = function (port) {
      return sendCommand(PscIde_Command.encodeCommand)(PscIde_Command.decodeMessage)(port)(PscIde_Command.Cwd.value);
  };
  var complete = function (port) {
      return function (fs) {
          return function (m) {
              return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode.decodeArray(PscIde_Command.decodeCompletion))(port)(new PscIde_Command.Complete(fs, m));
          };
      };
  };
  var suggestTypos = function (port) {
      return function (q) {
          return function (m) {
              return Prelude["<$>"](Control_Monad_Aff.functorAff)(function (v) {
                  return Control_Alt["<|>"](Data_Either.altEither)(v)(Prelude.pure(Data_Either.applicativeEither)([  ]));
              })(complete(port)([  ])(new Data_Maybe.Just(new PscIde_Command.Distance(q, m))));
          };
      };
  };
  var caseSplit = function (port) {
      return function (line) {
          return function (begin) {
              return function (end) {
                  return function (annotations) {
                      return function (typ) {
                          return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString))(port)(new PscIde_Command.CaseSplit(line, begin, end, annotations, typ));
                      };
                  };
              };
          };
      };
  };
  var addClause = function (port) {
      return function (line) {
          return function (annotations) {
              return sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeJsonString))(port)(new PscIde_Command.AddClause(line, annotations));
          };
      };
  };
  exports["explicitImport"] = explicitImport;
  exports["implicitImport"] = implicitImport;
  exports["caseSplit"] = caseSplit;
  exports["addClause"] = addClause;
  exports["suggestTypos"] = suggestTypos;
  exports["type'"] = type$prime;
  exports["complete"] = complete;
  exports["pursuitCompletion"] = pursuitCompletion;
  exports["quit"] = quit;
  exports["load"] = load;
  exports["listImports"] = listImports;
  exports["listAvailableModules"] = listAvailableModules;
  exports["listLoadedModules"] = listLoadedModules;
  exports["cwd"] = cwd;
  exports["sendCommand"] = sendCommand;
  exports["sendCommandR"] = sendCommandR;
  exports["sendCommandG"] = sendCommandG;
})(PS["PscIde"] = PS["PscIde"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_Point = PS["Atom.Point"];
  var Atom_Range = PS["Atom.Range"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var getLinePosition = function (ed) {
      return function __do() {
          var v = Atom_Editor.getCursorBufferPosition(ed)();
          var range = Atom_Range.mkRange(Atom_Point.mkPoint(Atom_Point.getRow(v))(0))(Atom_Point.mkPoint(Atom_Point.getRow(v))(1000));
          var col = Atom_Point.getColumn(v);
          var v1 = Atom_Editor.getTextInRange(ed)(range)();
          return {
              line: v1, 
              pos: v, 
              col: col, 
              range: range
          };
      };
  };
  exports["getLinePosition"] = getLinePosition;
})(PS["IdePurescript.Atom.Editor"] = PS["IdePurescript.Atom.Editor"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Array = PS["Data.Array"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];
  var Data_Argonaut_Combinators = PS["Data.Argonaut.Combinators"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];        
  var ModuleCompletion = (function () {
      function ModuleCompletion(value0) {
          this.value0 = value0;
      };
      ModuleCompletion.create = function (value0) {
          return new ModuleCompletion(value0);
      };
      return ModuleCompletion;
  })();
  var runMsg = function (v) {
      return v;
  };
  var moduleFilters = function (v) {
      if (v.length === 0) {
          return [  ];
      };
      return [ new PscIde_Command.ModuleFilter(v) ];
  };
  var moduleFilterModules = function (modulePrefix) {
      return function (unqualModules) {
          return function (getQualifiedModule) {
              var $16 = Data_String["null"](modulePrefix);
              if ($16) {
                  return unqualModules;
              };
              if (!$16) {
                  var $17 = Data_String.contains(".")(modulePrefix);
                  if ($17) {
                      return [ modulePrefix ];
                  };
                  if (!$17) {
                      var mods = getQualifiedModule(modulePrefix);
                      var $18 = Data_Array["null"](mods);
                      if ($18) {
                          return [ modulePrefix ];
                      };
                      if (!$18) {
                          return mods;
                      };
                      throw new Error("Failed pattern match at IdePurescript.PscIde line 63, column 5 - line 68, column 1: " + [ $18.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at IdePurescript.PscIde line 59, column 8 - line 68, column 1: " + [ $17.constructor.name ]);
              };
              throw new Error("Failed pattern match at IdePurescript.PscIde line 57, column 3 - line 68, column 1: " + [ $16.constructor.name ]);
          };
      };
  };
  var eitherToErr = function (c) {
      return Prelude.bind(Control_Monad_Aff.bindAff)(c)(function (v) {
          if (v instanceof Data_Either.Left) {
              return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error(v.value0));
          };
          if (v instanceof Data_Either.Right) {
              return Prelude["return"](Control_Monad_Aff.applicativeAff)(v.value0);
          };
          throw new Error("Failed pattern match at IdePurescript.PscIde line 22, column 3 - line 26, column 1: " + [ v.constructor.name ]);
      });
  };
  var result = function (f) {
      return function (a) {
          return eitherToErr(Prelude["<$>"](Control_Monad_Aff.functorAff)(function (v) {
              return Prelude["<$>"](Data_Either.functorEither)(f)(v);
          })(a));
      };
  };
  var getAvailableModules = (function () {
      var conv = function (v) {
          return v;
      };
      return function ($50) {
          return result(conv)(PscIde.listAvailableModules($50));
      };
  })();
  var getLoadedModules = (function () {
      var conv = function (v) {
          return v;
      };
      return function ($51) {
          return result(conv)(PscIde.listLoadedModules($51));
      };
  })();
  var loadDeps = function (port) {
      return function (main) {
          return result(runMsg)(PscIde.load(port)([  ])([ main ]));
      };
  };
  var decodeModuleCompletion = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(function (v) {
          return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("module"))(function (v1) {
              return Prelude.bind(Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(v)("package"))(function (v2) {
                  return Prelude.pure(Data_Either.applicativeEither)(new ModuleCompletion({
                      "module'": v1, 
                      "package": v2
                  }));
              });
          });
      });
  });
  var getPursuitModuleCompletion = function (port) {
      return function (str) {
          var convPursuitModuleCompletion = function (v) {
              return {
                  "package": v.value0["package"], 
                  module: v.value0["module'"]
              };
          };
          var complete = function (q) {
              return PscIde.sendCommand(PscIde_Command.encodeCommand)(Data_Argonaut_Decode.decodeArray(decodeModuleCompletion))(port)(new PscIde_Command.Pursuit(PscIde_Command.Package.value, q));
          };
          return result(Prelude.map(Prelude.functorArray)(convPursuitModuleCompletion))(complete(str));
      };
  };
  var cwd = function ($52) {
      return result(runMsg)(PscIde.cwd($52));
  };
  var convPursuitCompletion = function (v) {
      return {
          identifier: v.identifier, 
          "package": v["package"], 
          type: v["type'"], 
          module: v["module'"]
      };
  };
  var getPursuitCompletion = function (port) {
      return function (str) {
          return result(Prelude.map(Prelude.functorArray)(convPursuitCompletion))(PscIde.pursuitCompletion(port)(str));
      };
  };
  var convCompletion = function (v) {
      return {
          type: v["type'"], 
          identifier: v.identifier, 
          module: v["module'"]
      };
  };
  var getCompletion = function (port) {
      return function (prefix) {
          return function (modulePrefix) {
              return function (moduleCompletion) {
                  return function (unqualModules) {
                      return function (getQualifiedModule) {
                          var mods = (function () {
                              if (moduleCompletion) {
                                  return [  ];
                              };
                              if (!moduleCompletion) {
                                  return moduleFilterModules(modulePrefix)(unqualModules)(getQualifiedModule);
                              };
                              throw new Error("Failed pattern match at IdePurescript.PscIde line 94, column 10 - line 95, column 3: " + [ moduleCompletion.constructor.name ]);
                          })();
                          var conv = Prelude.map(Prelude.functorArray)(convCompletion);
                          return Prelude["<$>"](Control_Monad_Aff.functorAff)(conv)(eitherToErr(PscIde.complete(port)(Data_Array[":"](new PscIde_Command.PrefixFilter(prefix))(moduleFilters(mods)))(Data_Maybe.Nothing.value)));
                      };
                  };
              };
          };
      };
  };
  var abbrevType = (function () {
      var r = Data_String_Regex.regex("(?:\\w+\\.)+(\\w+)")((function () {
          var $46 = {};
          for (var $47 in Data_String_Regex.noFlags) {
              if (Data_String_Regex.noFlags.hasOwnProperty($47)) {
                  $46[$47] = Data_String_Regex.noFlags[$47];
              };
          };
          $46.global = true;
          return $46;
      })());
      return Data_String_Regex.replace(r)("$1");
  })();
  var getType = function (port) {
      return function (text) {
          return function (modulePrefix) {
              return function (unqualModules) {
                  return function (getQualifiedModule) {
                      var mods = moduleFilterModules(modulePrefix)(unqualModules)(getQualifiedModule);
                      var conv = function (r) {
                          var $48 = Data_Array.head(Prelude.map(Prelude.functorArray)(convCompletion)(r));
                          if ($48 instanceof Data_Maybe.Just) {
                              return abbrevType($48.value0.type);
                          };
                          if ($48 instanceof Data_Maybe.Nothing) {
                              return "";
                          };
                          throw new Error("Failed pattern match at IdePurescript.PscIde line 83, column 14 - line 87, column 1: " + [ $48.constructor.name ]);
                      };
                      return result(conv)(PscIde["type'"](port)(text)(moduleFilters(mods)));
                  };
              };
          };
      };
  };
  exports["getLoadedModules"] = getLoadedModules;
  exports["getAvailableModules"] = getAvailableModules;
  exports["getPursuitCompletion"] = getPursuitCompletion;
  exports["getPursuitModuleCompletion"] = getPursuitModuleCompletion;
  exports["eitherToErr"] = eitherToErr;
  exports["getType"] = getType;
  exports["loadDeps"] = loadDeps;
  exports["cwd"] = cwd;
  exports["getCompletion"] = getCompletion;
})(PS["IdePurescript.PscIde"] = PS["IdePurescript.PscIde"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex_1 = PS["Data.String.Regex"];
  var Data_String_Regex_1 = PS["Data.String.Regex"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var Prelude = PS["Prelude"];
  var PscIde_1 = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var PscIde_1 = PS["PscIde"];        
  var Module = (function () {
      function Module() {

      };
      Module.value = new Module();
      return Module;
  })();
  var Type = (function () {
      function Type() {

      };
      Type.value = new Type();
      return Type;
  })();
  var $$Function = (function () {
      function Function() {

      };
      Function.value = new Function();
      return Function;
  })();
  var Value = (function () {
      function Value() {

      };
      Value.value = new Value();
      return Value;
  })();
  var moduleRegex = Data_String_Regex_1.regex("(?:^|[^A-Za-z_.])(?:((?:[A-Z][A-Za-z0-9]*\\.)*(?:[A-Z][A-Za-z0-9]*))\\.)?([a-zA-Z][a-zA-Z0-9_']*)?$")(Data_String_Regex_1.noFlags);
  var getModuleSuggestions = function (port) {
      return function (prefix) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.eitherToErr(PscIde_1.listAvailableModules(port)))(function (v) {
              return Prelude["return"](Control_Monad_Aff.applicativeAff)(Data_Array.filter(function (m) {
                  return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqInt))(Data_String.indexOf(prefix)(m))(new Data_Maybe.Just(0));
              })(v));
          });
      };
  };
  var getSuggestions = function (port) {
      return function (v) {
          var suggestionTypeAtomValue = function (s) {
              if (s instanceof Module) {
                  return "import";
              };
              if (s instanceof Type) {
                  return "type";
              };
              if (s instanceof $$Function) {
                  return "function";
              };
              if (s instanceof Value) {
                  return "value";
              };
              throw new Error("Failed pattern match at IdePurescript.Atom.Completion line 77, column 33 - line 83, column 5: " + [ s.constructor.name ]);
          };
          var result = function (qualifier) {
              return function (prefix) {
                  return function (v1) {
                      var suggestType = (function () {
                          var $14 = Data_String.contains("->")(v1.type);
                          if ($14) {
                              return $$Function.value;
                          };
                          if (!$14) {
                              var $15 = Data_String_Regex_1.test(Data_String_Regex_1.regex("^[A-Z]")(Data_String_Regex_1.noFlags))(v1.identifier);
                              if ($15) {
                                  return Type.value;
                              };
                              if (!$15) {
                                  return Value.value;
                              };
                              throw new Error("Failed pattern match at IdePurescript.Atom.Completion line 114, column 16 - line 115, column 16: " + [ $15.constructor.name ]);
                          };
                          throw new Error("Failed pattern match at IdePurescript.Atom.Completion line 113, column 11 - line 115, column 16: " + [ $14.constructor.name ]);
                      })();
                      return {
                          text: v1.module + ("." + v1.identifier), 
                          snippet: v1.identifier, 
                          displayText: (function () {
                              if (suggestType instanceof Type) {
                                  return v1.identifier;
                              };
                              return v1.identifier;
                          })(), 
                          type: suggestionTypeAtomValue(suggestType), 
                          description: v1.type, 
                          replacementPrefix: prefix, 
                          rightLabel: v1.module, 
                          className: "purescript-suggestion", 
                          addImport: new Data_Maybe.Just({
                              mod: v1.module, 
                              identifier: v1.identifier, 
                              qualifier: (function () {
                                  var $17 = qualifier === "";
                                  if ($17) {
                                      return Data_Maybe.Nothing.value;
                                  };
                                  if (!$17) {
                                      return new Data_Maybe.Just(qualifier);
                                  };
                                  throw new Error("Failed pattern match at IdePurescript.Atom.Completion line 109, column 55 - line 109, column 107: " + [ $17.constructor.name ]);
                              })()
                          })
                      };
                  };
              };
          };
          var parsed = (function () {
              var $21 = Data_String_Regex_1.match(moduleRegex)(v.line);
              if ($21 instanceof Data_Maybe.Just && ($21.value0.length === 3 && ($21.value0[0] instanceof Data_Maybe.Just && (Prelude["/="](Data_Maybe.eqMaybe(Prelude.eqString))($21.value0[1])(Data_Maybe.Nothing.value) || Prelude["/="](Data_Maybe.eqMaybe(Prelude.eqString))($21.value0[2])(Data_Maybe.Nothing.value))))) {
                  return new Data_Maybe.Just({
                      mod: Data_Maybe.fromMaybe("")($21.value0[1]), 
                      token: Data_Maybe.fromMaybe("")($21.value0[2])
                  });
              };
              return Data_Maybe.Nothing.value;
          })();
          var modResult = function (prefix) {
              return function (moduleName) {
                  return {
                      text: moduleName, 
                      snippet: moduleName, 
                      displayText: moduleName, 
                      type: suggestionTypeAtomValue(Module.value), 
                      description: "", 
                      replacementPrefix: prefix, 
                      rightLabel: "", 
                      className: "purescript-suggestion", 
                      addImport: Data_Maybe.Nothing.value
                  };
              };
          };
          var getModuleName = function (v1) {
              return function (token) {
                  if (v1 === "") {
                      return token;
                  };
                  return v1 + ("." + token);
              };
          };
          var moduleCompletion = Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqInt))(Data_String.indexOf("import")(v.line))(new Data_Maybe.Just(0));
          if (parsed instanceof Data_Maybe.Just) {
              if (moduleCompletion) {
                  var prefix = getModuleName(parsed.value0.mod)(parsed.value0.token);
                  return Prelude.bind(Control_Monad_Aff.bindAff)(getModuleSuggestions(port)(prefix))(function (v1) {
                      return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.map(Prelude.functorArray)(modResult(prefix))(v1));
                  });
              };
              if (!moduleCompletion) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getCompletion(port)(parsed.value0.token)(parsed.value0.mod)(moduleCompletion)(v.moduleInfo.modules)(v.moduleInfo.getQualifiedModule))(function (v1) {
                      return Prelude["return"](Control_Monad_Aff.applicativeAff)(Prelude.map(Prelude.functorArray)(result(parsed.value0.mod)(parsed.value0.token))(v1));
                  });
              };
              throw new Error("Failed pattern match at IdePurescript.Atom.Completion line 59, column 7 - line 66, column 5: " + [ moduleCompletion.constructor.name ]);
          };
          if (parsed instanceof Data_Maybe.Nothing) {
              return Prelude["return"](Control_Monad_Aff.applicativeAff)([  ]);
          };
          throw new Error("Failed pattern match at IdePurescript.Atom.Completion line 57, column 6 - line 67, column 3: " + [ parsed.constructor.name ]);
      };
  };
  exports["Module"] = Module;
  exports["Type"] = Type;
  exports["Value"] = Value;
  exports["getSuggestions"] = getSuggestions;
  exports["getModuleSuggestions"] = getModuleSuggestions;
  exports["moduleRegex"] = moduleRegex;
})(PS["IdePurescript.Atom.Completion"] = PS["IdePurescript.Atom.Completion"] || {});
(function(exports) {// module IdePurescript.Atom.PromptPanel

  exports.getEditorModel = function (editor) {
    return function () { return editor.getModel(); };
  }

  exports.focus = function (e) {
    return function () {
      e.focus();
    }
  }

  exports.getActiveElement = function () {
    return document.activeElement;
  };
})(PS["IdePurescript.Atom.PromptPanel"] = PS["IdePurescript.Atom.PromptPanel"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Atom.PromptPanel"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_CommandRegistry = PS["Atom.CommandRegistry"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_Event_EventTarget = PS["DOM.Event.EventTarget"];
  var DOM_Event_EventTypes = PS["DOM.Event.EventTypes"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_Document = PS["DOM.Node.Document"];
  var DOM_Node_Element = PS["DOM.Node.Element"];
  var DOM_Node_Node = PS["DOM.Node.Node"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Prelude = PS["Prelude"];        
  var addPromptPanel = function (promptText) {
      return function (initialText) {
          return Control_Monad_Aff.makeAff(function (err) {
              return function (succ) {
                  return function __do() {
                      var v = Atom_Atom.getAtom();
                      var v1 = Prelude["<$>"](Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Prelude[">>="](Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document))();
                      var v2 = DOM_Node_Document.createElement("div")(v1)();
                      var v3 = DOM_Node_Document.createTextNode(promptText)(v1)();
                      DOM_Node_Node.appendChild(DOM_Node_Types.textToNode(v3))(DOM_Node_Types.elementToNode(v2))();
                      var v4 = DOM_Node_Document.createElement("atom-text-editor")(v1)();
                      DOM_Node_Element.setAttribute("mini")("mini")(v4)();
                      DOM_Node_Node.appendChild(DOM_Node_Types.elementToNode(v4))(DOM_Node_Types.elementToNode(v2))();
                      var v5 = Atom_Workspace.addModalPanel(v.workspace)(v2)(true)(100)();
                      var v6 = $foreign.getEditorModel(v4)();
                      var v7 = Atom_Editor.setText(v6)(initialText)();
                      var v8 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign.getActiveElement)();
                      $foreign.focus(v4)();
                      var close = function (isSucc) {
                          return function (v9) {
                              return function __do() {
                                  var v10 = $foreign.getEditorModel(v4)();
                                  var v11 = Atom_Editor.getText(v10)();
                                  Atom_Workspace.destroyPanel(v5)();
                                  Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))($foreign.focus)(v8)();
                                  return succ((function () {
                                      if (isSucc) {
                                          return new Data_Maybe.Just(v11);
                                      };
                                      if (!isSucc) {
                                          return Data_Maybe.Nothing.value;
                                      };
                                      throw new Error("Failed pattern match at IdePurescript.Atom.PromptPanel line 57, column 15 - line 57, column 55: " + [ isSucc.constructor.name ]);
                                  })())();
                              };
                          };
                      };
                      Atom_CommandRegistry["addCommand'"](v.commands)(v4)("core:confirm")(close(true))();
                      Atom_CommandRegistry["addCommand'"](v.commands)(v4)("core:cancel")(close(false))();
                      return DOM_Event_EventTarget.addEventListener(DOM_Event_EventTypes.blur)(DOM_Event_EventTarget.eventListener(close(false)))(true)(DOM_Node_Types.elementToEventTarget(v4))();
                  };
              };
          });
      };
  };
  exports["addPromptPanel"] = addPromptPanel;
})(PS["IdePurescript.Atom.PromptPanel"] = PS["IdePurescript.Atom.PromptPanel"] || {});
(function(exports) {// module IdePurescript.Atom.SelectView

  var SelectListView = require('atom-space-pen-views').SelectListView;

  exports.selectListViewStaticInlineImpl = function(viewForItem, confirmed, filterKey, items) {
    function PurescriptSelectListView() {
      SelectListView.call(this);
      this.addClass('overlay');
      this.addClass('ps-inline-overlay');
    }

    PurescriptSelectListView.prototype = Object.create(SelectListView.prototype);
    PurescriptSelectListView.prototype.viewForItem = viewForItem;
    PurescriptSelectListView.prototype.show = function() {
      list.storeFocusedElement();
      var editor = atom.workspace.getActiveTextEditor()
        , marker = editor.getLastCursor().getMarker();
      this.panel = editor.decorateMarker(marker, { type: "overlay", position: "tail", item: this });
      setTimeout(function() {
        list.focusFilterEditor();
      }, 20);
    };
    PurescriptSelectListView.prototype.confirmed = function(item) {
      confirmed(item);
      this.panel && this.panel.destroy();
      this.restoreFocus();
    };
    PurescriptSelectListView.prototype.cancelled = function() {
      this.panel && this.panel.destroy();
      this.restoreFocus();
    };
    PurescriptSelectListView.prototype.getFilterKey = function() {
      return filterKey;
    };

    var list = new PurescriptSelectListView();
    list.setItems(items);
    list.show();
    return {};
  }

  exports.selectListViewStaticImpl = function(viewForItem, confirmed, filterKey, items) {
    function PurescriptSelectListView() {
      SelectListView.call(this);
    }

    PurescriptSelectListView.prototype = Object.create(SelectListView.prototype);
    PurescriptSelectListView.prototype.viewForItem = viewForItem;
    PurescriptSelectListView.prototype.show = function() {
      list.storeFocusedElement();
      this.panel = atom.workspace.addModalPanel({item: list, visible: true});
      list.focusFilterEditor();
    };
    PurescriptSelectListView.prototype.confirmed = function(item) {
      confirmed(item);
      this.panel && this.panel.destroy();
    };
    PurescriptSelectListView.prototype.cancelled = function() {
      this.panel && this.panel.destroy();
    };
    PurescriptSelectListView.prototype.getFilterKey = function() {
      return filterKey;
    };

    var list = new PurescriptSelectListView();
    list.setItems(items);
    list.show();
    return {};
  }


  exports.selectListViewDynamicImpl = function(viewForItem, confirmed, filterKey, filterQuery, getCompletions, changeDelay) {
    function PurescriptDynamicSelectListView() {
      SelectListView.call(this);
    }

    PurescriptDynamicSelectListView.prototype = Object.create(SelectListView.prototype);
    PurescriptDynamicSelectListView.prototype.viewForItem = viewForItem;
    PurescriptDynamicSelectListView.prototype.show = function() {
      list.storeFocusedElement();
      this.panel = atom.workspace.addModalPanel({item: list, visible: true});
      list.focusFilterEditor();
    };
    PurescriptDynamicSelectListView.prototype.confirmed = function(item) {
      confirmed(item);
      this.panel && this.panel.destroy();
    };
    PurescriptDynamicSelectListView.prototype.cancelled = function() {
      this.panel && this.panel.destroy();
    };
    PurescriptDynamicSelectListView.prototype.getFilterKey = function() {
      return filterKey;
    };
    PurescriptDynamicSelectListView.prototype.getFilterQuery = function() {
      var baseQuery = SelectListView.prototype.getFilterQuery.call(this);
      return filterQuery(baseQuery);
    };
    PurescriptDynamicSelectListView.prototype.initialize = function() {
      SelectListView.prototype.initialize.call(this);
      var editor = this[0].firstChild.getModel();
      var buffer = editor.getBuffer();
      buffer.stoppedChangingDelay = changeDelay;
      var that = this;
      buffer.onDidStopChanging(function(text) {
        getCompletions(buffer.getText()).then(function (items) {
          that.setItems(items);
        });
      })
    };

    var list = new PurescriptDynamicSelectListView();
    list.show();
    return {};
  }
})(PS["IdePurescript.Atom.SelectView"] = PS["IdePurescript.Atom.SelectView"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Atom.SelectView"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var DOM = PS["DOM"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Control_Promise_1 = PS["Control.Promise"];
  var Control_Promise_1 = PS["Control.Promise"];        
  var selectListViewStaticInline = function (viewForItem) {
      return function (confirmed) {
          return function (filterKey) {
              return function (items) {
                  return Data_Function_Eff.runEffFn4($foreign.selectListViewStaticInlineImpl)(viewForItem)(Data_Function_Eff.mkEffFn1(confirmed))(Data_Nullable.toNullable(filterKey))(items);
              };
          };
      };
  };
  var selectListViewStatic = function (viewForItem) {
      return function (confirmed) {
          return function (filterKey) {
              return function (items) {
                  return Data_Function_Eff.runEffFn4($foreign.selectListViewStaticImpl)(viewForItem)(Data_Function_Eff.mkEffFn1(confirmed))(Data_Nullable.toNullable(filterKey))(items);
              };
          };
      };
  };
  var selectListViewDynamic = function (viewForItem) {
      return function (confirmed) {
          return function (filterKey) {
              return function (filterQuery) {
                  return function (getItems) {
                      return function (changeDelay) {
                          return Data_Function_Eff.runEffFn6($foreign.selectListViewDynamicImpl)(viewForItem)(Data_Function_Eff.mkEffFn1(confirmed))(Data_Nullable.toNullable(filterKey))(filterQuery)(Data_Function_Eff.mkEffFn1(function (s) {
                              return Control_Promise_1.fromAff(getItems(s));
                          }))(changeDelay);
                      };
                  };
              };
          };
      };
  };
  exports["selectListViewDynamic"] = selectListViewDynamic;
  exports["selectListViewStaticInline"] = selectListViewStaticInline;
  exports["selectListViewStatic"] = selectListViewStatic;
})(PS["IdePurescript.Atom.SelectView"] = PS["IdePurescript.Atom.SelectView"] || {});
(function(exports) {// module IdePurescript.Atom.Tooltips

  exports.mkTooltipProvider = function(provide) {
      var HoverTooltips = require('hover-tooltips').HoverTooltips;
      function ToolTipProvider() {
        HoverTooltips.call(this);
        this.syntax = 'source.purescript';
        this.provider = provide;
        this.activate();
      }
      ToolTipProvider.prototype.dispose = function () { this.deactivate(); };
      ToolTipProvider.prototype = Object.create(HoverTooltips.prototype);

      return new ToolTipProvider();
  };
})(PS["IdePurescript.Atom.Tooltips"] = PS["IdePurescript.Atom.Tooltips"] || {});
(function(exports) {// module IdePurescript.Modules

  exports.tmpDir = function() {
    return require('os').tmpDir();
  };
})(PS["IdePurescript.Modules"] = PS["IdePurescript.Modules"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];        
  var ASCII = (function () {
      function ASCII() {

      };
      ASCII.value = new ASCII();
      return ASCII;
  })();
  var UTF8 = (function () {
      function UTF8() {

      };
      UTF8.value = new UTF8();
      return UTF8;
  })();
  var UTF16LE = (function () {
      function UTF16LE() {

      };
      UTF16LE.value = new UTF16LE();
      return UTF16LE;
  })();
  var UCS2 = (function () {
      function UCS2() {

      };
      UCS2.value = new UCS2();
      return UCS2;
  })();
  var Base64 = (function () {
      function Base64() {

      };
      Base64.value = new Base64();
      return Base64;
  })();
  var Binary = (function () {
      function Binary() {

      };
      Binary.value = new Binary();
      return Binary;
  })();
  var Hex = (function () {
      function Hex() {

      };
      Hex.value = new Hex();
      return Hex;
  })();
  var showEncoding = new Prelude.Show(function (v) {
      if (v instanceof ASCII) {
          return "ascii";
      };
      if (v instanceof UTF8) {
          return "utf8";
      };
      if (v instanceof UTF16LE) {
          return "utf16le";
      };
      if (v instanceof UCS2) {
          return "ucs2";
      };
      if (v instanceof Base64) {
          return "base64";
      };
      if (v instanceof Binary) {
          return "binary";
      };
      if (v instanceof Hex) {
          return "hex";
      };
      throw new Error("Failed pattern match at Node.Encoding line 18, column 3 - line 19, column 3: " + [ v.constructor.name ]);
  });
  exports["ASCII"] = ASCII;
  exports["UTF8"] = UTF8;
  exports["UTF16LE"] = UTF16LE;
  exports["UCS2"] = UCS2;
  exports["Base64"] = Base64;
  exports["Binary"] = Binary;
  exports["Hex"] = Hex;
  exports["showEncoding"] = showEncoding;
})(PS["Node.Encoding"] = PS["Node.Encoding"] || {});
(function(exports) {
    "use strict";
  var path =require("path");         

  exports.concat = function (segments) {
    return path.join.apply(this, segments);
  };                             

  exports.sep = path.sep;
})(PS["Node.Path"] = PS["Node.Path"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.Path"];
  exports["sep"] = $foreign.sep;
  exports["concat"] = $foreign.concat;
})(PS["Node.Path"] = PS["Node.Path"] || {});
(function(exports) {
  /* global exports */
  /* global Buffer */
  /* global require */
  "use strict";

  exports.toStringImpl = function (enc) {
    return function (buff) {
      return function() {
        return buff.toString(enc);
      };
    };
  };
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.Buffer"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Encoding = PS["Node.Encoding"];
  var toString = function ($3) {
      return $foreign.toStringImpl(Prelude.show(Node_Encoding.showEncoding)($3));
  };
  exports["toString"] = toString;
})(PS["Node.Buffer"] = PS["Node.Buffer"] || {});
(function(exports) {
  /* global require */
  /* global exports */
  "use strict";

  // module Node.FS.Async

  exports.handleCallbackImpl = function (left, right, f) {
    return function (err, value) {
      if (err) {
        f(left(err))();
      } else {
        f(right(value))();
      }
    };
  };
})(PS["Node.FS.Async"] = PS["Node.FS.Async"] || {});
(function(exports) {
    "use strict";
  // module Node.FS.Internal

  exports.unsafeRequireFS = require("fs");
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.FS.Internal"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var mkEff = Unsafe_Coerce.unsafeCoerce;
  exports["mkEff"] = mkEff;
  exports["unsafeRequireFS"] = $foreign.unsafeRequireFS;
})(PS["Node.FS.Internal"] = PS["Node.FS.Internal"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.FS.Async"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Date = PS["Data.Date"];
  var Data_Time = PS["Data.Time"];
  var Data_Either = PS["Data.Either"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Node_Buffer = PS["Node.Buffer"];
  var Data_Int = PS["Data.Int"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Internal = PS["Node.FS.Internal"];        
  var handleCallback = function (cb) {
      return $foreign.handleCallbackImpl(Data_Either.Left.create, Data_Either.Right.create, cb);
  };
  var fs = Node_FS_Internal.unsafeRequireFS;                                                                            
  var readFile = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEff(function (v) {
              return fs.readFile(file, {}, handleCallback(cb));
          });
      };
  };
  var readTextFile = function (encoding) {
      return function (file) {
          return function (cb) {
              return Node_FS_Internal.mkEff(function (v) {
                  return fs.readFile(file, {
                      encoding: Prelude.show(Node_Encoding.showEncoding)(encoding)
                  }, handleCallback(cb));
              });
          };
      };
  };
  var unlink = function (file) {
      return function (cb) {
          return Node_FS_Internal.mkEff(function (v) {
              return fs.unlink(file, handleCallback(cb));
          });
      };
  };
  var writeFile = function (file) {
      return function (buff) {
          return function (cb) {
              return Node_FS_Internal.mkEff(function (v) {
                  return fs.writeFile(file, buff, {}, handleCallback(cb));
              });
          };
      };
  };
  var writeTextFile = function (encoding) {
      return function (file) {
          return function (buff) {
              return function (cb) {
                  return Node_FS_Internal.mkEff(function (v) {
                      return fs.writeFile(file, buff, {
                          encoding: Prelude.show(Node_Encoding.showEncoding)(encoding)
                      }, handleCallback(cb));
                  });
              };
          };
      };
  };
  exports["writeTextFile"] = writeTextFile;
  exports["writeFile"] = writeFile;
  exports["readTextFile"] = readTextFile;
  exports["readFile"] = readFile;
  exports["unlink"] = unlink;
})(PS["Node.FS.Async"] = PS["Node.FS.Async"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Path = PS["Node.Path"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Data_Date = PS["Data.Date"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Async = PS["Node.FS.Async"];        
  var toAff = function (p) {
      return Control_Monad_Aff.makeAff(function (e) {
          return function (a) {
              return p(Data_Either.either(e)(a));
          };
      });
  };
  var toAff1 = function (f) {
      return function (a) {
          return toAff(f(a));
      };
  };
  var unlink = toAff1(Node_FS_Async.unlink);
  var toAff2 = function (f) {
      return function (a) {
          return function (b) {
              return toAff(f(a)(b));
          };
      };
  };                                              
  var toAff3 = function (f) {
      return function (a) {
          return function (b) {
              return function (c) {
                  return toAff(f(a)(b)(c));
              };
          };
      };
  };                                        
  var writeTextFile = toAff3(Node_FS_Async.writeTextFile);
  var readTextFile = toAff2(Node_FS_Async.readTextFile);
  exports["writeTextFile"] = writeTextFile;
  exports["readTextFile"] = readTextFile;
  exports["unlink"] = unlink;
})(PS["Node.FS.Aff"] = PS["Node.FS.Aff"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Modules"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_Foldable = PS["Data.Foldable"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Aff = PS["Node.FS.Aff"];
  var Node_Path = PS["Node.Path"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];        
  var Implicit = (function () {
      function Implicit(value0) {
          this.value0 = value0;
      };
      Implicit.create = function (value0) {
          return new Implicit(value0);
      };
      return Implicit;
  })();
  var Explicit = (function () {
      function Explicit(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Explicit.create = function (value0) {
          return function (value1) {
              return new Explicit(value0, value1);
          };
      };
      return Explicit;
  })();
  var Qualified = (function () {
      function Qualified(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Qualified.create = function (value0) {
          return function (value1) {
              return new Qualified(value0, value1);
          };
      };
      return Qualified;
  })();
  var UpdatedImports = (function () {
      function UpdatedImports(value0) {
          this.value0 = value0;
      };
      UpdatedImports.create = function (value0) {
          return new UpdatedImports(value0);
      };
      return UpdatedImports;
  })();
  var AmbiguousImport = (function () {
      function AmbiguousImport(value0) {
          this.value0 = value0;
      };
      AmbiguousImport.create = function (value0) {
          return new AmbiguousImport(value0);
      };
      return AmbiguousImport;
  })();
  var FailedImport = (function () {
      function FailedImport() {

      };
      FailedImport.value = new FailedImport();
      return FailedImport;
  })();
  var withTempFile = function (fileName) {
      return function (text) {
          return function (action) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)($foreign.tmpDir))(function (v) {
                  var name = Data_String_Regex.replace(Data_String_Regex.regex("[\\/\\\\]")((function () {
                      var $30 = {};
                      for (var $31 in Data_String_Regex.noFlags) {
                          if (Data_String_Regex.noFlags.hasOwnProperty($31)) {
                              $30[$31] = Data_String_Regex.noFlags[$31];
                          };
                      };
                      $30.global = true;
                      return $30;
                  })()))("-")(fileName);
                  var tmpFile = v + (Node_Path.sep + ("ide-purescript." + (name + ".purs")));
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Node_FS_Aff.writeTextFile(Node_Encoding.UTF8.value)(tmpFile)(text))(function () {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(action(tmpFile))(function (v1) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)((function () {
                              if (v1 instanceof Data_Either.Right && v1.value0 instanceof PscIde_Command.SuccessFile) {
                                  return Prelude["<$>"](Control_Monad_Aff.functorAff)(UpdatedImports.create)(Node_FS_Aff.readTextFile(Node_Encoding.UTF8.value)(tmpFile));
                              };
                              if (v1 instanceof Data_Either.Right && v1.value0 instanceof PscIde_Command.MultipleResults) {
                                  return Prelude.pure(Control_Monad_Aff.applicativeAff)(new AmbiguousImport(v1.value0.value0));
                              };
                              return Prelude.pure(Control_Monad_Aff.applicativeAff)(FailedImport.value);
                          })())(function (v2) {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(Node_FS_Aff.unlink(tmpFile))(function () {
                                  return Prelude.pure(Control_Monad_Aff.applicativeAff)(v2);
                              });
                          });
                      });
                  });
              });
          };
      };
  };
  var moduleEq = new Prelude.Eq(function (x) {
      return function (y) {
          if (x instanceof Implicit && y instanceof Implicit) {
              return x.value0 === y.value0;
          };
          if (x instanceof Explicit && y instanceof Explicit) {
              return x.value0 === y.value0 && Prelude.eq(Prelude.eqArray(Prelude.eqString))(x.value1)(y.value1);
          };
          if (x instanceof Qualified && y instanceof Qualified) {
              return x.value0 === y.value0 && x.value1 === y.value1;
          };
          return false;
      };
  });
  var initialModulesState = {
      main: Data_Maybe.Nothing.value, 
      modules: [  ], 
      identifiers: [  ]
  };
  var getModuleName = function (v) {
      if (v instanceof Qualified) {
          return v.value1;
      };
      if (v instanceof Implicit) {
          return v.value0;
      };
      if (v instanceof Explicit) {
          return v.value0;
      };
      throw new Error("Failed pattern match at IdePurescript.Modules line 38, column 1 - line 39, column 1: " + [ v.constructor.name ]);
  };
  var getQualModule = function (qualifier) {
      return function (v) {
          var qual = function (v1) {
              return function (v2) {
                  if (v2 instanceof Qualified) {
                      return v1 === v2.value0;
                  };
                  return false;
              };
          };
          return Prelude.map(Prelude.functorArray)(getModuleName)(Data_Array.filter(qual(qualifier))(v.modules));
      };
  };
  var getUnqualActiveModules = function (v) {
      return function (ident) {
          var include = function (v1) {
              if (v1 instanceof Qualified) {
                  return false;
              };
              if (v1 instanceof Explicit) {
                  return Data_Maybe.maybe(false)(function (v2) {
                      return Data_Foldable.elem(Data_Foldable.foldableArray)(Prelude.eqString)(v2)(v1.value1);
                  })(ident);
              };
              if (v1 instanceof Implicit) {
                  return true;
              };
              throw new Error("Failed pattern match at IdePurescript.Modules line 78, column 3 - line 79, column 3: " + [ v1.constructor.name ]);
          };
          return Prelude.map(Prelude.functorArray)(getModuleName)(Prelude["++"](Prelude.semigroupArray)(Data_Maybe.maybe([  ])(function ($113) {
              return Data_Array.singleton(Implicit.create($113));
          })(v.main))(Data_Array.filter(include)(v.modules)));
      };
  };
  var getMainModule = function (text) {
      var regex = Data_String_Regex.regex("module\\s+([\\w.]+)")((function () {
          var $74 = {};
          for (var $75 in Data_String_Regex.noFlags) {
              if (Data_String_Regex.noFlags.hasOwnProperty($75)) {
                  $74[$75] = Data_String_Regex.noFlags[$75];
              };
          };
          $74.multiline = true;
          return $74;
      })());
      var $76 = Data_String_Regex.match(regex)(text);
      if ($76 instanceof Data_Maybe.Just && ($76.value0.length === 2 && $76.value0[1] instanceof Data_Maybe.Just)) {
          return new Data_Maybe.Just(($76.value0[1]).value0);
      };
      return Data_Maybe.Nothing.value;
  };
  var getModulesForFile = function (port) {
      return function (file) {
          return function (fullText) {
              var mod = function (v) {
                  if (v.qualifier instanceof Data_Maybe.Nothing && v.importType instanceof PscIde_Command.Explicit) {
                      return new Explicit(v.moduleName, v.importType.value0);
                  };
                  if (v.qualifier instanceof Data_Maybe.Nothing) {
                      return new Implicit(v.moduleName);
                  };
                  if (v.qualifier instanceof Data_Maybe.Just) {
                      return new Qualified(v.qualifier.value0, v.moduleName);
                  };
                  throw new Error("Failed pattern match at IdePurescript.Modules line 71, column 3 - line 72, column 3: " + [ v.constructor.name ]);
              };
              var idents = function (v) {
                  if (v instanceof Explicit) {
                      return v.value1;
                  };
                  return [  ];
              };
              return Prelude.bind(Control_Monad_Aff.bindAff)(PscIde.listImports(port)(file))(function (v) {
                  var modules = Data_Either.either(Prelude["const"]([  ]))(function (v1) {
                      return Prelude.map(Prelude.functorArray)(mod)(v1);
                  })(v);
                  var main = getMainModule(fullText);
                  var identifiers = Data_Array.concatMap(idents)(modules);
                  return Prelude.pure(Control_Monad_Aff.applicativeAff)({
                      main: main, 
                      modules: modules, 
                      identifiers: identifiers
                  });
              });
          };
      };
  };
  var addModuleImport = function (state) {
      return function (port) {
          return function (fileName) {
              return function (text) {
                  return function (moduleName) {
                      var shouldAdd = Prelude["/="](Data_Maybe.eqMaybe(Prelude.eqString))(state.main)(new Data_Maybe.Just(moduleName)) && Data_Foldable.elem(Data_Foldable.foldableArray)(moduleEq)(new Implicit(moduleName))(state.modules);
                      var addImport = function (tmpFile) {
                          return PscIde.implicitImport(port)(tmpFile)(new Data_Maybe.Just(tmpFile))([  ])(moduleName);
                      };
                      if (!shouldAdd) {
                          return Prelude.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                      };
                      if (shouldAdd) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(withTempFile(fileName)(text)(addImport))(function (v) {
                              return Prelude.pure(Control_Monad_Aff.applicativeAff)((function () {
                                  if (v instanceof UpdatedImports) {
                                      return new Data_Maybe.Just({
                                          state: state, 
                                          result: v.value0
                                      });
                                  };
                                  return Data_Maybe.Nothing.value;
                              })());
                          });
                      };
                      throw new Error("Failed pattern match at IdePurescript.Modules line 125, column 3 - line 132, column 3: " + [ shouldAdd.constructor.name ]);
                  };
              };
          };
      };
  };
  var addExplicitImport = function (state) {
      return function (port) {
          return function (fileName) {
              return function (text) {
                  return function (moduleName) {
                      return function (identifier) {
                          var isThisModule = (function () {
                              if (moduleName instanceof Data_Maybe.Just) {
                                  return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqString))(moduleName)(state.main);
                              };
                              return false;
                          })();
                          var shouldAdd = !isThisModule && (!Data_Foldable.elem(Data_Foldable.foldableArray)(Prelude.eqString)(identifier)(state.identifiers) && Data_Maybe.maybe(true)(function (mn) {
                              return !Data_Foldable.elem(Data_Foldable.foldableArray)(moduleEq)(new Implicit(mn))(state.modules);
                          })(moduleName));
                          var filters = (function () {
                              if (moduleName instanceof Data_Maybe.Nothing) {
                                  return [  ];
                              };
                              if (moduleName instanceof Data_Maybe.Just) {
                                  return [ new PscIde_Command.ModuleFilter([ moduleName.value0 ]) ];
                              };
                              throw new Error("Failed pattern match at IdePurescript.Modules line 150, column 15 - line 153, column 5: " + [ moduleName.constructor.name ]);
                          })();
                          var addImport = function (tmpFile) {
                              return PscIde.explicitImport(port)(tmpFile)(new Data_Maybe.Just(tmpFile))(filters)(identifier);
                          };
                          if (!shouldAdd) {
                              return Prelude.pure(Control_Monad_Aff.applicativeAff)({
                                  state: state, 
                                  result: FailedImport.value
                              });
                          };
                          if (shouldAdd) {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(withTempFile(fileName)(text)(addImport))(function (v) {
                                  var state$prime = (function () {
                                      if (v instanceof UpdatedImports) {
                                          var $110 = {};
                                          for (var $111 in state) {
                                              if (state.hasOwnProperty($111)) {
                                                  $110[$111] = state[$111];
                                              };
                                          };
                                          $110.identifiers = Data_Array[":"](identifier)(state.identifiers);
                                          return $110;
                                      };
                                      return state;
                                  })();
                                  return Prelude.pure(Control_Monad_Aff.applicativeAff)({
                                      result: v, 
                                      state: state$prime
                                  });
                              });
                          };
                          throw new Error("Failed pattern match at IdePurescript.Modules line 140, column 3 - line 148, column 3: " + [ shouldAdd.constructor.name ]);
                      };
                  };
              };
          };
      };
  };
  exports["UpdatedImports"] = UpdatedImports;
  exports["AmbiguousImport"] = AmbiguousImport;
  exports["FailedImport"] = FailedImport;
  exports["addExplicitImport"] = addExplicitImport;
  exports["addModuleImport"] = addModuleImport;
  exports["getQualModule"] = getQualModule;
  exports["getUnqualActiveModules"] = getUnqualActiveModules;
  exports["getModulesForFile"] = getModulesForFile;
  exports["getMainModule"] = getMainModule;
  exports["initialModulesState"] = initialModulesState;
  exports["moduleEq"] = moduleEq;
})(PS["IdePurescript.Modules"] = PS["IdePurescript.Modules"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Atom.Tooltips"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_Point = PS["Atom.Point"];
  var Atom_Range = PS["Atom.Range"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Promise = PS["Control.Promise"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var Prelude = PS["Prelude"];
  var PscIde = PS["PscIde"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];        
  var getToken = function (e) {
      return function (pos) {
          var row = Atom_Point.getRow(pos);
          var moduleRegex = Data_String_Regex.regex("(?:^|[^A-Za-z_.])(?:((?:[A-Z][A-Za-z0-9]*\\.)*(?:[A-Z][A-Za-z0-9]*))\\.)$")(Data_String_Regex.noFlags);
          var col = Atom_Point.getColumn(pos);
          var beforeRegex = Data_String_Regex.regex("[a-zA-Z_0-9']*$")(Data_String_Regex.noFlags);
          var beforePos = Atom_Point.mkPoint(row)(0);
          var afterRegex = Data_String_Regex.regex("^[a-zA-Z_0-9']*")(Data_String_Regex.noFlags);
          var afterPos = Atom_Point.mkPoint(row)(col + 100 | 0);
          return function __do() {
              var v = Atom_Editor.getTextInRange(e)(Atom_Range.mkRange(beforePos)(pos))();
              var v1 = Atom_Editor.getTextInRange(e)(Atom_Range.mkRange(pos)(afterPos))();
              var wordRange = function (left) {
                  return function (right) {
                      return Atom_Range.mkRange(Atom_Point.mkPoint(row)(col - left))(Atom_Point.mkPoint(row)(col + right | 0));
                  };
              };
              var $11 = {
                  before: Data_String_Regex.match(beforeRegex)(v), 
                  after: Data_String_Regex.match(afterRegex)(v1)
              };
              if ($11.before instanceof Data_Maybe.Just && ($11.before.value0.length === 1 && ($11.before.value0[0] instanceof Data_Maybe.Just && ($11.after instanceof Data_Maybe.Just && ($11.after.value0.length === 1 && $11.after.value0[0] instanceof Data_Maybe.Just))))) {
                  var qualifier = (function () {
                      var $12 = Data_String_Regex.match(moduleRegex)(Data_String.take(Data_String.length(v) - Data_String.length(($11.before.value0[0]).value0))(v));
                      if ($12 instanceof Data_Maybe.Just && $12.value0.length === 2) {
                          return $12.value0[1];
                      };
                      return Data_Maybe.Nothing.value;
                  })();
                  return new Data_Maybe.Just({
                      word: ($11.before.value0[0]).value0 + ($11.after.value0[0]).value0, 
                      range: wordRange(Data_String.length(($11.before.value0[0]).value0))(Data_String.length(($11.after.value0[0]).value0)), 
                      qualifier: qualifier
                  });
              };
              return Data_Maybe.Nothing.value;
          };
      };
  };
  var getTooltips = function (port) {
      return function (state) {
          return function (pos) {
              var ignore = function (v) {
                  return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
              };
              return function __do() {
                  var v = Atom_Atom.getAtom();
                  var v1 = Atom_Workspace.getActiveTextEditor(v.workspace)();
                  return Control_Promise.fromAff((function () {
                      if (v1 instanceof Data_Maybe.Just) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(getToken(v1.value0)(pos)))(function (v2) {
                              if (v2 instanceof Data_Maybe.Just) {
                                  var prefix = Data_Maybe.maybe("")(Prelude.id(Prelude.categoryFn))(v2.value0.qualifier);
                                  return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getType(port)(v2.value0.word)(prefix)(IdePurescript_Modules.getUnqualActiveModules(state)(new Data_Maybe.Just(v2.value0.word)))(Prelude.flip(IdePurescript_Modules.getQualModule)(state)))(function (v3) {
                                      return Prelude.pure(Control_Monad_Aff.applicativeAff)({
                                          valid: Data_String.length(v3) > 0, 
                                          info: v3
                                      });
                                  });
                              };
                              return Prelude.pure(Control_Monad_Aff.applicativeAff)({
                                  valid: false, 
                                  info: ""
                              });
                          });
                      };
                      return Prelude.pure(Control_Monad_Aff.applicativeAff)({
                          valid: false, 
                          info: ""
                      });
                  })())();
              };
          };
      };
  };
  var registerTooltips = function (port) {
      return function (ref) {
          return Prelude["void"](Control_Monad_Eff.functorEff)(Data_Function_Eff.runEffFn1($foreign.mkTooltipProvider)(Data_Function_Eff.mkEffFn1(function (v) {
              return function __do() {
                  var v1 = Control_Monad_Eff_Ref.readRef(ref)();
                  var point = Atom_Point.mkPoint(v.line - 1)(v.column - 1);
                  return getTooltips(port)(v1)(point)();
              };
          })));
      };
  };
  exports["getTooltips"] = getTooltips;
  exports["getToken"] = getToken;
  exports["registerTooltips"] = registerTooltips;
})(PS["IdePurescript.Atom.Tooltips"] = PS["IdePurescript.Atom.Tooltips"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var IdePurescript_Atom_Completion = PS["IdePurescript.Atom.Completion"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_CommandRegistry = PS["Atom.CommandRegistry"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_TextBuffer = PS["Atom.TextBuffer"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var Data_Maybe = PS["Data.Maybe"];
  var IdePurescript_Atom_Editor = PS["IdePurescript.Atom.Editor"];
  var IdePurescript_Atom_PromptPanel = PS["IdePurescript.Atom.PromptPanel"];
  var IdePurescript_Atom_SelectView = PS["IdePurescript.Atom.SelectView"];
  var IdePurescript_Atom_Tooltips = PS["IdePurescript.Atom.Tooltips"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var Node_FS = PS["Node.FS"];
  var PscIde = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];        
  var liftEffM = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff);
  var launchAffAndRaise = (function () {
      var raiseError = function (e) {
          return function __do() {
              var v = Atom_Atom.getAtom();
              return Atom_NotificationManager.addError(v.notifications)(Prelude.show(Control_Monad_Eff_Exception.showError)(e))();
          };
      };
      return Control_Monad_Aff.runAff(raiseError)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)));
  })();
  var addImport = function (port) {
      return function (modulesState) {
          return function (moduleName) {
              return function __do() {
                  var v = Atom_Atom.getAtom();
                  var v1 = Atom_Workspace.getActiveTextEditor(v.workspace)();
                  var v2 = Control_Monad_Eff_Ref.readRef(modulesState)();
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Prelude.unit;
                  };
                  if (v1 instanceof Data_Maybe.Just) {
                      var v3 = Atom_Editor.getText(v1.value0)();
                      var v4 = Atom_Editor.getPath(v1.value0)();
                      if (v4 instanceof Data_Maybe.Just) {
                          return launchAffAndRaise(Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_Modules.addModuleImport(v2)(port)(v4.value0)(v3)(moduleName))(function (v5) {
                              return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(function ($82) {
                                  return Prelude["void"](Control_Monad_Eff.functorEff)(Atom_Editor.setText(v1.value0)((function (v6) {
                                      return v6.result;
                                  })($82)));
                              })(v5));
                          }))();
                      };
                      if (v4 instanceof Data_Maybe.Nothing) {
                          return Prelude.unit;
                      };
                      throw new Error("Failed pattern match at IdePurescript.Atom.Imports line 105, column 7 - line 112, column 1: " + [ v4.constructor.name ]);
                  };
                  throw new Error("Failed pattern match at IdePurescript.Atom.Imports line 100, column 3 - line 112, column 1: " + [ v1.constructor.name ]);
              };
          };
      };
  };
  var addModuleImportCmd = function (port) {
      return function (modulesState) {
          var view = function (x) {
              return "<li>" + (x + "</li>");
          };
          var liftEffI = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff);
          return launchAffAndRaise(Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getAvailableModules(port))(function (v) {
              return liftEffI(IdePurescript_Atom_SelectView.selectListViewStatic(view)(addImport(port)(modulesState))(Data_Maybe.Nothing.value)(v));
          }));
      };
  };
  var addIdentImport$prime = function (port) {
      return function (modulesState) {
          return function (moduleName) {
              return function (ident) {
                  return function (editor) {
                      var view = function (v) {
                          return "<li>" + (v["module'"] + ("." + (v.identifier + "</li>")));
                      };
                      var runCompletion = function (v) {
                          return v;
                      };
                      var addImp = function (v) {
                          return launchAffAndRaise(addIdentImport(port)(modulesState)(new Data_Maybe.Just(v["module'"]))(v.identifier));
                      };
                      return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Atom_Editor.getText(editor)))(function (v) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Atom_Editor.getPath(editor)))(function (v1) {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Control_Monad_Eff_Ref.readRef(modulesState)))(function (v2) {
                                  if (v1 instanceof Data_Maybe.Just) {
                                      return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_Modules.addExplicitImport(v2)(port)(v1.value0)(v)(moduleName)(ident))(function (v3) {
                                          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Control_Monad_Eff_Ref.writeRef(modulesState)(v3.state)))(function () {
                                              return liftEffM((function () {
                                                  if (v3.result instanceof IdePurescript_Modules.UpdatedImports) {
                                                      return function __do() {
                                                          var v4 = Atom_Editor.getBuffer(editor)();
                                                          return Prelude["void"](Control_Monad_Eff.functorEff)(Atom_TextBuffer.setTextViaDiff(v4)(v3.result.value0))();
                                                      };
                                                  };
                                                  if (v3.result instanceof IdePurescript_Modules.AmbiguousImport) {
                                                      return IdePurescript_Atom_SelectView.selectListViewStatic(view)(addImp)(Data_Maybe.Nothing.value)(Prelude["<$>"](Prelude.functorArray)(runCompletion)(v3.result.value0));
                                                  };
                                                  return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
                                              })());
                                          });
                                      });
                                  };
                                  return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit);
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var addIdentImport = function (port) {
      return function (modulesState) {
          return function (moduleName) {
              return function (ident) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Atom_Atom.getAtom))(function (v) {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Atom_Workspace.getActiveTextEditor(v.workspace)))(function (v1) {
                          return Data_Maybe.maybe(Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit))(addIdentImport$prime(port)(modulesState)(moduleName)(ident))(v1);
                      });
                  });
              };
          };
      };
  };
  var addSuggestionImport = function (v) {
      return function (v1) {
          return function (v2) {
              if (v2.suggestion.addImport instanceof Data_Maybe.Just && v2.suggestion.addImport.value0.qualifier instanceof Data_Maybe.Nothing) {
                  return addIdentImport$prime(v)(v1)(new Data_Maybe.Just(v2.suggestion.addImport.value0.mod))(v2.suggestion.addImport.value0.identifier)(v2.editor);
              };
              return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit);
          };
      };
  };
  var addExplicitImportCmd = function (port) {
      return function (modulesState) {
          return launchAffAndRaise(Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Atom_Atom.getAtom))(function (v) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Atom_Workspace.getActiveTextEditor(v.workspace)))(function (v1) {
                  if (v1 instanceof Data_Maybe.Just) {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(IdePurescript_Atom_Editor.getLinePosition(v1.value0)))(function (v2) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffM(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Maybe.maybe("")(function (v3) {
                              return v3.word;
                          }))(IdePurescript_Atom_Tooltips.getToken(v1.value0)(v2.pos))))(function (v3) {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_Atom_PromptPanel.addPromptPanel("Identifier")(v3))(function (v4) {
                                  return Data_Maybe.maybe(Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit))(addIdentImport(port)(modulesState)(Data_Maybe.Nothing.value))(v4);
                              });
                          });
                      });
                  };
                  if (v1 instanceof Data_Maybe.Nothing) {
                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit);
                  };
                  throw new Error("Failed pattern match at IdePurescript.Atom.Imports line 53, column 3 - line 61, column 1: " + [ v1.constructor.name ]);
              });
          }));
      };
  };
  exports["liftEffM"] = liftEffM;
  exports["addImport"] = addImport;
  exports["addSuggestionImport"] = addSuggestionImport;
  exports["addIdentImport"] = addIdentImport;
  exports["addExplicitImportCmd"] = addExplicitImportCmd;
  exports["addModuleImportCmd"] = addModuleImportCmd;
  exports["launchAffAndRaise"] = launchAffAndRaise;
})(PS["IdePurescript.Atom.Imports"] = PS["IdePurescript.Atom.Imports"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var PscIde_1 = PS["PscIde"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_CommandRegistry = PS["Atom.CommandRegistry"];
  var Atom_Config = PS["Atom.Config"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_Point = PS["Atom.Point"];
  var Atom_Range = PS["Atom.Range"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Maybe_Trans = PS["Control.Monad.Maybe.Trans"];
  var DOM = PS["DOM"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var IdePurescript_Atom_Editor = PS["IdePurescript.Atom.Editor"];
  var IdePurescript_Atom_Imports = PS["IdePurescript.Atom.Imports"];
  var IdePurescript_Atom_PromptPanel = PS["IdePurescript.Atom.PromptPanel"];
  var IdePurescript_Atom_SelectView = PS["IdePurescript.Atom.SelectView"];
  var IdePurescript_Atom_Tooltips = PS["IdePurescript.Atom.Tooltips"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var Node_FS = PS["Node.FS"];
  var PscIde_1 = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var Control_Monad_Trans = PS["Control.Monad.Trans"];
  var Data_Monoid = PS["Data.Monoid"];        
  var liftEff$prime$prime = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff);
  var launchAffAndRaise = (function () {
      var raiseError = function (e) {
          return function __do() {
              var v = Atom_Atom.getAtom();
              return Atom_NotificationManager.addError(v.notifications)(Prelude.show(Control_Monad_Eff_Exception.showError)(e))();
          };
      };
      return Control_Monad_Aff.runAff(raiseError)(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)));
  })();
  var getPort = function __do() {
      var v = Atom_Atom.getAtom();
      var v1 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readInt)(Atom_Config.getConfig(v.config)("ide-purescript.pscIdePort"))();
      return Data_Either.either(Prelude["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create)(v1);
  };
  var fixTypo = function (modulesState) {
      var body = (function () {
          var view = function (v) {
              return "<li>" + (v["module'"] + ("." + (v.identifier + "</li>")));
          };
          var runCompletion = function (v) {
              return v;
          };
          var replaceTypo = function (port) {
              return function (ed) {
                  return function (wordRange) {
                      return function (v) {
                          return launchAffAndRaise(Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Atom_Editor.setTextInBufferRange(ed)(wordRange)(v.identifier)))(function () {
                              return IdePurescript_Atom_Imports.addIdentImport(port)(modulesState)(new Data_Maybe.Just(v["module'"]))(v.identifier);
                          }));
                      };
                  };
              };
          };
          var getIdentFromCompletion = function (v) {
              return v.identifier;
          };
          return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Control_Monad_Aff.monadAff)(liftEff$prime$prime(Atom_Atom.getAtom)))(function (v) {
              return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Maybe_Trans.MaybeT(liftEff$prime$prime(getPort)))(function (v1) {
                  return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Maybe_Trans.MaybeT(liftEff$prime$prime(Atom_Workspace.getActiveTextEditor(v.workspace))))(function (v2) {
                      return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Control_Monad_Aff.monadAff)(liftEff$prime$prime(IdePurescript_Atom_Editor.getLinePosition(v2))))(function (v3) {
                          return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Maybe_Trans.MaybeT(liftEff$prime$prime(IdePurescript_Atom_Tooltips.getToken(v2)(v3.pos))))(function (v4) {
                              return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Control_Monad_Aff.monadAff)(IdePurescript_PscIde.eitherToErr(PscIde_1.suggestTypos(v1)(v4.word)(2))))(function (v5) {
                                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Maybe_Trans.monadEffMaybe(Control_Monad_Aff.monadEffAff))(IdePurescript_Atom_SelectView.selectListViewStatic(view)(replaceTypo(v1)(v2)(v4.range))(Data_Maybe.Nothing.value)(Prelude["<$>"](Prelude.functorArray)(runCompletion)(v5)));
                              });
                          });
                      });
                  });
              });
          });
      })();
      return launchAffAndRaise(Control_Monad_Maybe_Trans.runMaybeT(body));
  };
  var caseSplit = (function () {
      var body = Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Control_Monad_Aff.monadAff)(liftEff$prime$prime(Atom_Atom.getAtom)))(function (v) {
          return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Maybe_Trans.MaybeT(liftEff$prime$prime(getPort)))(function (v1) {
              return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Maybe_Trans.MaybeT(liftEff$prime$prime(Atom_Workspace.getActiveTextEditor(v.workspace))))(function (v2) {
                  return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Control_Monad_Aff.monadAff)(liftEff$prime$prime(IdePurescript_Atom_Editor.getLinePosition(v2))))(function (v3) {
                      return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Maybe_Trans.MaybeT(liftEff$prime$prime(IdePurescript_Atom_Tooltips.getToken(v2)(v3.pos))))(function (v4) {
                          return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Maybe_Trans.MaybeT(IdePurescript_Atom_PromptPanel.addPromptPanel("Parameter type")("")))(function (v5) {
                              return Prelude.bind(Control_Monad_Maybe_Trans.bindMaybeT(Control_Monad_Aff.monadAff))(Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Control_Monad_Aff.monadAff)(IdePurescript_PscIde.eitherToErr(PscIde_1.caseSplit(v1)(v3.line)(Atom_Point.getColumn(Atom_Range.getStart(v4.range)))(Atom_Point.getColumn(Atom_Range.getEnd(v4.range)))(true)(v5))))(function (v6) {
                                  return Control_Monad_Trans.lift(Control_Monad_Maybe_Trans.monadTransMaybeT)(Control_Monad_Aff.monadAff)(Prelude["void"](Control_Monad_Aff.functorAff)(liftEff$prime$prime(Atom_Editor.setTextInBufferRange(v2)(v3.range)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\n")(v6)))));
                              });
                          });
                      });
                  });
              });
          });
      });
      return launchAffAndRaise(Control_Monad_Maybe_Trans.runMaybeT(body));
  })();
  var addClause = function __do() {
      var v = Atom_Atom.getAtom();
      var v1 = Atom_Workspace.getActiveTextEditor(v.workspace)();
      var v2 = getPort();
      if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
          return launchAffAndRaise(Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(IdePurescript_Atom_Editor.getLinePosition(v1.value0)))(function (v3) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.eitherToErr(PscIde_1.addClause(v2.value0)(v3.line)(true)))(function (v4) {
                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Atom_Editor.setTextInBufferRange(v1.value0)(v3.range)(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("\n")(v4)));
              });
          }))();
      };
      return Prelude.unit;
  };
  exports["fixTypo"] = fixTypo;
  exports["addClause"] = addClause;
  exports["caseSplit"] = caseSplit;
})(PS["IdePurescript.Atom.Assist"] = PS["IdePurescript.Atom.Assist"] || {});
(function(exports) {
    "use strict";

  // module Node.ChildProcess
  /* eslint-env node*/

  exports.unsafeFromNullable = function unsafeFromNullable(msg){
    return function(x) {
      if (x === null) {
        throw new Error(msg);
      } else {
        return x;
      };
    };
  };
  exports.spawnImpl = function spawnImpl(command) {
    return function(args) {
      return function(opts) {
        return function() {
          return require("child_process").spawn(command, args, opts);
        };
      };
    };
  };
  exports.mkOnClose = function mkOnClose(mkChildExit){
    return function onClose(cp){
      return function(cb){
        return function(){
          cp.on("exit", function(code, signal){
            cb(mkChildExit(code)(signal))();
          });
        };
      };
    };
  };
  exports.onError = function onError(cp){
    return function(cb){
      return function(){
        cp.on("error", function(err) {
          cb(err)()
        });
      };
    };
  };

  exports["undefined"] = undefined;
})(PS["Node.ChildProcess"] = PS["Node.ChildProcess"] || {});
(function(exports) {
  /* global exports */
  /* global Buffer */
  "use strict";

  exports.onDataEitherImpl = function(left){
      return function(right){
          return function(s) {
              return function(f) {
                  return function() {
                      s.on('data', function(chunk) {
                          if (chunk instanceof Buffer) {
                              f(right(chunk))();
                          }
                          else if (typeof chunk === "string") {
                              f(left(chunk))();
                          }
                          else {
                              throw new Error(
                                  "Node.Stream.onDataEitherImpl: Unrecognised" +
                                  "chunk type; expected String or Buffer, got:" +
                                  chunk);
                          }
                      });
                  };
              };
          };
      };
  };

  exports.write = function(w) {
      return function(chunk) {
          return function(done) {
              return function() {
                  return w.write(chunk, null, done);
              };
          };
      };
  };

  exports.writeStringImpl = function(w) {
      return function(enc) {
          return function(s) {
              return function(done) {
                  return function() {
                      return w.write(s, enc, done);
                  };
              };
          };
      };
  };

  exports.end = function(w) {
      return function(done) {
          return function() {
              w.end(null, null, function() {
                  done();
              });
          };
      };
  };
})(PS["Node.Stream"] = PS["Node.Stream"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.Stream"];
  var Prelude = PS["Prelude"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Either = PS["Data.Either"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_Buffer_1 = PS["Node.Buffer"];
  var Node_Buffer_1 = PS["Node.Buffer"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];        
  var writeString = function (w) {
      return function (enc) {
          return $foreign.writeStringImpl(w)(Prelude.show(Node_Encoding.showEncoding)(enc));
      };
  };
  var onDataEither = $foreign.onDataEitherImpl(Data_Either.Left.create)(Data_Either.Right.create);
  var onData = function (r) {
      return function (cb) {
          var fromEither = function (x) {
              if (x instanceof Data_Either.Left) {
                  return Control_Monad_Eff_Exception["throw"]("Node.Stream.onData: Stream encoding should not be set");
              };
              if (x instanceof Data_Either.Right) {
                  return Prelude.pure(Control_Monad_Eff.applicativeEff)(x.value0);
              };
              throw new Error("Failed pattern match at Node.Stream line 71, column 5 - line 77, column 1: " + [ x.constructor.name ]);
          };
          return onDataEither(r)(Control_Bind["<=<"](Control_Monad_Eff.bindEff)(cb)(fromEither));
      };
  };
  var onDataString = function (r) {
      return function (enc) {
          return function (cb) {
              return onData(r)(Control_Bind["<=<"](Control_Monad_Eff.bindEff)(cb)(function ($3) {
                  return Control_Monad_Eff_Unsafe.unsafeInterleaveEff(Node_Buffer_1.toString(enc)($3));
              }));
          };
      };
  };
  exports["writeString"] = writeString;
  exports["onDataEither"] = onDataEither;
  exports["onDataString"] = onDataString;
  exports["onData"] = onData;
  exports["end"] = $foreign.end;
})(PS["Node.Stream"] = PS["Node.Stream"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.ChildProcess"];
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Exception_Unsafe = PS["Control.Monad.Eff.Exception.Unsafe"];
  var Data_StrMap = PS["Data.StrMap"];
  var Data_Function = PS["Data.Function"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Posix = PS["Data.Posix"];
  var Data_Posix_Signal_1 = PS["Data.Posix.Signal"];
  var Data_Posix_Signal_1 = PS["Data.Posix.Signal"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_FS = PS["Node.FS"];
  var Node_Stream = PS["Node.Stream"];        
  var Pipe = (function () {
      function Pipe() {

      };
      Pipe.value = new Pipe();
      return Pipe;
  })();
  var Ignore = (function () {
      function Ignore() {

      };
      Ignore.value = new Ignore();
      return Ignore;
  })();
  var ShareStream = (function () {
      function ShareStream(value0) {
          this.value0 = value0;
      };
      ShareStream.create = function (value0) {
          return new ShareStream(value0);
      };
      return ShareStream;
  })();
  var ShareFD = (function () {
      function ShareFD(value0) {
          this.value0 = value0;
      };
      ShareFD.create = function (value0) {
          return new ShareFD(value0);
      };
      return ShareFD;
  })();
  var Normally = (function () {
      function Normally(value0) {
          this.value0 = value0;
      };
      Normally.create = function (value0) {
          return new Normally(value0);
      };
      return Normally;
  })();
  var BySignal = (function () {
      function BySignal(value0) {
          this.value0 = value0;
      };
      BySignal.create = function (value0) {
          return new BySignal(value0);
      };
      return BySignal;
  })();
  var toStandardError = Unsafe_Coerce.unsafeCoerce;
  var toActualStdIOBehaviour = function (b) {
      if (b instanceof Pipe) {
          return Unsafe_Coerce.unsafeCoerce("pipe");
      };
      if (b instanceof Ignore) {
          return Unsafe_Coerce.unsafeCoerce("ignore");
      };
      if (b instanceof ShareFD) {
          return Unsafe_Coerce.unsafeCoerce(b.value0);
      };
      if (b instanceof ShareStream) {
          return Unsafe_Coerce.unsafeCoerce(b.value0);
      };
      throw new Error("Failed pattern match at Node.ChildProcess line 367, column 28 - line 372, column 3: " + [ b.constructor.name ]);
  };
  var toActualStdIOOptions = Prelude.map(Prelude.functorArray)(function ($31) {
      return Data_Nullable.toNullable(Prelude.map(Data_Maybe.functorMaybe)(toActualStdIOBehaviour)($31));
  });
  var spawn = function (cmd) {
      return function (args) {
          return function (opts) {
              var convertOpts = function (opts1) {
                  return {
                      cwd: Data_Maybe.fromMaybe($foreign["undefined"])(opts1.cwd), 
                      stdio: toActualStdIOOptions(opts1.stdio), 
                      env: Data_Nullable.toNullable(opts1.env), 
                      detached: opts1.detached, 
                      uid: Data_Maybe.fromMaybe($foreign["undefined"])(opts1.uid), 
                      gid: Data_Maybe.fromMaybe($foreign["undefined"])(opts1.gid)
                  };
              };
              return $foreign.spawnImpl(cmd)(args)(convertOpts(opts));
          };
      };
  }; 
  var runChildProcess = function (v) {
      return v;
  };
  var pipe = Prelude.map(Prelude.functorArray)(Data_Maybe.Just.create)([ Pipe.value, Pipe.value, Pipe.value ]);
  var mkExit = function (code) {
      return function (signal) {
          var fromSignal = Control_Bind[">=>"](Data_Maybe.bindMaybe)(Data_Nullable.toMaybe)(function ($33) {
              return Prelude.map(Data_Maybe.functorMaybe)(BySignal.create)(Data_Posix_Signal_1.fromString($33));
          });
          var fromCode = function ($34) {
              return Prelude.map(Data_Maybe.functorMaybe)(Normally.create)(Data_Nullable.toMaybe($34));
          };
          var $20 = Control_Alt["<|>"](Data_Maybe.altMaybe)(fromCode(code))(fromSignal(signal));
          if ($20 instanceof Data_Maybe.Just) {
              return $20.value0;
          };
          if ($20 instanceof Data_Maybe.Nothing) {
              return Control_Monad_Eff_Exception_Unsafe.unsafeThrow("Node.ChildProcess.mkExit: Invalid arguments");
          };
          throw new Error("Failed pattern match at Node.ChildProcess line 153, column 3 - line 156, column 3: " + [ $20.constructor.name ]);
      };
  };
  var onClose = $foreign.mkOnClose(mkExit);
  var missingStream = function (str) {
      return "Node.ChildProcess: stream not available: " + (str + ("\nThis is probably " + ("because you passed something other than Pipe to the stdio option when " + "you spawned it.")));
  };
  var stderr = function ($35) {
      return $foreign.unsafeFromNullable(missingStream("stderr"))((function (v) {
          return v.stderr;
      })(runChildProcess($35)));
  };
  var stdin = function ($36) {
      return $foreign.unsafeFromNullable(missingStream("stdin"))((function (v) {
          return v.stdin;
      })(runChildProcess($36)));
  };
  var stdout = function ($37) {
      return $foreign.unsafeFromNullable(missingStream("stdout"))((function (v) {
          return v.stdout;
      })(runChildProcess($37)));
  };
  var defaultSpawnOptions = {
      cwd: Data_Maybe.Nothing.value, 
      stdio: pipe, 
      env: Data_Maybe.Nothing.value, 
      detached: false, 
      uid: Data_Maybe.Nothing.value, 
      gid: Data_Maybe.Nothing.value
  };
  exports["Pipe"] = Pipe;
  exports["Ignore"] = Ignore;
  exports["ShareStream"] = ShareStream;
  exports["ShareFD"] = ShareFD;
  exports["Normally"] = Normally;
  exports["BySignal"] = BySignal;
  exports["pipe"] = pipe;
  exports["defaultSpawnOptions"] = defaultSpawnOptions;
  exports["spawn"] = spawn;
  exports["onClose"] = onClose;
  exports["toStandardError"] = toStandardError;
  exports["stdin"] = stdin;
  exports["stdout"] = stdout;
  exports["stderr"] = stderr;
  exports["onError"] = $foreign.onError;
})(PS["Node.ChildProcess"] = PS["Node.ChildProcess"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Alt = PS["Control.Alt"];
  var Control_Bind = PS["Control.Bind"];
  var Data_Argonaut = PS["Data.Argonaut"];
  var Data_Argonaut_Combinators = PS["Data.Argonaut.Combinators"];
  var Data_Argonaut_Core = PS["Data.Argonaut.Core"];
  var Data_Argonaut_Parser = PS["Data.Argonaut.Parser"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Traversable = PS["Data.Traversable"];
  var Data_Argonaut_Decode = PS["Data.Argonaut.Decode"];        
  var PscError = function (x) {
      return x;
  };
  var RebuildResult = function (x) {
      return x;
  };
  var parseSuggestion = Data_Maybe.maybe(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(function (obj) {
      return Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(obj)("replacement");
  });
  var parsePosition = Data_Maybe.maybe(Prelude.pure(Data_Either.applicativeEither)(Data_Maybe.Nothing.value))(function (obj) {
      return Prelude.map(Data_Either.functorEither)(Data_Maybe.Just.create)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return {
                          startLine: v, 
                          startColumn: v1, 
                          endLine: v2, 
                          endColumn: v3
                      };
                  };
              };
          };
      })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(obj)("startLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(obj)("startColumn")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(obj)("endLine")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonInt)(obj)("endColumn")));
  });
  var parsePscError = function (obj) {
      return Prelude["<$>"](Data_Either.functorEither)(PscError)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (v) {
          return function (v1) {
              return function (v2) {
                  return function (v3) {
                      return function (v4) {
                          return function (v5) {
                              return function (v6) {
                                  return {
                                      moduleName: v, 
                                      errorCode: v1, 
                                      message: v2, 
                                      filename: v3, 
                                      position: v4, 
                                      errorLink: v5, 
                                      suggestion: v6
                                  };
                              };
                          };
                      };
                  };
              };
          };
      })(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(obj)("moduleName")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(obj)("errorCode")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(obj)("message")))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeJsonString))(obj)("filename")))(Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson)))(obj)("position"))(parsePosition)))(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonString)(obj)("errorLink")))(Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeJsonMaybe(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson)))(obj)("suggestion"))(parseSuggestion)));
  };
  var parsePscResult = function (obj) {
      return Prelude["<*>"](Data_Either.applyEither)(Prelude["<$>"](Data_Either.functorEither)(function (v) {
          return function (v1) {
              return {
                  warnings: v, 
                  errors: v1
              };
          };
      })(Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson)))(obj)("warnings"))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(parsePscError))))(Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Combinators[".?"](Data_Argonaut_Decode.decodeArray(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson)))(obj)("errors"))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Either.applicativeEither)(parsePscError)));
  };
  var parsePscOutput = Control_Bind["<=<"](Data_Either.bindEither)(function ($13) {
      return Data_Maybe.maybe(new Data_Either.Left("not object"))(parsePscResult)(Data_Argonaut_Core.toObject($13));
  })(Data_Argonaut_Parser.jsonParser);
  var decodeJsonPscError = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude[">>="](Data_Either.bindEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeStrMap(Data_Argonaut_Decode.decodeJsonJson))(json))(parsePscError);
  });
  var decodeRebuildResult = new Data_Argonaut_Decode.DecodeJson(function (json) {
      return Prelude["<$>"](Data_Either.functorEither)(RebuildResult)(Control_Alt["<|>"](Data_Either.altEither)(Data_Argonaut_Decode.decodeJson(Data_Argonaut_Decode.decodeArray(decodeJsonPscError))(json))(Prelude["<$>"](Data_Either.functorEither)(Data_Array.singleton)(Data_Argonaut_Decode.decodeJson(decodeJsonPscError)(json))));
  });
  exports["PscError"] = PscError;
  exports["RebuildResult"] = RebuildResult;
  exports["parseSuggestion"] = parseSuggestion;
  exports["parsePosition"] = parsePosition;
  exports["parsePscError"] = parsePscError;
  exports["parsePscResult"] = parsePscResult;
  exports["parsePscOutput"] = parsePscOutput;
  exports["decodeRebuildResult"] = decodeRebuildResult;
  exports["decodeJsonPscError"] = decodeJsonPscError;
})(PS["IdePurescript.PscErrors"] = PS["IdePurescript.PscErrors"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_Stream = PS["Node.Stream"];
  var PscIde_1 = PS["PscIde"];
  var PscIde_Command = PS["PscIde.Command"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Data_Either = PS["Data.Either"];
  var Data_Foldable = PS["Data.Foldable"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var IdePurescript_PscErrors = PS["IdePurescript.PscErrors"];
  var Node_Encoding = PS["Node.Encoding"];
  var Prelude = PS["Prelude"];
  var PscIde_1 = PS["PscIde"];
  var Control_Monad_Eff_Unsafe = PS["Control.Monad.Eff.Unsafe"];        
  var Command = (function () {
      function Command(value0, value1) {
          this.value0 = value0;
          this.value1 = value1;
      };
      Command.create = function (value0) {
          return function (value1) {
              return new Command(value0, value1);
          };
      };
      return Command;
  })();
  var rebuild = function (port) {
      return function (file) {
          var rebuild$prime = function (port1) {
              return function (file1) {
                  return PscIde_1.sendCommandR(PscIde_Command.encodeCommand)(IdePurescript_PscErrors.decodeRebuildResult)(IdePurescript_PscErrors.decodeRebuildResult)(port1)(new PscIde_Command.RebuildCmd(file1));
              };
          };
          var onResult = Data_Either.either(function (v) {
              return {
                  errors: {
                      errors: v, 
                      warnings: [  ]
                  }, 
                  success: false
              };
          })(function (v) {
              return {
                  errors: {
                      errors: [  ], 
                      warnings: v
                  }, 
                  success: true
              };
          });
          return Prelude.bind(Control_Monad_Aff.bindAff)(rebuild$prime(port)(file))(function (v) {
              return Data_Either.either(function ($27) {
                  return Control_Monad_Error_Class.throwError(Control_Monad_Aff.monadErrorAff)(Control_Monad_Eff_Exception.error($27));
              })(function ($28) {
                  return Prelude.pure(Control_Monad_Aff.applicativeAff)(onResult($28));
              })(v);
          });
      };
  };
  var build = function (v) {
      return Control_Monad_Aff.makeAff(function (err) {
          return function (succ) {
              return function __do() {
                  var v1 = Node_ChildProcess.spawn(v.command.value0)(v.command.value1)((function () {
                      var $11 = {};
                      for (var $12 in Node_ChildProcess.defaultSpawnOptions) {
                          if (Node_ChildProcess.defaultSpawnOptions.hasOwnProperty($12)) {
                              $11[$12] = Node_ChildProcess.defaultSpawnOptions[$12];
                          };
                      };
                      $11.cwd = new Data_Maybe.Just(v.directory);
                      return $11;
                  })())();
                  Node_ChildProcess.onError(v1)(function ($29) {
                      return err(Node_ChildProcess.toStandardError($29));
                  })();
                  var stderr = Node_ChildProcess.stderr(v1);
                  var v2 = Control_Monad_Eff_Ref.newRef("")();
                  var res = function (s) {
                      return Control_Monad_Eff_Ref.modifyRef(v2)(function (acc) {
                          return acc + s;
                      });
                  };
                  Control_Monad_Eff_Exception.catchException(err)(Node_Stream.onDataString(stderr)(Node_Encoding.UTF8.value)(res))();
                  return Node_ChildProcess.onClose(v1)(function (exit) {
                      if (exit instanceof Node_ChildProcess.Normally && (exit.value0 === 0 || exit.value0 === 1)) {
                          return function __do() {
                              var v3 = Control_Monad_Eff_Ref.readRef(v2)();
                              var lines = Data_String.split("\n")(v3);
                              var json = Data_Foldable.find(Data_Foldable.foldableArray)(function (s) {
                                  return Prelude["=="](Data_Maybe.eqMaybe(Prelude.eqInt))(Data_String.indexOf("{\"")(s))(new Data_Maybe.Just(0));
                              })(lines);
                              var $17 = Prelude["<$>"](Data_Maybe.functorMaybe)(IdePurescript_PscErrors.parsePscOutput)(json);
                              if ($17 instanceof Data_Maybe.Just && $17.value0 instanceof Data_Either.Left) {
                                  return err(Control_Monad_Eff_Exception.error($17.value0.value0))();
                              };
                              if ($17 instanceof Data_Maybe.Just && $17.value0 instanceof Data_Either.Right) {
                                  return succ({
                                      errors: $17.value0.value0, 
                                      success: exit.value0 === 0
                                  })();
                              };
                              if ($17 instanceof Data_Maybe.Nothing) {
                                  return err(Control_Monad_Eff_Exception.error("Didn't find JSON output"))();
                              };
                              throw new Error("Failed pattern match at IdePurescript.Build line 54, column 7 - line 58, column 5: " + [ $17.constructor.name ]);
                          };
                      };
                      return err(Control_Monad_Eff_Exception.error("Process exited abnormally"));
                  })();
              };
          };
      });
  };
  exports["Command"] = Command;
  exports["rebuild"] = rebuild;
  exports["build"] = build;
})(PS["IdePurescript.Build"] = PS["IdePurescript.Build"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Data_Maybe = PS["Data.Maybe"];
  var IdePurescript_Build = PS["IdePurescript.Build"];
  var IdePurescript_PscErrors = PS["IdePurescript.PscErrors"];        
  var Errors = (function () {
      function Errors() {

      };
      Errors.value = new Errors();
      return Errors;
  })();
  var Success = (function () {
      function Success() {

      };
      Success.value = new Success();
      return Success;
  })();
  var resultToString = function (v) {
      if (v instanceof Errors) {
          return "errors";
      };
      if (v instanceof Success) {
          return "success";
      };
      throw new Error("Failed pattern match at IdePurescript.Atom.Build line 29, column 1 - line 30, column 1: " + [ v.constructor.name ]);
  };
  var toLintResult = function (res) {
      var range = function (v) {
          if (v instanceof Data_Maybe.Nothing) {
              return [  ];
          };
          if (v instanceof Data_Maybe.Just) {
              return [ [ v.value0.startLine - 1, v.value0.startColumn - 1 ], [ v.value0.endLine - 1, v.value0.endColumn - 1 ] ];
          };
          throw new Error("Failed pattern match at IdePurescript.Atom.Build line 51, column 3 - line 52, column 3: " + [ v.constructor.name ]);
      };
      var result = function (errorType) {
          return function (v) {
              return {
                  type: errorType, 
                  text: v.message, 
                  suggestion: Data_Maybe.maybe({
                      replacement: "", 
                      hasSuggestion: false
                  })(function (v1) {
                      return {
                          replacement: v1, 
                          hasSuggestion: true
                      };
                  })(v.suggestion), 
                  filePath: Data_Maybe.fromMaybe("")(v.filename), 
                  range: range(v.position), 
                  multiline: true, 
                  errorCode: v.errorCode, 
                  trace: [ {
                      type: "Link", 
                      html: "<a href=\"" + (v.errorLink + "\">More info (wiki)</a>")
                  } ]
              };
          };
      };
      var warnings = Prelude["<$>"](Prelude.functorArray)(result("Warning"))(res.errors.warnings);
      var errors = Prelude["<$>"](Prelude.functorArray)(result("Error"))(res.errors.errors);
      return {
          messages: Prelude["++"](Prelude.semigroupArray)(errors)(warnings), 
          result: resultToString((function () {
              if (res.success) {
                  return Success.value;
              };
              if (!res.success) {
                  return Errors.value;
              };
              throw new Error("Failed pattern match at IdePurescript.Atom.Build line 47, column 13 - line 48, column 3: " + [ res.success.constructor.name ]);
          })())
      };
  };
  var linterBuild = function (v) {
      return IdePurescript_Build.build({
          command: new IdePurescript_Build.Command(v.command, v.args), 
          directory: v.directory
      });
  };
  exports["Errors"] = Errors;
  exports["Success"] = Success;
  exports["toLintResult"] = toLintResult;
  exports["linterBuild"] = linterBuild;
  exports["resultToString"] = resultToString;
})(PS["IdePurescript.Atom.Build"] = PS["IdePurescript.Atom.Build"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var DOM = PS["DOM"];
  var DOM_Node_Document = PS["DOM.Node.Document"];
  var DOM_Node_Element = PS["DOM.Node.Element"];
  var DOM_Node_Node = PS["DOM.Node.Node"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];        
  var Building = (function () {
      function Building() {

      };
      Building.value = new Building();
      return Building;
  })();
  var Success = (function () {
      function Success() {

      };
      Success.value = new Success();
      return Success;
  })();
  var Errors = (function () {
      function Errors() {

      };
      Errors.value = new Errors();
      return Errors;
  })();
  var Failure = (function () {
      function Failure() {

      };
      Failure.value = new Failure();
      return Failure;
  })();
  var statusIcon = function (status) {
      return "purescript-build-status icon icon-" + (function () {
          if (status instanceof Success) {
              return "check";
          };
          if (status instanceof Errors) {
              return "alert";
          };
          if (status instanceof Failure) {
              return "bug";
          };
          if (status instanceof Building) {
              return "hourglass";
          };
          throw new Error("Failed pattern match at IdePurescript.Atom.BuildStatus line 36, column 21 - line 42, column 1: " + [ status.constructor.name ]);
      })();
  };
  var updateBuildStatus = function (elt) {
      return function (status) {
          return DOM_Node_Element.setClassName(statusIcon(status))(elt);
      };
  };
  var showBuildStatus = new Prelude.Show(function (v) {
      if (v instanceof Building) {
          return "Building";
      };
      if (v instanceof Success) {
          return "Success";
      };
      if (v instanceof Errors) {
          return "Errors";
      };
      if (v instanceof Failure) {
          return "Failure";
      };
      throw new Error("Failed pattern match at IdePurescript.Atom.BuildStatus line 17, column 3 - line 18, column 3: " + [ v.constructor.name ]);
  });
  var getBuildStatus = function __do() {
      var v = Prelude["<$>"](Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Prelude[">>="](Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document))();
      var v1 = DOM_Node_Document.createElement("span")(v)();
      DOM_Node_Element.setClassName(statusIcon(Success.value))(v1)();
      var v2 = DOM_Node_Document.createTextNode("PureScript")(v)();
      DOM_Node_Node.appendChild(DOM_Node_Types.textToNode(v2))(DOM_Node_Types.elementToNode(v1))();
      return v1;
  };
  var eqBuildStatus = new Prelude.Eq(function (x) {
      return function (y) {
          if (x instanceof Building && y instanceof Building) {
              return true;
          };
          if (x instanceof Success && y instanceof Success) {
              return true;
          };
          if (x instanceof Errors && y instanceof Errors) {
              return true;
          };
          if (x instanceof Failure && y instanceof Failure) {
              return true;
          };
          return false;
      };
  });
  exports["Building"] = Building;
  exports["Success"] = Success;
  exports["Errors"] = Errors;
  exports["Failure"] = Failure;
  exports["updateBuildStatus"] = updateBuildStatus;
  exports["statusIcon"] = statusIcon;
  exports["getBuildStatus"] = getBuildStatus;
  exports["showBuildStatus"] = showBuildStatus;
  exports["eqBuildStatus"] = eqBuildStatus;
})(PS["IdePurescript.Atom.BuildStatus"] = PS["IdePurescript.Atom.BuildStatus"] || {});
(function(exports) {
    "use strict";
  // module Node.Process

  /* global exports */
  /* global process */

  exports.process = process;
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Function = PS["Data.Function"];
  var Data_Maybe = PS["Data.Maybe"];        
  var Darwin = (function () {
      function Darwin() {

      };
      Darwin.value = new Darwin();
      return Darwin;
  })();
  var FreeBSD = (function () {
      function FreeBSD() {

      };
      FreeBSD.value = new FreeBSD();
      return FreeBSD;
  })();
  var Linux = (function () {
      function Linux() {

      };
      Linux.value = new Linux();
      return Linux;
  })();
  var SunOS = (function () {
      function SunOS() {

      };
      SunOS.value = new SunOS();
      return SunOS;
  })();
  var Win32 = (function () {
      function Win32() {

      };
      Win32.value = new Win32();
      return Win32;
  })();
  var toString = function (v) {
      if (v instanceof Darwin) {
          return "darwin";
      };
      if (v instanceof FreeBSD) {
          return "freebsd";
      };
      if (v instanceof Linux) {
          return "linux";
      };
      if (v instanceof SunOS) {
          return "sunos";
      };
      if (v instanceof Win32) {
          return "win32";
      };
      throw new Error("Failed pattern match at Node.Platform line 18, column 1 - line 19, column 1: " + [ v.constructor.name ]);
  }; 
  var fromString = function (v) {
      if (v === "darwin") {
          return new Data_Maybe.Just(Darwin.value);
      };
      if (v === "freebsd") {
          return new Data_Maybe.Just(FreeBSD.value);
      };
      if (v === "linux") {
          return new Data_Maybe.Just(Linux.value);
      };
      if (v === "sunos") {
          return new Data_Maybe.Just(SunOS.value);
      };
      if (v === "win32") {
          return new Data_Maybe.Just(Win32.value);
      };
      return Data_Maybe.Nothing.value;
  };
  var eqPlatform = new Prelude.Eq(Data_Function.on(Prelude.eq(Prelude.eqString))(toString));
  exports["Darwin"] = Darwin;
  exports["FreeBSD"] = FreeBSD;
  exports["Linux"] = Linux;
  exports["SunOS"] = SunOS;
  exports["Win32"] = Win32;
  exports["fromString"] = fromString;
  exports["toString"] = toString;
  exports["eqPlatform"] = eqPlatform;
})(PS["Node.Platform"] = PS["Node.Platform"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["Node.Process"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Maybe_Unsafe = PS["Data.Maybe.Unsafe"];
  var Data_StrMap_1 = PS["Data.StrMap"];
  var Data_StrMap_1 = PS["Data.StrMap"];
  var Data_Posix = PS["Data.Posix"];
  var Data_Posix_Signal_1 = PS["Data.Posix.Signal"];
  var Data_Posix_Signal_1 = PS["Data.Posix.Signal"];
  var Node_Stream = PS["Node.Stream"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];
  var Node_Platform_1 = PS["Node.Platform"];
  var Node_Platform_1 = PS["Node.Platform"];
  var platform = Data_Maybe_Unsafe.fromJust(Node_Platform_1.fromString($foreign.process.platform));
  exports["platform"] = platform;
})(PS["Node.Process"] = PS["Node.Process"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Node_Process = PS["Node.Process"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_Config = PS["Atom.Config"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Node_Platform = PS["Node.Platform"];        
  var pulpCmd = (function () {
      var $2 = Prelude["=="](Node_Platform.eqPlatform)(Node_Process.platform)(Node_Platform.Win32.value);
      if ($2) {
          return "pulp.cmd";
      };
      if (!$2) {
          return "pulp";
      };
      throw new Error("Failed pattern match at IdePurescript.Atom.Config line 13, column 11 - line 15, column 1: " + [ $2.constructor.name ]);
  })();
  var getPscIdePort = function __do() {
      var v = Atom_Atom.getAtom();
      var v1 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readInt)(Atom_Config.getConfig(v.config)("ide-purescript.pscIdePort"))();
      return Data_Either.either(Prelude["const"](4242))(Prelude.id(Prelude.categoryFn))(v1);
  };
  var config = Data_Foreign.toForeign({
      pscIdePort: {
          title: "psc-ide port number", 
          description: "The port to use to communicate with `psc-ide-server`, also to launch the server with if required. " + "The default port is 4242 and this only need be changed if you've explicitly chosen to use another port.", 
          type: "integer", 
          "default": 4242
      }, 
      pscIdeServerExe: {
          title: "psc-ide-server executable location", 
          description: "The location of the `psc-ide-server` executable. Note this is *not* `psc-ide-client`. May be on the PATH.", 
          type: "string", 
          "default": "psc-ide-server"
      }, 
      buildCommand: {
          title: "Build command", 
          description: "Command line to build the project. " + ("Could be pulp (default), psc or a gulpfile, so long as it passes through errors from psc. " + ("Should output json errors (`--json-errors` flag). " + ("This is not interpreted via a shell, arguments can be specified but don't use shell features or a command with spaces in its path." + "See [examples on the README](https://github.com/nwolverson/atom-ide-purescript/#build-configuration-hints)"))), 
          type: "string", 
          "default": pulpCmd + " build --no-psa --json-errors"
      }, 
      buildOnSave: {
          title: "Build on save", 
          description: "Build automatically on save. Enables in-line and collected errors. Otherwise a build command is available to be invoked manually.", 
          type: "boolean", 
          "default": true
      }, 
      fastRebuild: {
          title: "Use fast rebuild", 
          description: "Use psc-ide-server rebuild function to build the current file only on save", 
          type: "boolean", 
          "default": false
      }, 
      psciCommand: {
          title: "psci command (eg 'psci' or 'pulp psci' or full path)", 
          description: "Command line to use to launch PSCI for the repl buffer. " + "This is not interpreted via a shell, arguments can be specified but don't use shell features or a command with spaces in its path.", 
          type: "string", 
          "default": pulpCmd + " psci"
      }, 
      autocomplete: {
          type: "object", 
          properties: {
              addImport: {
                  title: "Add import on autocomplete", 
                  description: "Whether to automatically add imported identifiers when accepting autocomplete result.", 
                  type: "boolean", 
                  "default": true
              }, 
              allModules: {
                  title: "Suggest from all modules", 
                  description: "Whether to always autocomplete from all built modules, or just those imported in the file. Suggestions from all modules always available by explicitly triggering autocomplete.", 
                  type: "boolean", 
                  "default": true
              }
          }
      }
  });
  exports["getPscIdePort"] = getPscIdePort;
  exports["config"] = config;
})(PS["IdePurescript.Atom.Config"] = PS["IdePurescript.Atom.Config"] || {});
(function(exports) {// module IdePurescript.Atom.Hooks.Dependencies

  exports.installDependencies = function() {
    return require('atom-package-deps')
      .install('ide-purescript');
  }
})(PS["IdePurescript.Atom.Hooks.Dependencies"] = PS["IdePurescript.Atom.Hooks.Dependencies"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Atom.Hooks.Dependencies"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  exports["installDependencies"] = $foreign.installDependencies;
})(PS["IdePurescript.Atom.Hooks.Dependencies"] = PS["IdePurescript.Atom.Hooks.Dependencies"] || {});
(function(exports) {// module IdePurescript.Atom.Hooks.Linter

  exports.register = function(registry) {
    return function(options) {
      return function() {
        return registry.register(options);
      };
    };
  };

  exports.deleteMessages = function (linter) {
    return function () {
      linter.deleteMessages();
      return {};
    };
  };

  exports.setMessages = function (linter) {
    return function (messages) {
      return function () {
        linter.setMessages(messages);
        return {};
      };
    };
  };

  exports.getMessages = function (linter) {
    return function () {
      return Array.from(linter.getMessages());
    };
  };

  exports.getEditorLinter = function (linterMain) {
    return function (editor) {
      return function () {
        return linterMain.getEditorLinter(editor);
      };
    };
  };

  exports.getMarkerBufferRange = function (editorLinter) {
    return function (message) {
      return function() {
        var marker = editorLinter.markers.get(message);
        if (marker && marker.isValid()) {
          return marker.getBufferRange();
        } else {
          return null;
        }
      };
    };
  };
})(PS["IdePurescript.Atom.Hooks.Linter"] = PS["IdePurescript.Atom.Hooks.Linter"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Atom.Hooks.Linter"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_Range = PS["Atom.Range"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Nullable = PS["Data.Nullable"];
  var IdePurescript_Atom_Build = PS["IdePurescript.Atom.Build"];
  var Prelude = PS["Prelude"];
  exports["getMarkerBufferRange"] = $foreign.getMarkerBufferRange;
  exports["getEditorLinter"] = $foreign.getEditorLinter;
  exports["getMessages"] = $foreign.getMessages;
  exports["setMessages"] = $foreign.setMessages;
  exports["deleteMessages"] = $foreign.deleteMessages;
  exports["register"] = $foreign.register;
})(PS["IdePurescript.Atom.Hooks.Linter"] = PS["IdePurescript.Atom.Hooks.Linter"] || {});
(function(exports) {// module IdePurescript.Atom.Hooks.StatusBar

  exports.addLeftTileImpl = function(statusBar, arg) { statusBar.addLeftTile(arg); };
})(PS["IdePurescript.Atom.Hooks.StatusBar"] = PS["IdePurescript.Atom.Hooks.StatusBar"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Atom.Hooks.StatusBar"];
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var DOM_Node_Types = PS["DOM.Node.Types"];                                
  var addLeftTile = Data_Function_Eff.runEffFn2($foreign.addLeftTileImpl);
  exports["addLeftTile"] = addLeftTile;
})(PS["IdePurescript.Atom.Hooks.StatusBar"] = PS["IdePurescript.Atom.Hooks.StatusBar"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Date = PS["Data.Date"];
  var Data_Time = PS["Data.Time"];
  var Data_Function = PS["Data.Function"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Int = PS["Data.Int"];
  var Data_Maybe = PS["Data.Maybe"];
  var Node_Buffer = PS["Node.Buffer"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Stats = PS["Node.FS.Stats"];
  var Node_Path = PS["Node.Path"];
  var Node_FS_Perms = PS["Node.FS.Perms"];
  var Node_FS_Internal = PS["Node.FS.Internal"];        
  var fs = Node_FS_Internal.unsafeRequireFS;
  var exists = function (file) {
      return Node_FS_Internal.mkEff(function (v) {
          return fs.existsSync(file);
      });
  };
  exports["exists"] = exists;
})(PS["Node.FS.Sync"] = PS["Node.FS.Sync"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Node_Path = PS["Node.Path"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_Config = PS["Atom.Config"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_Project = PS["Atom.Project"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var Data_Traversable = PS["Data.Traversable"];
  var IdePurescript_Atom_Build = PS["IdePurescript.Atom.Build"];
  var IdePurescript_Atom_BuildStatus = PS["IdePurescript.Atom.BuildStatus"];
  var IdePurescript_Atom_Config = PS["IdePurescript.Atom.Config"];
  var IdePurescript_Atom_Hooks_Linter = PS["IdePurescript.Atom.Hooks.Linter"];
  var IdePurescript_Build = PS["IdePurescript.Build"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_FS = PS["Node.FS"];
  var Node_FS_Sync = PS["Node.FS.Sync"];
  var PscIde = PS["PscIde"];        
  var lint = function (file) {
      return function (config) {
          return function (projdir) {
              return function (linter) {
                  return function (statusElt) {
                      var status = function (s) {
                          return function (msg) {
                              return function __do() {
                                  IdePurescript_Atom_BuildStatus.updateBuildStatus(statusElt)(s)();
                                  return (function () {
                                      var $14 = Prelude["=="](IdePurescript_Atom_BuildStatus.eqBuildStatus)(s)(IdePurescript_Atom_BuildStatus.Failure.value);
                                      if ($14) {
                                          return Control_Monad_Eff_Console.error;
                                      };
                                      if (!$14) {
                                          return Control_Monad_Eff_Console.log;
                                      };
                                      throw new Error("Failed pattern match at IdePurescript.Atom.LinterBuild line 126, column 8 - line 126, column 43: " + [ $14.constructor.name ]);
                                  })()("PureScript build status: " + (Prelude.show(IdePurescript_Atom_BuildStatus.showBuildStatus)(s) + Data_Maybe.maybe("")(function (v) {
                                      return ": " + v;
                                  })(msg)))();
                              };
                          };
                      };
                      var liftEffA = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff);
                      var failure = function (s) {
                          return function __do() {
                              var v = Atom_Atom.getAtom();
                              status(IdePurescript_Atom_BuildStatus.Failure.value)(new Data_Maybe.Just(s))();
                              return Atom_NotificationManager.addError(v.notifications)(s)();
                          };
                      };
                      var doBuild = function (buildCmd) {
                          return Control_Monad_Error_Class.catchError(Control_Monad_Aff.monadErrorAff)(Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(status(IdePurescript_Atom_BuildStatus.Building.value)(Data_Maybe.Nothing.value)))(function () {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(Prelude["<$>"](Control_Monad_Aff.functorAff)(IdePurescript_Atom_Build.toLintResult)(buildCmd))(function (v) {
                                  return liftEffA(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Maybe.Just.create)(function __do() {
                                      IdePurescript_Atom_Hooks_Linter.deleteMessages(linter)();
                                      IdePurescript_Atom_Hooks_Linter.setMessages(linter)(v.messages)();
                                      status((function () {
                                          var $18 = v.result === "success";
                                          if ($18) {
                                              return IdePurescript_Atom_BuildStatus.Success.value;
                                          };
                                          if (!$18) {
                                              return IdePurescript_Atom_BuildStatus.Errors.value;
                                          };
                                          throw new Error("Failed pattern match at IdePurescript.Atom.LinterBuild line 111, column 21 - line 111, column 68: " + [ $18.constructor.name ]);
                                      })())(Data_Maybe.Nothing.value)();
                                      return v.messages;
                                  }));
                              });
                          }))(function (v) {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffA(failure("Error running PureScript build command: " + Prelude.show(Control_Monad_Eff_Exception.showError)(v))))(function () {
                                  return Prelude.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                              });
                          });
                      };
                      return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffA(Atom_Atom.getAtom))(function (v) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffA(Atom_Config.getConfig(config)("ide-purescript.buildCommand")))(function (v1) {
                              var buildCommand = Data_Either.either(Prelude["const"]([  ]))(function ($48) {
                                  return Data_String_Regex.split(Data_String_Regex.regex("\\s+")(Data_String_Regex.noFlags))(Data_String.trim($48));
                              })(Data_Foreign.readString(v1));
                              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffA(IdePurescript_Atom_Config.getPscIdePort))(function (v2) {
                                  return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffA(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readBoolean)(Atom_Config.getConfig(config)("ide-purescript.fastRebuild"))))(function (v3) {
                                      var fastBuild = (function () {
                                          if (v3 instanceof Data_Either.Right && (v3.value0 && file instanceof Data_Maybe.Just)) {
                                              return Data_Maybe.Just.create(IdePurescript_Build.rebuild(v2)(file.value0));
                                          };
                                          return Data_Maybe.Nothing.value;
                                      })();
                                      return Prelude.bind(Control_Monad_Aff.bindAff)(Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit))(function () {
                                          var $31 = Data_Array.uncons(buildCommand);
                                          if (fastBuild instanceof Data_Maybe.Just) {
                                              return doBuild(fastBuild.value0);
                                          };
                                          if ($31 instanceof Data_Maybe.Just) {
                                              return doBuild(IdePurescript_Atom_Build.linterBuild({
                                                  command: $31.value0.head, 
                                                  args: $31.value0.tail, 
                                                  directory: projdir
                                              }));
                                          };
                                          if ($31 instanceof Data_Maybe.Nothing) {
                                              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffA(failure("Error parsing PureScript build command")))(function () {
                                                  return Prelude.pure(Control_Monad_Aff.applicativeAff)(Data_Maybe.Nothing.value);
                                              });
                                          };
                                          throw new Error("Failed pattern match at IdePurescript.Atom.LinterBuild line 94, column 3 - line 100, column 3: " + [ fastBuild.constructor.name, $31.constructor.name ]);
                                      });
                                  });
                              });
                          });
                      });
                  };
              };
          };
      };
  };
  var getProjectRoot = (function () {
      var validDir = Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(true));
      var getParent = function (p) {
          return Node_Path.concat([ p, ".." ]);
      };
      var getRoot = function (path) {
          var src = Node_Path.concat([ path, "src" ]);
          var parent = getParent(path);
          var $36 = path === "" || path === parent;
          if ($36) {
              return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
          };
          if (!$36) {
              return function __do() {
                  var v = Node_FS_Sync.exists(src)();
                  if (v) {
                      return new Data_Maybe.Just(path);
                  };
                  if (!v) {
                      return getRoot(parent)();
                  };
                  throw new Error("Failed pattern match at IdePurescript.Atom.LinterBuild line 72, column 7 - line 74, column 3: " + [ v.constructor.name ]);
              };
          };
          throw new Error("Failed pattern match at IdePurescript.Atom.LinterBuild line 68, column 5 - line 74, column 3: " + [ $36.constructor.name ]);
      };
      return function __do() {
          var v = Atom_Atom.getAtom();
          var v1 = Atom_Project.getPaths(v.project)();
          var v2 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Array.catMaybes)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(getRoot)(v1))();
          var v3 = Data_Array.filterM(Control_Monad_Eff.monadEff)(validDir)(v2)();
          var $43 = Data_Array.uncons(v3);
          if ($43 instanceof Data_Maybe.Nothing) {
              Atom_NotificationManager.addWarning(v.notifications)("Doesn't look like a purescript project - didn't find any src dir")();
              return Data_Maybe.Nothing.value;
          };
          if ($43 instanceof Data_Maybe.Just) {
              Control_Monad.when(Control_Monad_Eff.monadEff)(!Data_Array["null"]($43.value0.tail))(Atom_NotificationManager.addWarning(v.notifications)("Multiple project roots, using first: " + $43.value0.head))();
              Control_Monad.when(Control_Monad_Eff.monadEff)(Data_Array["null"]($43.value0.tail) && Data_Array.length(v2) > 1)(Atom_NotificationManager.addWarning(v.notifications)("Multiple project roots but only 1 looks valid: " + $43.value0.head))();
              var output = Node_Path.concat([ $43.value0.head, "output" ]);
              var v4 = Node_FS_Sync.exists(output)();
              Control_Monad.when(Control_Monad_Eff.monadEff)(!v4)(Atom_NotificationManager.addWarning(v.notifications)("Doesn't look like a project has been built - didn't find: " + output))();
              return new Data_Maybe.Just($43.value0.head);
          };
          throw new Error("Failed pattern match at IdePurescript.Atom.LinterBuild line 42, column 3 - line 53, column 3: " + [ $43.constructor.name ]);
      };
  })();
  exports["lint"] = lint;
  exports["getProjectRoot"] = getProjectRoot;
})(PS["IdePurescript.Atom.LinterBuild"] = PS["IdePurescript.Atom.LinterBuild"] || {});
(function(exports) {

  exports.getModel = function(element) {
    return function() {
      if (typeof element.getModel === "function") {
        return element.getModel();
      }
      return null;
    }
  }
})(PS["IdePurescript.Atom.Psci"] = PS["IdePurescript.Atom.Psci"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var $foreign = PS["IdePurescript.Atom.Psci"];
  var Prelude = PS["Prelude"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_CommandRegistry = PS["Atom.CommandRegistry"];
  var Atom_Config = PS["Atom.Config"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_Grammar = PS["Atom.Grammar"];
  var Atom_GrammarRegistry = PS["Atom.GrammarRegistry"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_Pane = PS["Atom.Pane"];
  var Atom_Point = PS["Atom.Point"];
  var Atom_Project = PS["Atom.Project"];
  var Atom_Range = PS["Atom.Range"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var DOM_HTML = PS["DOM.HTML"];
  var DOM_HTML_Types = PS["DOM.HTML.Types"];
  var DOM_HTML_Window = PS["DOM.HTML.Window"];
  var DOM_Node_Document = PS["DOM.Node.Document"];
  var DOM_Node_Element = PS["DOM.Node.Element"];
  var DOM_Node_Node = PS["DOM.Node.Node"];
  var DOM_Node_ParentNode = PS["DOM.Node.ParentNode"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var DOM_Util = PS["DOM.Util"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_String = PS["Data.String"];
  var Data_String_Regex = PS["Data.String.Regex"];
  var IdePurescript_Atom_Imports = PS["IdePurescript.Atom.Imports"];
  var IdePurescript_Atom_LinterBuild = PS["IdePurescript.Atom.LinterBuild"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_Encoding = PS["Node.Encoding"];
  var Node_FS = PS["Node.FS"];
  var Node_Stream = PS["Node.Stream"];
  var Unsafe_Coerce = PS["Unsafe.Coerce"];        
  var paneUri = "purescript://psci";
  var createElement$prime = function (elt) {
      return function __do() {
          var v = Prelude["<$>"](Control_Monad_Eff.functorEff)(DOM_HTML_Types.htmlDocumentToDocument)(Prelude[">>="](Control_Monad_Eff.bindEff)(DOM_HTML.window)(DOM_HTML_Window.document))();
          return DOM_Node_Document.createElement(elt)(v)();
      };
  };
  var opener = function (s) {
      var $38 = Data_String.indexOf(paneUri)(s);
      if ($38 instanceof Data_Maybe.Just && $38.value0 === 0) {
          return function __do() {
              var v = createElement$prime("div")();
              DOM_Node_Element.setClassName("psci-pane")(v)();
              var v1 = createElement$prime("div")();
              DOM_Node_Element.setClassName("psci-lines")(v1)();
              DOM_Node_Node.appendChild(DOM_Node_Types.elementToNode(v1))(DOM_Node_Types.elementToNode(v))();
              var v2 = createElement$prime("div")();
              DOM_Node_Element.setClassName("psci-input padded inset-panel")(v2)();
              var v3 = createElement$prime("atom-text-editor")();
              DOM_Node_Element.setAttribute("mini")("true")(v3)();
              DOM_Node_Node.appendChild(DOM_Node_Types.elementToNode(v3))(DOM_Node_Types.elementToNode(v2))();
              DOM_Node_Node.appendChild(DOM_Node_Types.elementToNode(v2))(DOM_Node_Types.elementToNode(v))();
              return Data_Nullable.toNullable(new Data_Maybe.Just({
                  getTitle: function (v4) {
                      return "PSCI";
                  }, 
                  element: v
              }));
          };
      };
      return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Nullable.toNullable(Data_Maybe.Nothing.value));
  };
  var openPsci = Control_Monad_Aff.makeAff(function (err) {
      return function (cb) {
          return function __do() {
              var v = Atom_Atom.getAtom();
              Atom_Workspace.addOpener(v.workspace)(Unsafe_Coerce.unsafeCoerce(opener))();
              return Atom_Workspace.open(v.workspace)(paneUri)((function () {
                  var $46 = {};
                  for (var $47 in Atom_Workspace.defaultOpenOptions) {
                      if (Atom_Workspace.defaultOpenOptions.hasOwnProperty($47)) {
                          $46[$47] = Atom_Workspace.defaultOpenOptions[$47];
                      };
                  };
                  $46.split = "right";
                  $46.activatePane = false;
                  return $46;
              })())(cb)(err(Control_Monad_Eff_Exception.error("Can't Open PSCI")))();
          };
      };
  });
  var clearText = function (v) {
      var node = DOM_Node_Types.elementToNode(v.element);
      return Control_Monad_Eff.whileE(DOM_Node_Node.hasChildNodes(node))(function __do() {
          var v1 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(DOM_Node_Node.firstChild(node))();
          return Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(function ($104) {
              return Prelude["void"](Control_Monad_Eff.functorEff)(Prelude.flip(DOM_Node_Node.removeChild)(node)($104));
          })(v1)();
      });
  };
  var appendText = function (v) {
      return function (text) {
          return function __do() {
              var v1 = createElement$prime("div")();
              DOM_Node_Element.setClassName("psci-line")(v1)();
              DOM_Node_Node.setTextContent(text)(DOM_Node_Types.elementToNode(v1))();
              var v2 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(DOM_Node_ParentNode.querySelector(".psci-lines")(DOM_Node_Types.elementToParentNode(v.element)))();
              return Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(function (lines$prime) {
                  return function __do() {
                      DOM_Node_Node.appendChild(DOM_Node_Types.elementToNode(v1))(DOM_Node_Types.elementToNode(lines$prime))();
                      var v3 = DOM_Util.getScrollHeight(lines$prime)();
                      return DOM_Util.setScrollTop(lines$prime)(v3)();
                  };
              })(v2)();
          };
      };
  };
  var sendText = function (pane) {
      return function (proc) {
          return function (text) {
              var text$prime = Data_String.trim(text) + "\n";
              return function __do() {
                  appendText(pane)(text$prime)();
                  return Prelude["void"](Control_Monad_Eff.functorEff)(Node_Stream.writeString(Node_ChildProcess.stdin(proc))(Node_Encoding.UTF8.value)(text$prime)(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))();
              };
          };
      };
  };
  var closePsci = function (pane) {
      return function (proc) {
          return function __do() {
              sendText(pane)(proc)(":q")();
              return Node_Stream.end(Node_ChildProcess.stdin(proc))(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))();
          };
      };
  };
  var sendText$prime = function (getText) {
      return function (pane) {
          return function (proc) {
              return function __do() {
                  var v = Atom_Atom.getAtom();
                  var v1 = Atom_Workspace.getActiveTextEditor(v.workspace)();
                  return Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(function (ed) {
                      return function __do() {
                          var v2 = getText(ed)();
                          return sendText(pane)(proc)(v2)();
                      };
                  })(v1)();
              };
          };
      };
  };
  var sendLine = sendText$prime(function (ed) {
      return function __do() {
          var v = Atom_Editor.getCursorBufferPosition(ed)();
          var p = function (c) {
              return Atom_Point.mkPoint(Atom_Point.getRow(v))(c);
          };
          var v1 = Atom_Editor.getTextInRange(ed)(Atom_Range.mkRange(p(0))(p(1000)))();
          Atom_Editor.moveDown(ed)(1)();
          Atom_Editor.moveToBeginningOfLine(ed)();
          return v1;
      };
  });
  var sendSelection = sendText$prime(Atom_Editor.getSelectedText);
  var startRepl = function (paneRef) {
      return function (psciRef) {
          var liftEff$prime$prime = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff);
          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(Atom_Atom.getAtom))(function (v) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Unsafe_Coerce.unsafeCoerce(openPsci))(function (v1) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(function __do() {
                      Control_Monad_Eff_Ref.writeRef(paneRef)(new Data_Maybe.Just(v1))();
                      Control_Monad_Eff_Console.log("Started PSCI")();
                      var v2 = Atom_GrammarRegistry.grammarForScopeName(v.grammars)("source.purescript.psci")();
                      return Prelude.unit;
                  }))(function () {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readString)(Atom_Config.getConfig(v.config)("ide-purescript.psciCommand"))))(function (v2) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(IdePurescript_Atom_LinterBuild.getProjectRoot))(function (v3) {
                              var command = Data_Either.either(Prelude["const"]([  ]))(function ($105) {
                                  return Data_String_Regex.split(Data_String_Regex.regex("\\s+")(Data_String_Regex.noFlags))(Data_String.trim($105));
                              })(v2);
                              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime((function () {
                                  var $68 = Data_Array.uncons(command);
                                  if (v3 instanceof Data_Maybe.Just && $68 instanceof Data_Maybe.Just) {
                                      return Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Maybe.Just.create)(Node_ChildProcess.spawn($68.value0.head)($68.value0.tail)((function () {
                                          var $69 = {};
                                          for (var $70 in Node_ChildProcess.defaultSpawnOptions) {
                                              if (Node_ChildProcess.defaultSpawnOptions.hasOwnProperty($70)) {
                                                  $69[$70] = Node_ChildProcess.defaultSpawnOptions[$70];
                                              };
                                          };
                                          $69.cwd = v3;
                                          return $69;
                                      })()));
                                  };
                                  return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
                              })()))(function (v4) {
                                  return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(function ($106) {
                                      return Control_Monad_Eff_Ref.writeRef(psciRef)(Data_Maybe.Just.create($106));
                                  })(v4)))(function () {
                                      return liftEff$prime$prime(Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(function (proc) {
                                          return Control_Monad_Eff_Exception.catchException(Prelude["const"](Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit)))(function __do() {
                                              Node_Stream.onDataString(Node_ChildProcess.stdout(proc))(Node_Encoding.UTF8.value)(appendText(v1))();
                                              Node_Stream.onDataString(Node_ChildProcess.stderr(proc))(Node_Encoding.UTF8.value)(appendText(v1))();
                                              Node_ChildProcess.onError(proc)(function (err) {
                                                  return Control_Monad_Eff_Console.log("PSCI error");
                                              })();
                                              Node_ChildProcess.onClose(proc)(function (exit) {
                                                  if (exit instanceof Node_ChildProcess.Normally && exit.value0 === 0) {
                                                      return Control_Monad_Eff_Console.log("psci exited successfully");
                                                  };
                                                  return Atom_NotificationManager.addError(v.notifications)("PSCI exited abnormally");
                                              })();
                                              var v5 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(DOM_Node_ParentNode.querySelector(".psci-input atom-text-editor")(DOM_Node_Types.elementToParentNode(v1.element)))();
                                              if (v5 instanceof Data_Maybe.Just) {
                                                  var v6 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)($foreign.getModel(v5.value0))();
                                                  return Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(function (ed) {
                                                      return Atom_CommandRegistry["addCommand'"](v.commands)(v5.value0)("core:confirm")(function (v7) {
                                                          return function __do() {
                                                              var v8 = Atom_Editor.getText(ed)();
                                                              Atom_Editor.setText(ed)("")();
                                                              return sendText(v1)(proc)(v8)();
                                                          };
                                                      });
                                                  })(v6)();
                                              };
                                              if (v5 instanceof Data_Maybe.Nothing) {
                                                  return Prelude.unit;
                                              };
                                              throw new Error("Failed pattern match at IdePurescript.Atom.Psci line 183, column 5 - line 195, column 3: " + [ v5.constructor.name ]);
                                          });
                                      })(v4));
                                  });
                              });
                          });
                      });
                  });
              });
          });
      };
  };
  var activate = function __do() {
      var v = Atom_Atom.getAtom();
      var v1 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
      var v2 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
      var close = function __do() {
          var v3 = Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(Control_Monad_Eff_Ref.readRef(v1))();
          var v4 = Control_Monad_Eff_Class.liftEff(Control_Monad_Eff_Class.monadEffEff)(Control_Monad_Eff_Ref.readRef(v2))();
          if (v3 instanceof Data_Maybe.Just && v4 instanceof Data_Maybe.Just) {
              closePsci(v3.value0)(v4.value0)();
              Control_Monad_Eff_Ref.writeRef(v2)(Data_Maybe.Nothing.value)();
              Control_Monad_Eff_Ref.writeRef(v1)(Data_Maybe.Nothing.value)();
              var v5 = Atom_Workspace.paneForItem(v.workspace)(v3.value0)();
              if (v5 instanceof Data_Maybe.Just) {
                  return Prelude["void"](Control_Monad_Eff.functorEff)(Atom_Pane.destroyItem(v5.value0)(v3.value0))();
              };
              if (v5 instanceof Data_Maybe.Nothing) {
                  return Prelude.unit;
              };
              throw new Error("Failed pattern match at IdePurescript.Atom.Psci line 215, column 13 - line 218, column 11: " + [ v5.constructor.name ]);
          };
          return Prelude.unit;
      };
      var runCmd = function (c) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v1)))(function (v3) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(v2)))(function (v4) {
                  if (v3 instanceof Data_Maybe.Just && v4 instanceof Data_Maybe.Just) {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(c(v3.value0)(v4.value0));
                  };
                  return Prelude.bind(Control_Monad_Aff.bindAff)(startRepl(v1)(v2))(function () {
                      return runCmd(c);
                  });
              });
          });
      };
      var open = IdePurescript_Atom_Imports.launchAffAndRaise(startRepl(v1)(v2));
      var reset = function __do() {
          var v3 = Control_Monad_Eff_Ref.readRef(v1)();
          close();
          Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(clearText)(v3)();
          return open();
      };
      var cmd = function (isEditor) {
          return function (name) {
              return function (action) {
                  var scope = (function () {
                      if (isEditor) {
                          return "atom-text-editor";
                      };
                      if (!isEditor) {
                          return "atom-workspace";
                      };
                      throw new Error("Failed pattern match at IdePurescript.Atom.Psci line 238, column 23 - line 239, column 3: " + [ isEditor.constructor.name ]);
                  })();
                  return Atom_CommandRegistry.addCommand(v.commands)("atom-workspace")("psci:" + name)(Prelude["const"](action));
              };
          };
      };
      cmd(false)("open")(reset)();
      cmd(true)("send-line")(IdePurescript_Atom_Imports.launchAffAndRaise(runCmd(sendLine)))();
      cmd(true)("send-selection")(IdePurescript_Atom_Imports.launchAffAndRaise(runCmd(sendSelection)))();
      return cmd(true)("reset")(reset)();
  };
  exports["activate"] = activate;
  exports["startRepl"] = startRepl;
  exports["sendSelection"] = sendSelection;
  exports["closePsci"] = closePsci;
  exports["sendLine"] = sendLine;
  exports["sendText"] = sendText;
  exports["clearText"] = clearText;
  exports["appendText"] = appendText;
  exports["openPsci"] = openPsci;
  exports["opener"] = opener;
  exports["paneUri"] = paneUri;
})(PS["IdePurescript.Atom.Psci"] = PS["IdePurescript.Atom.Psci"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Aff_Par = PS["Control.Monad.Aff.Par"];
  var Control_Alt = PS["Control.Alt"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var PscIde = PS["PscIde"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];        
  var CorrectPath = (function () {
      function CorrectPath() {

      };
      CorrectPath.value = new CorrectPath();
      return CorrectPath;
  })();
  var WrongPath = (function () {
      function WrongPath(value0) {
          this.value0 = value0;
      };
      WrongPath.create = function (value0) {
          return new WrongPath(value0);
      };
      return WrongPath;
  })();
  var Started = (function () {
      function Started(value0) {
          this.value0 = value0;
      };
      Started.create = function (value0) {
          return new Started(value0);
      };
      return Started;
  })();
  var Closed = (function () {
      function Closed() {

      };
      Closed.value = new Closed();
      return Closed;
  })();
  var StartError = (function () {
      function StartError(value0) {
          this.value0 = value0;
      };
      StartError.create = function (value0) {
          return new StartError(value0);
      };
      return StartError;
  })();
  var stopServer = function (port) {
      return function (cp) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(PscIde.quit(port))(function (v) {
              return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit);
          });
      };
  };
  var startServer = function (exe) {
      return function (port) {
          return function (rootPath) {
              var launchServer = Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Console.log("Starting psc-ide-server")))(function () {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Node_ChildProcess.spawn(exe)([ "-p", Prelude.show(Prelude.showInt)(port) ])((function () {
                      var $6 = {};
                      for (var $7 in Node_ChildProcess.defaultSpawnOptions) {
                          if (Node_ChildProcess.defaultSpawnOptions.hasOwnProperty($7)) {
                              $6[$7] = Node_ChildProcess.defaultSpawnOptions[$7];
                          };
                      };
                      $6.cwd = new Data_Maybe.Just(rootPath);
                      return $6;
                  })())))(function (v) {
                      var handleErr = Control_Monad_Aff.makeAff(function (v1) {
                          return function (succ) {
                              return function __do() {
                                  Node_ChildProcess.onError(v)(function (v2) {
                                      return succ(new StartError("psc-ide-server error"));
                                  })();
                                  return Node_ChildProcess.onClose(v)(function (exit) {
                                      if (exit instanceof Node_ChildProcess.Normally && exit.value0 === 0) {
                                          return succ(Closed.value);
                                      };
                                      if (exit instanceof Node_ChildProcess.Normally) {
                                          return succ(StartError.create("Error code returned: " + Prelude.show(Prelude.showInt)(exit.value0)));
                                      };
                                      return succ(new StartError("Other close error"));
                                  })();
                              };
                          };
                      });
                      return Control_Monad_Aff_Par.runPar(Control_Alt["<|>"](Control_Monad_Aff_Par.altPar)(handleErr)(Control_Monad_Aff["later'"](100)(Prelude.pure(Control_Monad_Aff.applicativeAff)(new Started(v)))));
                  });
              });
              var gotPath = function (workingDir) {
                  return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)((function () {
                      var $14 = workingDir === rootPath;
                      if ($14) {
                          return function __do() {
                              Control_Monad_Eff_Console.log("Found psc-ide-server with correct path: " + workingDir)();
                              return CorrectPath.value;
                          };
                      };
                      if (!$14) {
                          return function __do() {
                              Control_Monad_Eff_Console.log("Found psc-ide-server with wrong path: " + (workingDir + (" instead of " + rootPath)))();
                              return new WrongPath(workingDir);
                          };
                      };
                      throw new Error("Failed pattern match at IdePurescript.PscIdeServer line 44, column 5 - line 53, column 1: " + [ $14.constructor.name ]);
                  })());
              };
              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Aff.attempt(IdePurescript_PscIde.cwd(port)))(function (v) {
                  return Data_Either.either(Prelude["const"](launchServer))(gotPath)(v);
              });
          };
      };
  };
  exports["CorrectPath"] = CorrectPath;
  exports["WrongPath"] = WrongPath;
  exports["Started"] = Started;
  exports["Closed"] = Closed;
  exports["StartError"] = StartError;
  exports["stopServer"] = stopServer;
  exports["startServer"] = startServer;
})(PS["IdePurescript.PscIdeServer"] = PS["IdePurescript.PscIdeServer"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Data_Functor = PS["Data.Functor"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_FS = PS["Node.FS"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_Config = PS["Atom.Config"];
  var Atom_Project = PS["Atom.Project"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var IdePurescript_PscIdeServer = PS["IdePurescript.PscIdeServer"];
  var IdePurescript_Atom_LinterBuild = PS["IdePurescript.Atom.LinterBuild"];
  var PscIde = PS["PscIde"];        
  var startServer = (function () {
      var liftEffS = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff);
      return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffS(Atom_Atom.getAtom))(function (v) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffS(IdePurescript_Atom_LinterBuild.getProjectRoot))(function (v1) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffS(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readInt)(Atom_Config.getConfig(v.config)("ide-purescript.pscIdePort"))))(function (v2) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(liftEffS(Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Foreign.readString)(Atom_Config.getConfig(v.config)("ide-purescript.pscIdeServerExe"))))(function (v3) {
                      var $10 = {
                          portRaw: v2, 
                          serverRaw: v3, 
                          path: v1
                      };
                      if ($10.portRaw instanceof Data_Either.Right && ($10.serverRaw instanceof Data_Either.Right && $10.path instanceof Data_Maybe.Just)) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIdeServer.startServer($10.serverRaw.value0)($10.portRaw.value0)($10.path.value0))(function (v4) {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)((function () {
                                  if (v4 instanceof IdePurescript_PscIdeServer.CorrectPath) {
                                      return Data_Functor["<$"](Control_Monad_Eff.functorEff)(Data_Maybe.Nothing.value)(Atom_NotificationManager.addInfo(v.notifications)("Found existing psc-ide-server with correct path"));
                                  };
                                  if (v4 instanceof IdePurescript_PscIdeServer.WrongPath) {
                                      return Data_Functor["<$"](Control_Monad_Eff.functorEff)(Data_Maybe.Nothing.value)(Atom_NotificationManager.addError(v.notifications)("Found existing psc-ide-server with wrong path: '" + (v4.value0 + "'. Correct, kill or configure a different port, and restart.")));
                                  };
                                  if (v4 instanceof IdePurescript_PscIdeServer.Started) {
                                      return Data_Functor["<$"](Control_Monad_Eff.functorEff)(new Data_Maybe.Just(v4.value0))(Atom_NotificationManager.addSuccess(v.notifications)("Started psc-ide-server"));
                                  };
                                  if (v4 instanceof IdePurescript_PscIdeServer.Closed) {
                                      return Data_Functor["<$"](Control_Monad_Eff.functorEff)(Data_Maybe.Nothing.value)(Atom_NotificationManager.addInfo(v.notifications)("psc-ide-server exited with success code"));
                                  };
                                  if (v4 instanceof IdePurescript_PscIdeServer.StartError) {
                                      return Data_Functor["<$"](Control_Monad_Eff.functorEff)(Data_Maybe.Nothing.value)(Atom_NotificationManager.addError(v.notifications)("Could not start psc-ide-server process. Check the configured port number is valid.\n" + v4.value0));
                                  };
                                  throw new Error("Failed pattern match at IdePurescript.Atom.PscIdeServer line 44, column 22 - line 50, column 9: " + [ v4.constructor.name ]);
                              })()))(function (v5) {
                                  if (v5 instanceof Data_Maybe.Nothing) {
                                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit));
                                  };
                                  if (v5 instanceof Data_Maybe.Just) {
                                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(Control_Monad_Aff.launchAff(IdePurescript_PscIdeServer.stopServer($10.portRaw.value0)(v5.value0)));
                                  };
                                  throw new Error("Failed pattern match at IdePurescript.Atom.PscIdeServer line 50, column 9 - line 53, column 5: " + [ v5.constructor.name ]);
                              });
                          });
                      };
                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit));
                  });
              });
          });
      });
  })();
  exports["startServer"] = startServer;
})(PS["IdePurescript.Atom.PscIdeServer"] = PS["IdePurescript.Atom.PscIdeServer"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Atom_Config = PS["Atom.Config"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_Range = PS["Atom.Range"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var Data_Array = PS["Data.Array"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_Nullable = PS["Data.Nullable"];
  var Data_Traversable = PS["Data.Traversable"];
  var IdePurescript_Atom_Assist = PS["IdePurescript.Atom.Assist"];
  var IdePurescript_Atom_Build = PS["IdePurescript.Atom.Build"];
  var IdePurescript_Atom_Hooks_Linter = PS["IdePurescript.Atom.Hooks.Linter"];
  var IdePurescript_Atom_SelectView = PS["IdePurescript.Atom.SelectView"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var Node_FS = PS["Node.FS"];
  var PscIde = PS["PscIde"];        
  var showQuickFixes = function (modulesState) {
      return function (editor) {
          return function (linterMain) {
              return function (messages) {
                  var view = function (v) {
                      return "<li>" + (v.title + "</li>");
                  };
                  var inRange = function (editorLinter) {
                      return function (point) {
                          return function (message) {
                              return function __do() {
                                  var v = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(IdePurescript_Atom_Hooks_Linter.getMarkerBufferRange(editorLinter)(message))();
                                  return Data_Maybe.maybe(false)(function (r) {
                                      return Atom_Range.containsPoint(r)(point);
                                  })(v);
                              };
                          };
                      };
                  };
                  var getFix = function (v) {
                      return function (v1) {
                          if (v1.suggestion.hasSuggestion) {
                              var getTitle = function (v2) {
                                  if (v2 === "UnusedImport") {
                                      return "Remove import";
                                  };
                                  if (v2 === "RedundantEmptyHidingImport") {
                                      return "Remove import";
                                  };
                                  if (v2 === "DuplicateImport") {
                                      return "Remove import";
                                  };
                                  if (v2 === "RedundantUnqualifiedImport") {
                                      return "Remove import";
                                  };
                                  if (v2 === "DeprecatedQualifiedSyntax") {
                                      return "Remove qualified keyword";
                                  };
                                  if (v2 === "ImplicitImport") {
                                      return "Make import explicit";
                                  };
                                  if (v2 === "UnusedExplicitImport") {
                                      return "Remove unused references";
                                  };
                                  return "Apply Suggestion";
                              };
                              var getFix$prime = function (range) {
                                  return new Data_Maybe.Just({
                                      title: getTitle(v1.errorCode), 
                                      action: function __do() {
                                          Atom_Editor.setTextInBufferRange(editor)(range)(v1.suggestion.replacement)();
                                          return Control_Monad_Eff_Console.log("Applied fix: " + v1.errorCode)();
                                      }
                                  });
                              };
                              return function __do() {
                                  var v2 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Nullable.toMaybe)(IdePurescript_Atom_Hooks_Linter.getMarkerBufferRange(v)(v1))();
                                  return Data_Maybe.maybe(Data_Maybe.Nothing.value)(getFix$prime)(v2);
                              };
                          };
                          if (v1.errorCode === "UnknownValue" || (v1.errorCode === "UnknownType" || (v1.errorCode === "UnknownDataConstructor" || v1.errorCode === "UnknownTypeConstructor"))) {
                              return Prelude.pure(Control_Monad_Eff.applicativeEff)(new Data_Maybe.Just({
                                  title: "Fix typo", 
                                  action: IdePurescript_Atom_Assist.fixTypo(modulesState)
                              }));
                          };
                          return Prelude.pure(Control_Monad_Eff.applicativeEff)(Data_Maybe.Nothing.value);
                      };
                  };
                  var applyFix = function (v) {
                      return v.action;
                  };
                  return function __do() {
                      var v = Atom_Editor.getCursorBufferPosition(editor)();
                      var v1 = IdePurescript_Atom_Hooks_Linter.getEditorLinter(linterMain)(editor)();
                      var v2 = IdePurescript_Atom_Hooks_Linter.getMessages(v1)();
                      var v3 = Data_Array.filterM(Control_Monad_Eff.monadEff)(inRange(v1)(v))(v2)();
                      var v4 = Prelude["<$>"](Control_Monad_Eff.functorEff)(Data_Array.catMaybes)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Control_Monad_Eff.applicativeEff)(getFix(v1))(v3))();
                      return IdePurescript_Atom_SelectView.selectListViewStaticInline(view)(applyFix)(Data_Maybe.Nothing.value)(v4)();
                  };
              };
          };
      };
  };
  exports["showQuickFixes"] = showQuickFixes;
})(PS["IdePurescript.Atom.QuickFixes"] = PS["IdePurescript.Atom.QuickFixes"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var DOM = PS["DOM"];
  var Data_Maybe = PS["Data.Maybe"];
  var IdePurescript_Atom_Imports = PS["IdePurescript.Atom.Imports"];
  var IdePurescript_Atom_SelectView = PS["IdePurescript.Atom.SelectView"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var Node_FS = PS["Node.FS"];
  var PscIde = PS["PscIde"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];        
  var pursuitSearchModule = function (port) {
      return function (modulesState) {
          var view = function (v) {
              return "<li class='two-lines'>" + ("<div class='primary-line'>" + (v.module + ("</span></div>" + ("<div class='secondary-line'>" + (v["package"] + ("</div>" + "</li>"))))));
          };
          var importDialog = function (v) {
              var textView = function (x) {
                  return "<li>" + (x + "</li>");
              };
              var doImport = function (mod1) {
                  return function (x) {
                      return Control_Monad.when(Control_Monad_Eff.monadEff)(x === "Import module")(IdePurescript_Atom_Imports.addImport(port)(modulesState)(mod1));
                  };
              };
              return IdePurescript_Atom_SelectView.selectListViewStatic(textView)(doImport(v.module))(Data_Maybe.Nothing.value)([ "Import module", "Cancel" ]);
          };
          return IdePurescript_Atom_SelectView.selectListViewDynamic(view)(importDialog)(new Data_Maybe.Just("module"))(Prelude.id(Prelude.categoryFn))(IdePurescript_PscIde.getPursuitModuleCompletion(port))(1000);
      };
  };
  var pursuitSearch = function (port) {
      var view = function (v) {
          return "<li class='two-lines'>" + ("<div class='primary-line'>" + (v.identifier + (": <span class='text-info'>" + (v.type + ("</span></div>" + ("<div class='secondary-line'>" + (v.module + (" (" + (v["package"] + (")</div>" + "</li>"))))))))));
      };
      return IdePurescript_Atom_SelectView.selectListViewDynamic(view)(function (x) {
          return Control_Monad_Eff_Console.log(x.identifier);
      })(Data_Maybe.Nothing.value)(Prelude["const"](""))(IdePurescript_PscIde.getPursuitCompletion(port))(1000);
  };
  var localSearch = function (port) {
      return function (modulesState) {
          var view = function (v) {
              return "<li class='two-lines'>" + ("<div class='primary-line'>" + (v.identifier + (": <span class='text-info'>" + (v.type + ("</span></div>" + ("<div class='secondary-line'>" + (v.module + ("</div>" + "</li>"))))))));
          };
          var search = function (text) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.readRef(modulesState)))(function (v) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.getLoadedModules(port))(function (v1) {
                      var getQualifiedModule = Prelude.flip(IdePurescript_Modules.getQualModule)(v);
                      return IdePurescript_PscIde.getCompletion(port)(text)("")(false)(v1)(getQualifiedModule);
                  });
              });
          };
          return IdePurescript_Atom_SelectView.selectListViewDynamic(view)(function (x) {
              return Control_Monad_Eff_Console.log(x.identifier);
          })(Data_Maybe.Nothing.value)(Prelude["const"](""))(search)(50);
      };
  };
  exports["localSearch"] = localSearch;
  exports["pursuitSearchModule"] = pursuitSearchModule;
  exports["pursuitSearch"] = pursuitSearch;
})(PS["IdePurescript.Atom.Search"] = PS["IdePurescript.Atom.Search"] || {});
(function(exports) {
  // Generated by psc version 0.8.5.0
  "use strict";
  var Prelude = PS["Prelude"];
  var Control_Promise_1 = PS["Control.Promise"];
  var IdePurescript_Atom_Completion = PS["IdePurescript.Atom.Completion"];
  var IdePurescript_Atom_Psci = PS["IdePurescript.Atom.Psci"];
  var PscIde_1 = PS["PscIde"];
  var Atom_Atom = PS["Atom.Atom"];
  var Atom_CommandRegistry = PS["Atom.CommandRegistry"];
  var Atom_Config = PS["Atom.Config"];
  var Atom_Editor = PS["Atom.Editor"];
  var Atom_Grammar = PS["Atom.Grammar"];
  var Atom_NotificationManager = PS["Atom.NotificationManager"];
  var Atom_Pane = PS["Atom.Pane"];
  var Atom_Point = PS["Atom.Point"];
  var Atom_Project = PS["Atom.Project"];
  var Atom_Range = PS["Atom.Range"];
  var Atom_Workspace = PS["Atom.Workspace"];
  var Control_Bind = PS["Control.Bind"];
  var Control_Monad = PS["Control.Monad"];
  var Control_Monad_Aff = PS["Control.Monad.Aff"];
  var Control_Monad_Aff_AVar = PS["Control.Monad.Aff.AVar"];
  var Control_Monad_Eff = PS["Control.Monad.Eff"];
  var Control_Monad_Eff_Class = PS["Control.Monad.Eff.Class"];
  var Control_Monad_Eff_Console = PS["Control.Monad.Eff.Console"];
  var Control_Monad_Eff_Exception = PS["Control.Monad.Eff.Exception"];
  var Control_Monad_Eff_Ref = PS["Control.Monad.Eff.Ref"];
  var Control_Monad_Error_Class = PS["Control.Monad.Error.Class"];
  var Control_Promise_1 = PS["Control.Promise"];
  var DOM = PS["DOM"];
  var DOM_Node_Types = PS["DOM.Node.Types"];
  var Data_Array = PS["Data.Array"];
  var Data_Either = PS["Data.Either"];
  var Data_Foreign = PS["Data.Foreign"];
  var Data_Function_Eff = PS["Data.Function.Eff"];
  var Data_Maybe = PS["Data.Maybe"];
  var Data_String = PS["Data.String"];
  var IdePurescript_Atom_Assist = PS["IdePurescript.Atom.Assist"];
  var IdePurescript_Atom_Build = PS["IdePurescript.Atom.Build"];
  var IdePurescript_Atom_BuildStatus = PS["IdePurescript.Atom.BuildStatus"];
  var IdePurescript_Atom_Config = PS["IdePurescript.Atom.Config"];
  var IdePurescript_Atom_Hooks_Dependencies = PS["IdePurescript.Atom.Hooks.Dependencies"];
  var IdePurescript_Atom_Hooks_Linter = PS["IdePurescript.Atom.Hooks.Linter"];
  var IdePurescript_Atom_Hooks_StatusBar = PS["IdePurescript.Atom.Hooks.StatusBar"];
  var IdePurescript_Atom_Imports = PS["IdePurescript.Atom.Imports"];
  var IdePurescript_Atom_LinterBuild = PS["IdePurescript.Atom.LinterBuild"];
  var IdePurescript_Atom_PscIdeServer = PS["IdePurescript.Atom.PscIdeServer"];
  var IdePurescript_Atom_QuickFixes = PS["IdePurescript.Atom.QuickFixes"];
  var IdePurescript_Atom_Search = PS["IdePurescript.Atom.Search"];
  var IdePurescript_Atom_Tooltips = PS["IdePurescript.Atom.Tooltips"];
  var IdePurescript_Modules = PS["IdePurescript.Modules"];
  var IdePurescript_PscIde = PS["IdePurescript.PscIde"];
  var Node_ChildProcess = PS["Node.ChildProcess"];
  var Node_FS = PS["Node.FS"];
  var PscIde_1 = PS["PscIde"];        
  var raiseError = function (e) {
      return function __do() {
          var v = Atom_Atom.getAtom();
          return Atom_NotificationManager.addError(v.notifications)(Prelude.show(Control_Monad_Eff_Exception.showError)(e))();
      };
  };
  var logError = function (e) {
      return Control_Monad_Eff_Console.error(Prelude.show(Control_Monad_Eff_Exception.showError)(e));
  };
  var ignoreError = function (v) {
      return Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit);
  };
  var useEditor = function (modulesStateRef) {
      return function (editor) {
          return function __do() {
              var v = Atom_Editor.getPath(editor)();
              var v1 = Atom_Editor.getText(editor)();
              var v2 = IdePurescript_Atom_Config.getPscIdePort();
              var mainModule = IdePurescript_Modules.getMainModule(v1);
              if (v instanceof Data_Maybe.Just && mainModule instanceof Data_Maybe.Just) {
                  return Control_Monad_Aff.runAff(logError)(ignoreError)(Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_PscIde.loadDeps(v2)(mainModule.value0))(function () {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_Modules.getModulesForFile(v2)(v.value0)(v1))(function (v3) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(modulesStateRef)(v3)))(function () {
                              return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit);
                          });
                      });
                  }))();
              };
              return Prelude.unit;
          };
      };
  };
  var getSuggestions = function (state) {
      return function (v) {
          var raiseError$prime = function (x) {
              return function (e) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(raiseError(e)))(function () {
                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(x);
                  });
              };
          };
          var liftEff$prime$prime = Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff);
          return Control_Promise_1.fromAff(Prelude.flip(Control_Monad_Error_Class.catchError(Control_Monad_Aff.monadErrorAff))(raiseError$prime([  ]))((function () {
              var range = Atom_Range.mkRange(Atom_Point.mkPoint(Atom_Point.getRow(v.bufferPosition))(0))(v.bufferPosition);
              return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(Atom_Editor.getTextInRange(v.editor)(range)))(function (v1) {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(Atom_Atom.getAtom))(function (v2) {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(IdePurescript_Atom_Config.getPscIdePort))(function (v3) {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(liftEff$prime$prime(Atom_Config.getConfig(v2.config)("ide-purescript.autocomplete.allModules")))(function (v4) {
                              var autoCompleteAllModules = Data_Either.either(Prelude["const"](false))(Prelude.id(Prelude.categoryFn))(Data_Foreign.readBoolean(v4));
                              return Prelude.bind(Control_Monad_Aff.bindAff)((function () {
                                  var $59 = v.activatedManually || autoCompleteAllModules;
                                  if ($59) {
                                      return IdePurescript_PscIde.getLoadedModules(v3);
                                  };
                                  if (!$59) {
                                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(IdePurescript_Modules.getUnqualActiveModules(state)(Data_Maybe.Nothing.value));
                                  };
                                  throw new Error("Failed pattern match at IdePurescript.Atom.Main line 66, column 14 - line 67, column 3: " + [ $59.constructor.name ]);
                              })())(function (v5) {
                                  var getQualifiedModule = Prelude.flip(IdePurescript_Modules.getQualModule)(state);
                                  return IdePurescript_Atom_Completion.getSuggestions(v3)({
                                      line: v1, 
                                      moduleInfo: {
                                          modules: v5, 
                                          getQualifiedModule: getQualifiedModule
                                      }
                                  });
                              });
                          });
                      });
                  });
              });
          })()));
      };
  };
  var main = function __do() {
      var v = Atom_Atom.getAtom();
      var v1 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
      var v2 = Control_Monad_Eff_Ref.newRef(IdePurescript_Modules.initialModulesState)();
      var v3 = Control_Monad_Eff_Ref.newRef([  ])();
      var v4 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
      var v5 = Control_Monad_Eff_Ref.newRef(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))();
      var v6 = Control_Monad_Eff_Ref.newRef(Data_Maybe.Nothing.value)();
      var startPscIdeServer = Control_Monad_Aff.runAff(function (v7) {
          return Control_Monad_Eff_Console.log("Error starting server");
      })(ignoreError)(Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(IdePurescript_Atom_Config.getPscIdePort))(function (v7) {
          return Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_Atom_PscIdeServer.startServer)(function (v8) {
              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Control_Monad_Eff_Ref.writeRef(v5)(v8)))(function () {
                  return Prelude.bind(Control_Monad_Aff.bindAff)(PscIde_1.load(v7)([  ])([  ]))(function () {
                      return Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(function __do() {
                          var v9 = Atom_Workspace.getActiveTextEditor(v.workspace)();
                          return Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(useEditor(v2))(v9)();
                      });
                  });
              });
          });
      }));
      var restartPscIdeServer = function __do() {
          Control_Bind.join(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v5))();
          return startPscIdeServer();
      };
      var quickFix = function __do() {
          var v7 = Control_Monad_Eff_Ref.readRef(v3)();
          var v8 = Atom_Workspace.getActiveTextEditor(v.workspace)();
          var v9 = Control_Monad_Eff_Ref.readRef(v4)();
          var $78 = {
              editor: v8, 
              linter: v9, 
              n: Data_Array.length(v7)
          };
          if ($78.editor instanceof Data_Maybe.Just && ($78.linter instanceof Data_Maybe.Just && $78.n > 0)) {
              return IdePurescript_Atom_QuickFixes.showQuickFixes(v2)($78.editor.value0)($78.linter.value0)(v7)();
          };
          return Prelude.unit;
      };
      var doLint = function (file) {
          return function __do() {
              var v7 = IdePurescript_Atom_LinterBuild.getProjectRoot();
              var v8 = Control_Monad_Eff_Ref.readRef(v1)();
              var v9 = Control_Monad_Eff_Ref.readRef(v6)();
              var v10 = IdePurescript_Atom_Config.getPscIdePort();
              var $88 = {
                  root: v7, 
                  linterIndie: v8, 
                  statusElt: v9
              };
              if ($88.root instanceof Data_Maybe.Just && ($88.linterIndie instanceof Data_Maybe.Just && $88.statusElt instanceof Data_Maybe.Just)) {
                  return Control_Monad_Aff.runAff(raiseError)(ignoreError)(Prelude.bind(Control_Monad_Aff.bindAff)(IdePurescript_Atom_LinterBuild.lint(file)(v.config)($88.root.value0)($88.linterIndie.value0)($88.statusElt.value0))(function (v11) {
                      return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(Control_Monad_Eff_Ref.writeRef(v3))(v11)))(function () {
                          return Prelude.bind(Control_Monad_Aff.bindAff)(PscIde_1.load(v10)([  ])([  ]))(function () {
                              return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Atom_Workspace.getActiveTextEditor(v.workspace)))(function (v12) {
                                  return Prelude.bind(Control_Monad_Aff.bindAff)(Control_Monad_Eff_Class.liftEff(Control_Monad_Aff.monadEffAff)(Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(useEditor(v2))(v12)))(function () {
                                      return Prelude.pure(Control_Monad_Aff.applicativeAff)(Prelude.unit);
                                  });
                              });
                          });
                      });
                  }))();
              };
              return Prelude.unit;
          };
      };
      var deactivate = Control_Bind.join(Control_Monad_Eff.bindEff)(Control_Monad_Eff_Ref.readRef(v5));
      var activate = function __do() {
          var v7 = IdePurescript_Atom_Config.getPscIdePort();
          var cmd = function (name) {
              return function (action) {
                  return Atom_CommandRegistry.addCommand(v.commands)("atom-workspace")("purescript:" + name)(Prelude["const"](action));
              };
          };
          cmd("build")(doLint(Data_Maybe.Nothing.value))();
          cmd("show-quick-fixes")(quickFix)();
          cmd("pursuit-search")(IdePurescript_Atom_Search.pursuitSearch(v7))();
          cmd("pursuit-search-modules")(IdePurescript_Atom_Search.pursuitSearchModule(v7)(v2))();
          cmd("add-module-import")(IdePurescript_Atom_Imports.addModuleImportCmd(v7)(v2))();
          cmd("add-explicit-import")(IdePurescript_Atom_Imports.addExplicitImportCmd(v7)(v2))();
          cmd("search")(IdePurescript_Atom_Search.localSearch(v7)(v2))();
          cmd("case-split")(IdePurescript_Atom_Assist.caseSplit)();
          cmd("add-clause")(IdePurescript_Atom_Assist.addClause)();
          cmd("fix-typo")(IdePurescript_Atom_Assist.fixTypo(v2))();
          cmd("restart-psc-ide")(restartPscIdeServer)();
          IdePurescript_Atom_Hooks_Dependencies.installDependencies();
          Atom_Workspace.observeTextEditors(v.workspace)(function (editor) {
              return function __do() {
                  var v8 = Atom_Editor.getPath(editor)();
                  if (v8 instanceof Data_Maybe.Just && Data_String.contains(".purs")(v8.value0)) {
                      useEditor(v2)(editor)();
                      return Atom_Editor.onDidSave(editor)(function (v9) {
                          return function __do() {
                              var v10 = Atom_Config.getConfig(v.config)("ide-purescript.buildOnSave")();
                              return Control_Monad.when(Control_Monad_Eff.monadEff)(Data_Either.either(Prelude["const"](false))(Prelude.id(Prelude.categoryFn))(Data_Foreign.readBoolean(v10)))(doLint(v8))();
                          };
                      })();
                  };
                  return Prelude.unit;
              };
          })();
          Atom_Workspace.onDidChangeActivePaneItem(v.workspace)(function (item) {
              return Data_Maybe.maybe(Prelude.pure(Control_Monad_Eff.applicativeEff)(Prelude.unit))(useEditor(v2))(Atom_Editor.toEditor(item));
          })();
          IdePurescript_Atom_Tooltips.registerTooltips(v7)(v2)();
          startPscIdeServer();
          return IdePurescript_Atom_Psci.activate();
      };
      return Data_Foreign.toForeign({
          config: IdePurescript_Atom_Config.config, 
          activate: Data_Function_Eff.mkEffFn1(function (v7) {
              return activate;
          }), 
          deactivate: Data_Function_Eff.mkEffFn1(function (v7) {
              return deactivate;
          }), 
          consumeLinterIndie: Data_Function_Eff.mkEffFn1(function (registry) {
              return function __do() {
                  var v7 = IdePurescript_Atom_Hooks_Linter.register(registry)({
                      name: "PureScript"
                  })();
                  return Control_Monad_Eff_Ref.writeRef(v1)(new Data_Maybe.Just(v7))();
              };
          }), 
          consumeLinterInternal: Data_Function_Eff.mkEffFn1(function (linter) {
              return Control_Monad_Eff_Ref.writeRef(v4)(new Data_Maybe.Just(linter));
          }), 
          consumeStatusBar: Data_Function_Eff.mkEffFn1(function (statusBar) {
              return function __do() {
                  var v7 = IdePurescript_Atom_BuildStatus.getBuildStatus();
                  Control_Monad_Eff_Ref.writeRef(v6)(new Data_Maybe.Just(v7))();
                  return IdePurescript_Atom_Hooks_StatusBar.addLeftTile(statusBar)({
                      item: v7, 
                      priority: -50
                  })();
              };
          }), 
          provideAutocomplete: function (v7) {
              return {
                  selector: ".source.purescript", 
                  disableForSelector: ".source.purescript .comment, .source.purescript .string", 
                  inclusionPriority: 1, 
                  excludeLowerPriority: true, 
                  getSuggestions: Data_Function_Eff.mkEffFn1(function (x) {
                      return function __do() {
                          var v8 = Control_Monad_Eff_Ref.readRef(v2)();
                          return getSuggestions(v8)(x)();
                      };
                  }), 
                  onDidInsertSuggestion: Data_Function_Eff.mkEffFn1(function (x) {
                      return function __do() {
                          var v8 = Atom_Config.getConfig(v.config)("ide-purescript.autocomplete.addImport")();
                          var v9 = IdePurescript_Atom_Config.getPscIdePort();
                          return Control_Monad.when(Control_Monad_Eff.monadEff)(Prelude["=="](Data_Either.eqEither(Data_Foreign.eqForeignError)(Prelude.eqBoolean))(Data_Foreign.readBoolean(v8))(new Data_Either.Right(true)))(Control_Monad_Aff.runAff(raiseError)(ignoreError)(IdePurescript_Atom_Imports.addSuggestionImport(v9)(v2)(x)))();
                      };
                  })
              };
          }
      });
  };
  exports["logError"] = logError;
  exports["ignoreError"] = ignoreError;
  exports["raiseError"] = raiseError;
  exports["main"] = main;
  exports["useEditor"] = useEditor;
  exports["getSuggestions"] = getSuggestions;
})(PS["IdePurescript.Atom.Main"] = PS["IdePurescript.Atom.Main"] || {});
module.exports = PS["IdePurescript.Atom.Main"].main()
